[{"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\index.tsx":"1","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\reportWebVitals.ts":"2","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\App.tsx":"3","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Home.tsx":"4","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Signup.tsx":"5","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\HomeSitebar.tsx":"6","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Login.tsx":"7","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\SelectRole.tsx":"8","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\StudentPin.tsx":"9","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\TeacherPin.tsx":"10","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\StudentViewDashboard\\Chart.tsx":"11","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\AdminSignup.tsx":"12","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\MyDashboard.tsx":"13","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\Sitebar.tsx":"14","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\AddServiceHours.tsx":"15","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\UpdateServiceHours.tsx":"16","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\ViewEvents.tsx":"17","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\AdminDash.tsx":"18","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\EventSchedule.tsx":"19","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\AdminSitebar.tsx":"20","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageAccounts.tsx":"21","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\UpdateEvents.tsx":"22","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\AddEvents.tsx":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":16481,"mtime":1610751693936,"results":"27","hashOfConfig":"25"},{"size":1958,"mtime":1607186443137,"results":"28","hashOfConfig":"25"},{"size":7320,"mtime":1610817829036,"results":"29","hashOfConfig":"25"},{"size":922,"mtime":1607044109359,"results":"30","hashOfConfig":"25"},{"size":7568,"mtime":1610817561965,"results":"31","hashOfConfig":"25"},{"size":3373,"mtime":1610817537038,"results":"32","hashOfConfig":"25"},{"size":2920,"mtime":1608168315936,"results":"33","hashOfConfig":"25"},{"size":2515,"mtime":1608250166997,"results":"34","hashOfConfig":"25"},{"size":8365,"mtime":1610307579168,"results":"35","hashOfConfig":"25"},{"size":6862,"mtime":1610817998591,"results":"36","hashOfConfig":"25"},{"size":4984,"mtime":1610055503143,"results":"37","hashOfConfig":"25"},{"size":3729,"mtime":1609990145477,"results":"38","hashOfConfig":"25"},{"size":8441,"mtime":1610053506105,"results":"39","hashOfConfig":"25"},{"size":11576,"mtime":1610307821264,"results":"40","hashOfConfig":"25"},{"size":6170,"mtime":1610589654266,"results":"41","hashOfConfig":"25"},{"size":4111,"mtime":1610408410930,"results":"42","hashOfConfig":"25"},{"size":12938,"mtime":1610681548109,"results":"43","hashOfConfig":"25"},{"size":4431,"mtime":1610501479250,"results":"44","hashOfConfig":"25"},{"size":7174,"mtime":1610677202392,"results":"45","hashOfConfig":"25"},{"size":4872,"mtime":1610677170106,"results":"46","hashOfConfig":"25"},{"size":5302,"mtime":1610593815397,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1wlda11",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"50"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"50"},"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\index.tsx",[],["110","111"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\reportWebVitals.ts",[],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\App.tsx",["112","113"],"import React from \"react\";\nimport \"./App.css\";\nimport Signup from \"./Components/Home/Signup\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Chart from \"./Components/StudentView/StudentDashboard/StudentViewDashboard/Chart\";\nimport Login from \"./Components/Home/Login\";\nimport SelectRole from \"./Components/Home/SelectRole\";\nimport StudentPin from \"./Components/Home/StudentPin\";\nimport AdminSignup from \"./Components/Home/AdminSignup\";\nimport TeacherPin from \"./Components/Home/TeacherPin\";\nimport MyDashboard from \"./Components/StudentView/StudentDashboard/MyDashboard\";\nimport AddServiceHours from \"./Components/StudentView/StudentDashboard/AddServiceHours\";\nimport UpdateServiceHours from \"./Components/StudentView/StudentDashboard/UpdateServiceHours\";\nimport ViewEvents from \"./Components/StudentView/ViewEvents\";\nimport AdminDash from \"./Components/AdminView/AdminDash\";\nimport EventSchedule from \"./Components/AdminView/Events/EventSchedule\";\nimport ManageAccounts from \"./Components/AdminView/ManageAccounts\";\nimport Sitebar from \"./Components/Sitebar/Sitebar\";\nimport { Redirect } from \"react-router-dom\";\nimport UpdateEvents from \"./Components/AdminView/Events/UpdateEvents\";\nimport AddEvent from \"./Components/AdminView/Events/AddEvents\";\n\n//In App.tsx-- set state of indexNumber & setIndexNumber\n//pass indexNumber to UpdateServiceHours\n//pass setIndexNumber to Chart\n//Inside Chart- onClick function changes value indexNumber so that it reflects the current thing I'm clicking\n\ntype myState = {\n  indexNumber:any;\n  specificEntry: any;\n  date: any;\n  typeOfService: any;\n  description: any;\n  hours:any;\n  status: any; \n  studentUserId: any;\n  sessionToken: any;\n  email: any;\n  firstName: string;\n  lastName: string;\n  password: any;\n  studentAccount: any;\n  teacherAccount: any;\n  eventInformation: any;\n  classCode: any;\n  backArrowToggle: any;\n  serviceRequests: any;\n  setBackArrowToggle: (e: any) => void;\n  setServiceRequests: (e: any) => void;\n  setIndexNumber: (e: any) => void;\n  setSpecificEntry: (e: any) => void;\n  setEmail: (e: string) => void; //setEmail is a function that takes a string and returns nothing\n  setPassword: (e: any) => void;\n  setClassCode: (e: any) => void;\n  setFirstName: (e: any) => void;\n  setLastName: (e: any) => void;\n  setTeacherProfile: (e: any) => void;\n  isAdmin: any;\n  setIsAdminTrue: (e: any) => void;\n  setIsAdminFalse: (e: any) => void;\n  setDate: (e: any) => void;\n  setTypeOfService: (e: any) => void;\n  setDescription: (e: any) => void;\n  setHours: (e: any) => void;\n  setStatus: (e: any) => void;\n};\n\ntype myProps = {\n  updateToken: any;\n  collectToken: any;\n  clearToken:any;\n};\nclass App extends React.Component<{}, myState> {\n  constructor(props: myProps) {\n    super(props);\n    this.state = {\n      indexNumber:0,\n      specificEntry:[],\n      date: \" \",\n      typeOfService: \"\",\n      description: \"\",\n      hours:0,\n      status: \"Awaiting Approval\",\n      studentUserId: \"\",\n      backArrowToggle: false,\n      sessionToken: \"\",\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\",\n      serviceRequests: [],\n      studentAccount: [],\n      teacherAccount: [],\n      eventInformation: [],\n      classCode: \"\",\n      isAdmin: \"\",\n      setServiceRequests: (entry) => {\n        this.setState({serviceRequests: entry});\n      },\n      setBackArrowToggle: (e) => {\n        this.setState({backArrowToggle: e});\n      },\n      setSpecificEntry: (entry) => {\n        this.setState({specificEntry: entry});\n      },\n      setIndexNumber: (e) => {\n        this.setState({indexNumber: e});\n      },\n      setEmail: (email) => {\n        this.setState({ email: email });\n      },\n      setPassword: (pass) => {\n        this.setState({ password: pass });\n      },\n      setClassCode: (code) => {\n        this.setState({ classCode: code });\n      },\n      setFirstName: (first) => {\n        this.setState({ firstName: first });\n      },\n      setLastName: (last) => {\n        this.setState({ lastName: last });\n      },\n      setTeacherProfile: (info) => {\n        this.setState({teacherAccount: info});\n      },\n      setIsAdminTrue: (e) => {\n        this.setState({isAdmin: e});\n      },\n      setIsAdminFalse: (e) => {\n        this.setState({isAdmin: e});\n      },\n      setDate: (date) => {\n        this.setState({ date: date });\n      },\n      setTypeOfService: (desc) => {\n        this.setState({ typeOfService: desc });\n      },\n      setDescription: (desc) => {\n        this.setState({ description: desc });\n      },\n      setHours: (hours) => {\n        this.setState({ hours:hours });\n      },\n      setStatus: (status) => {\n        this.setState({ status:status });\n      },\n\n\n    };\n    console.log(\"[App.js] Constructor\");\n  }\n\n  //fetchTeacherStuff is called when you login\n  //also call fetchTeacherStuff when you don't have information\n  //component did mount-- make it so that renders empty array while waiting for teacherstuff fetch\n  //token is unique identifier \n  \n  //Here we are calling the setState() method and updating our value of session token\n  collectToken = () => {\n    if (localStorage.getItem(\"token\")) {\n      this.setState({ sessionToken: localStorage.getItem(\"token\") });\n    } else {\n      console.log(\"goodbye\");\n    }\n  };\n\n  //pass as props?\n  updateToken = (newToken: any) => {\n    localStorage.setItem(\"token\", newToken);\n    this.setState({ sessionToken: newToken });\n    console.log(newToken);\n  };\n\n  clearToken = () => {\n    localStorage.clear();\n    this.setState({ sessionToken: \"\" });\n  };\n\n  componentDidMount() {\n    console.log(\"[App.js] component did mount\");\n    this.collectToken();\n  }\n\n  // arrowHandler = () => {\n    \n  //   this.state.backArrowToggle === true\n  //     ? this.setState({ backArrowToggle: false })\n  //     : this.setState({ backArrowToggle: true });\n  // };\n\n  render() {\n    console.log(\"[App.js] render\");\n\n    return (\n      <div>\n        {console.log(this.state.sessionToken)}\n\n        <BrowserRouter>\n          <Switch>\n       \n         \n              <Route exact path=\"/mydashboard\">\n                <MyDashboard\n                indexNumber={this.state.indexNumber}\n                setIndexNumber={this.state.setIndexNumber}\n                specificEntry={this.state.specificEntry}\n                setSpecificEntry={this.state.setSpecificEntry}\n                isAdmin={this.state.isAdmin}\n                  firstName={this.state.firstName}\n                  lastName={this.state.lastName}\n                  sessionToken={this.state.sessionToken}\n                  backArrowToggle={this.state.backArrowToggle}\n                  // arrowHandler={this.arrowHandler}\n                  key={this.state.sessionToken}\n                  setIsAdminFalse={this.state.setIsAdminFalse}\n                  clearToken={this.clearToken}\n                  serviceRequests={this.state.serviceRequests}\n               setServiceRequests={this.state.setServiceRequests}\n               setBackArrowToggle={this.state.setBackArrowToggle}\n            \n                />\n              </Route>\n              <Route exact path=\"/admindash\">\n              <AdminDash\n              setIsAdminTrue={this.state.setIsAdminTrue}\n              setBackArrowToggle={this.state.setBackArrowToggle}\n                sessionToken={this.state.sessionToken}\n                teacherAccount={this.state.teacherAccount}\n                backArrowToggle={this.state.backArrowToggle}\n                // arrowHandler={this.arrowHandler}\n                key={this.state.sessionToken}\n                clearToken={this.clearToken}\n                isAdmin={this.state.isAdmin}\n              />\n            </Route>\n           \n            <Route exact path=\"/\">\n              <Login\n                updateToken={this.updateToken}\n                firstName={this.state.firstName}\n                lastName={this.state.lastName}\n                email={this.state.email}\n                password={this.state.password}\n                sessionToken={this.state.sessionToken}\n                setEmail={this.state.setEmail}\n                setPassword={this.state.setPassword}\n                classCode={this.state.classCode}\n                setClassCode={this.state.setClassCode}\n                collectToken={this.collectToken}\n                isAdmin={this.state.isAdmin}\n                setIsAdminTrue={this.state.setIsAdminTrue}\n                setIsAdminFalse={this.state.setIsAdminFalse}\n                setTeacherProfile={this.state.setTeacherProfile}\n               \n              />\n            </Route>\n            <Route exact path=\"/selectrole\">\n              <SelectRole />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup\n                updateToken={this.updateToken}\n                firstName={this.state.firstName}\n                lastName={this.state.lastName}\n                email={this.state.email}\n                password={this.state.password}\n                sessionToken={this.state.sessionToken}\n                setEmail={this.state.setEmail}\n                setPassword={this.state.setPassword}\n                classCode={this.state.classCode}\n                setClassCode={this.state.setClassCode}\n                setFirstName={this.state.setFirstName}\n                setLastName={this.state.setLastName}\n                setIsAdminFalse={this.state.setIsAdminFalse}\n              />\n            </Route>\n            <Route exact path=\"/adminsignup\">\n              <AdminSignup\n                updateToken={this.updateToken}\n                firstName={this.state.firstName}\n                lastName={this.state.lastName}\n                email={this.state.email}\n                password={this.state.password}\n                sessionToken={this.state.sessionToken}\n                setEmail={this.state.setEmail}\n                setPassword={this.state.setPassword}\n                classCode={this.state.classCode}\n                setClassCode={this.state.setClassCode}\n                setFirstName={this.state.setFirstName}\n                setLastName={this.state.setLastName}\n                teacherAccount={this.state.teacherAccount}\n                setTeacherProfile={this.state.setTeacherProfile}\n              />\n            </Route>\n            <Route exact path=\"/studentpin\">\n              <StudentPin\n                classCode={this.state.classCode}\n                setClassCode={this.state.setClassCode}\n              />\n            </Route>\n            <Route exact path=\"/teacherpin\">\n              <TeacherPin sessionToken={this.state.sessionToken}\n              teacherAccount={this.state.teacherAccount} />\n            </Route>\n            <Route exact path=\"/chart\">\n              <Chart   serviceRequests={this.state.serviceRequests}\n               setServiceRequests={this.state.setServiceRequests}\n               sessionToken={this.state.sessionToken}\n               setIndexNumber={this.state.setIndexNumber} \n               indexNumber={this.state.indexNumber}\n               specificEntry={this.state.specificEntry}\n               setSpecificEntry={this.state.setSpecificEntry}/>\n            </Route>\n\n            <Route exact path=\"/addservice\">\n              <AddServiceHours\n              setBackArrowToggle={this.state.setBackArrowToggle}\n              setIsAdminFalse={this.state.setIsAdminFalse}\n               isAdmin={this.state.isAdmin}\n                backArrowToggle={this.state.backArrowToggle}\n                // arrowHandler={this.arrowHandler}\n                clearToken={this.clearToken}\n                sessionToken={this.state.sessionToken}\n                date= {this.state.date}\n                typeOfService= {this.state.typeOfService}\n                description= {this.state.description}\n                hours= {this.state.hours}\n                status={this.state.status}\n                studentUserId={this.state.studentUserId}\n                setDate={this.state.setDate}\n                setTypeOfService={this.state.setTypeOfService}\n                setDescription={this.state.setDescription}\n                setHours={this.state.setHours}\n                setStatus={this.state.setStatus}\n  \n                \n                \n              />\n            </Route>\n            <Route exact path=\"/editservice\">\n              <UpdateServiceHours\n               specificEntry={this.state.specificEntry}\n               setSpecificEntry={this.state.setSpecificEntry}\n               serviceRequests={this.state.serviceRequests}\n               setServiceRequests={this.state.setServiceRequests}\n               setIsAdminFalse={this.state.setIsAdminFalse}\n               isAdmin={this.state.isAdmin}\n                backArrowToggle={this.state.backArrowToggle}\n                // arrowHandler={this.arrowHandler}\n                clearToken={this.clearToken}\n                sessionToken={this.state.sessionToken}\n                date= {this.state.date}\n                typeOfService= {this.state.typeOfService}\n                description= {this.state.description}\n                hours= {this.state.hours}\n                status={this.state.status}\n                studentUserId={this.state.studentUserId}\n                setDate={this.state.setDate}\n                setTypeOfService={this.state.setTypeOfService}\n                setDescription={this.state.setDescription}\n                setHours={this.state.setHours}\n                setStatus={this.state.setStatus}\n                indexNumber={this.state.indexNumber}\n                setBackArrowToggle={this.state.setBackArrowToggle}\n               \n              />\n            </Route>\n            <Route exact path=\"/events\">\n              <ViewEvents\n              setBackArrowToggle={this.state.setBackArrowToggle}\n               setIsAdminFalse={this.state.setIsAdminFalse}\n               isAdmin={this.state.isAdmin}\n                backArrowToggle={this.state.backArrowToggle}\n                // arrowHandler={this.arrowHandler}\n                clearToken={this.clearToken}\n                sessionToken={this.state.sessionToken}\n              \n              />\n            </Route>\n            {/* <Route exact path=\"/admindash\">\n              <AdminDash\n                sessionToken={this.state.sessionToken}\n                teacherAccount={this.state.teacherAccount}\n                backArrowToggle={this.state.backArrowToggle}\n                arrowHandler={this.arrowHandler}\n                key={this.state.sessionToken}\n                clearToken={this.clearToken}\n                isAdmin={this.state.isAdmin}\n              />\n            </Route> */}\n            <Route exact path=\"/adminevent\">\n              <EventSchedule\n              setIsAdminTrue={this.state.setIsAdminTrue}\n              setBackArrowToggle={this.state.setBackArrowToggle}\n                backArrowToggle={this.state.backArrowToggle}\n                // arrowHandler={this.arrowHandler}\n                clearToken={this.clearToken}\n                sessionToken={this.state.sessionToken}\n              />\n            </Route>\n            <Route exact path=\"/manageaccounts\">\n              <ManageAccounts\n               setIsAdminTrue={this.state.setIsAdminTrue}\n                teacherAccount={this.state.teacherAccount}\n                backArrowToggle={this.state.backArrowToggle}\n                // arrowHandler={this.arrowHandler}\n                clearToken={this.clearToken}\n                sessionToken={this.state.sessionToken}\n                setBackArrowToggle={this.state.setBackArrowToggle}\n                classCode={this.state.classCode}\n              />\n            </Route>\n\n            <Route exact path=\"/eventupdate\">\n              <UpdateEvents  \n              clearToken={this.clearToken}\n                setIsAdminTrue={this.state.setIsAdminTrue}\n                backArrowToggle={this.state.backArrowToggle}\n                sessionToken={this.state.sessionToken}\n                setBackArrowToggle={this.state.setBackArrowToggle}\n             \n              />\n            </Route>\n\n            <Route exact path=\"/addevent\">\n              <AddEvent  \n              clearToken={this.clearToken}\n                setIsAdminTrue={this.state.setIsAdminTrue}\n                backArrowToggle={this.state.backArrowToggle}\n                sessionToken={this.state.sessionToken}\n                setBackArrowToggle={this.state.setBackArrowToggle}\n             \n              />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Home.tsx",["114","115","116","117","118","119"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Signup.tsx",["120"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\HomeSitebar.tsx",["121","122"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Login.tsx",["123","124"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\SelectRole.tsx",["125","126"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\StudentPin.tsx",["127","128"],"import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {\r\n  Link\r\n } from \"react-router-dom\";\r\n\r\n function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype AcceptedProps={\r\n  setClassCode?:any,\r\n  classCode:any,\r\n  sessionToken?:any\r\n}\r\n\r\n\r\nclass StudentPin extends React.Component<AcceptedProps,{}> {\r\n  render() {\r\n    return (\r\n      <div> \r\n\r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n      <div className=\"formPadding\">\r\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          Find Your Group\r\n        </Typography>\r\n        <br></br>\r\n        \r\n        <form noValidate>\r\n          <Grid container spacing={2}>\r\n         \r\n        \r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"Code\"\r\n                label=\"ENTER CODE \"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => {\r\n                  this.props.setClassCode(e.target.value)\r\n                  console.log(this.props.setClassCode)\r\n              \r\n                }}\r\n                defaultValue={this.props.classCode}\r\n              />\r\n        \r\n         \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n        \r\n        \r\n      \r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Link to= \"/signup\">\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n          <ArrowForwardIcon />\r\n          </Button></Link>\r\n        \r\n      \r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item className=\"smallMarginTop\">\r\n            <Link  to=\"/\">\r\n                {\"Already have an account? Sign in\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n      </div>\r\n      \r\n</Container>\r\n\r\n</div>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentPin;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\TeacherPin.tsx",["129","130","131","132"],"import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Link\r\n \r\n } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\ntype myProps={\r\n  sessionToken:any,\r\n  teacherAccount: any\r\n}\r\n\r\n\r\n\r\nclass TeacherPin extends React.Component<myProps,{}> {\r\n\r\n  componentDidMount(){\r\n    console.log(this.props.teacherAccount.teacherUser?.classId)\r\n  }\r\n  render() {\r\n    \r\n    \r\n    return (\r\n      <div> \r\n\r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n      <div className=\"formPadding\">\r\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          CLASS CODE:\r\n          {this.props.teacherAccount.teacherUser?.classId}\r\n        </Typography>\r\n        <h5 className=\"signupTitle\"> Students will use this code to join your group. </h5>\r\n        <br></br>\r\n        \r\n        <form noValidate>\r\n          <Grid container spacing={2}>\r\n         \r\n        \r\n            <Grid item xs={12}>\r\n            <h1 className=\"signupTitle\"></h1>\r\n         \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n        \r\n        \r\n      \r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Link to=\"/chart\">\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n          <ArrowForwardIcon />\r\n          </Button></Link>\r\n        \r\n      \r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n      \r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n      </div>\r\n      \r\n</Container>\r\n\r\n</div>\r\n  </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherPin;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\StudentViewDashboard\\Chart.tsx",["133","134","135","136"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SettingsPowerRounded } from \"@material-ui/icons\";\r\n\r\n\r\n\r\ntype AcceptedProps = {\r\n  setIndexNumber: any;\r\n  sessionToken: any;\r\n  serviceRequests: any;\r\n  setServiceRequests: (e: any) => void;\r\n  indexNumber: any;\r\n  setSpecificEntry: (e: any) => void;\r\n  specificEntry: any;\r\n};\r\n\r\ntype myState = {\r\n  open: any;\r\n  itemId: any;\r\n\r\n  setOpen: (e: any) => void;\r\n};\r\n\r\nexport default class Chart extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      itemId: 100,\r\n      open: false,\r\n      setOpen: (e) => {\r\n        this.setState({ open: e });\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchServiceRequests();\r\n    console.log(this.props.serviceRequests);\r\n  }\r\n  fetchServiceRequests = () => {\r\n    fetch(\"http://localhost:4000/service\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        this.props.setServiceRequests(json); //taking information from the server and setting it to our state\r\n        console.log(this.props.serviceRequests);\r\n      });\r\n  };\r\n\r\n  //   deleteEntry = () =>{\r\n  //     fetch(`http://localhost:4000/service/${this.props.indexNumber}`,{\r\n  //         method: 'DELETE',\r\n  //         headers: new Headers({\r\n  //             'Content-Type': 'application/json',\r\n  //             'Authorization': this.props.sessionToken\r\n  //         })\r\n  //     })\r\n  //     .then(res => {\r\n  //       if(res.status === 200){\r\n  //         console.log(\"Item successfully deleted\")\r\n  //       }\r\n  //       else{\r\n  //         console.log(\"Oop. Did not delete\")\r\n  //       }\r\n  //     })\r\n  // }\r\n\r\n  deleteEntryAsync2 = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:4000/service/${this.props.indexNumber}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: new Headers({\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: this.props.sessionToken,\r\n          }),\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      console.log(json);\r\n      this.fetchServiceRequests();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <TableContainer\r\n        style={{ paddingLeft: \"15px\", paddingRight: \"15px\" }}\r\n        component={Paper}\r\n      >\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n\r\n              <IconButton size=\"small\">\r\n                <TableCell></TableCell>\r\n              </IconButton>\r\n              <TableCell>Date of Service</TableCell>\r\n              <TableCell>Service Type</TableCell>\r\n              <TableCell align=\"center\">Hours</TableCell>\r\n              <TableCell align=\"center\">Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.props.serviceRequests.length > 0 ? (\r\n              this.props.serviceRequests.map((service: any, index: any) => (\r\n                <React.Fragment key={this.props.serviceRequests.id}>\r\n                  <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <IconButton\r\n                      aria-label=\"expand row\"\r\n                      size=\"small\"\r\n                      onClick={ (e) => {\r\n                       \r\n                          this.state.itemId !==\r\n                          this.props.serviceRequests[index].id\r\n                            ? this.setState({\r\n                                itemId: this.props.serviceRequests[index].id,\r\n                              })\r\n                            : this.setState({ itemId: 100 });\r\n\r\n                            this.props.setSpecificEntry(\r\n                              this.props.serviceRequests[index]\r\n                            );\r\n                            \r\n                            this.props.setIndexNumber(\r\n                              this.props.serviceRequests[index].id\r\n                            );\r\n\r\n                            \r\n\r\n                            \r\n\r\n                        \r\n                         \r\n                        } }\r\n                    >\r\n                      {this.props.serviceRequests[index].id ===\r\n                      this.state.itemId ? (\r\n                        <KeyboardArrowUpIcon />\r\n                      ) : (\r\n                        <KeyboardArrowDownIcon />\r\n                      )}\r\n                    </IconButton>\r\n                    <TableCell align=\"left\">\r\n                      {\" \"}\r\n                      {this.props.serviceRequests[index]?.date}\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"left\">\r\n                      {this.props.serviceRequests[index]?.typeOfService}{\" \"}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {this.props.serviceRequests[index]?.hours}{\" \"}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">Awaiting Approval </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      className=\"noPadding\"\r\n                      style={{ paddingBottom: 0, paddingTop: 0 }}\r\n                      colSpan={6}\r\n                      onClick={ () => {\r\n                        this.setState({\r\n                            itemId: this.props.serviceRequests[index].id,\r\n                          })\r\n                        }\r\n                      }\r\n                      // onClick={() =>\r\n                      //   this.setState({\r\n                      //     itemId: this.props.serviceRequests[index].id,\r\n                      //   })\r\n                      // }\r\n                    >\r\n                      <Collapse\r\n                        in={\r\n                          this.props.serviceRequests[index].id ===\r\n                          this.state.itemId\r\n                        }\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                      >\r\n                        <Box style={{ padding: \"5px\" }} margin={1}>\r\n                          <Box className=\"editIcon\">\r\n                            <h5 style={{ marginRight: \"auto\" }}>Details</h5>\r\n                            <Link to=\"/editservice\">\r\n                              <EditIcon style={{ marginRight: \"10px\" }} />\r\n                            </Link>\r\n                            <DeleteIcon\r\n                              onClick={() => {\r\n                                this.deleteEntryAsync2();\r\n                              }}\r\n                            />\r\n                          </Box>\r\n\r\n                          <p style={{ padding: \"15px\" }}>\r\n                            {this.props.serviceRequests[index]?.description}\r\n                          </p>\r\n                        </Box>\r\n                      </Collapse>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </React.Fragment>\r\n              ))\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\AdminSignup.tsx",["137"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\MyDashboard.tsx",["138","139","140","141","142","143"],"import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Sitebar from \"../../Sitebar/Sitebar\";\r\nimport Chart from \"../../StudentView/StudentDashboard/StudentViewDashboard/Chart\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nlet percentage = 56;\r\n\r\ntype AcceptedProps = {\r\n  indexNumber:any;\r\n  firstName: string;\r\n  lastName: string;\r\n  sessionToken: any;\r\n  key: any;\r\n  backArrowToggle: any;\r\n  arrowHandler?: any;\r\n  setBackArrowToggle:(e:any)=>void;\r\n  clearToken: any;\r\n  isAdmin: any;\r\n  setIsAdminFalse: any;\r\n  serviceRequests:any;\r\n  setServiceRequests: (e: any) => void;\r\n  setIndexNumber:(e:any)=>void;\r\n  setSpecificEntry:(e:any)=>void;\r\n  specificEntry:any;\r\n               \r\n\r\n};\r\n\r\nlet arr:any= [0]\r\nlet sum:number=0;\r\nconst add= (a:number , b:number )=> a + b\r\n\r\nclass MyDashboard extends React.Component<AcceptedProps, {}> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n  }\r\n\r\n\r\n\r\n  checkForToken = () => {\r\n    console.log(this.props.isAdmin)\r\n    \r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  };\r\n\r\n percentage=() =>{\r\n  {this.arrLength()}\r\n  {this.props.serviceRequests.length > 0 ? this.props.serviceRequests?.map((service: any, index: any) =>(\r\n    \r\n   arr.push(this.props.serviceRequests[index].hours)\r\n  ))\r\n : console.log('did not work')}\r\n {this.props.serviceRequests.length > 0 ? sum = arr.reduce(add) : sum=0}\r\n \r\n}\r\n\r\nfetchServiceRequests = () => {\r\n  fetch(\"http://localhost:4000/service\", {\r\n    method: \"GET\",\r\n    headers: new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: this.props.sessionToken,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      console.log(json);\r\n      this.props.setServiceRequests(json); //taking information from the server and setting it to our state\r\n      console.log(this.props.serviceRequests);\r\n    });\r\n};\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.firstName);\r\n    this.props.setBackArrowToggle(false) \r\n    this.props.setIsAdminFalse(false);\r\n    this.arrLength()\r\n    this.fetchServiceRequests();\r\n    this.percentage()\r\n    this.checkForToken()\r\n    \r\n    }\r\n   \r\n    arrLength=()=>{arr.length=0}\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        \r\n        <Sitebar \r\n          backArrowToggle={this.props.backArrowToggle}\r\n          // arrowHandler={this.props.arrowHandler}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />\r\n        <Box className=\"studentDash\">\r\n          <h4 style={{ textAlign: \"center\", marginTop: \"30px\" }}>\r\n            My Dashboard\r\n          </h4>\r\n\r\n          <Box className=\"progressCircle\">\r\n            <CircularProgressbar value={sum/30 * 100} text={`${sum}/30`} />\r\n          </Box>\r\n          <Box\r\n            className=\"studentChart\"\r\n            style={{ background: \"#F6D55C\", padding: \"0px\" }}\r\n          >\r\n            <Box className=\"toRight\">\r\n              {\" \"}\r\n              <ButtonGroup\r\n                style={{ background: \"#F6D55C\" }}\r\n                className=\"toRight\"\r\n                disableElevation\r\n                variant=\"contained\"\r\n                aria-label=\"text primary button group\"\r\n              >\r\n                <Link to=\"/addservice\">\r\n                  <Button style={{ background: \"#F6D55C\" }}>\r\n                    <AddBoxIcon />\r\n                  </Button>\r\n                </Link>\r\n                <Link to=\"/events\">\r\n                  {\" \"}\r\n                  <Button style={{ background: \"#F6D55C\", marginRight: \"0px\" }}>\r\n                    <EventNoteIcon />\r\n                  </Button>\r\n                </Link>\r\n              </ButtonGroup>\r\n            </Box>\r\n          </Box>\r\n          <Box className=\"studentChart\">\r\n            <Chart serviceRequests={this.props.serviceRequests}\r\n               setServiceRequests={this.props.setServiceRequests}\r\n               sessionToken={this.props.sessionToken}\r\n               setIndexNumber={this.props.setIndexNumber}\r\n               indexNumber={this.props.indexNumber}\r\n               specificEntry={this.props.specificEntry}\r\n               setSpecificEntry={this.props.setSpecificEntry}\r\n\r\n               />\r\n          </Box>\r\n        </Box>\r\n        {this.checkForToken()}\r\n        { this.percentage()}\r\n        {this.arrLength()}\r\n  \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyDashboard;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\Sitebar.tsx",["144","145","146"],"import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\n// type myState = {\r\n//   anchorE1: any;\r\n//   setAnchorE1: (e: any) => void;\r\n// };\r\ntype AcceptedProps = {\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  sessionToken: any;\r\n};\r\n\r\ntype myState = {\r\n  anchorE1: any;\r\n  anchorOriginVertical: any;\r\n  anchorOriginHorizontal: any;\r\n  transformOriginVertical: any;\r\n  transformOriginHorizontal: any;\r\n  anchorReference: any;\r\n};\r\n\r\nclass Sitebar extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      anchorE1: null,\r\n      anchorOriginVertical: \"bottom\",\r\n      anchorOriginHorizontal: \"right\",\r\n      transformOriginVertical: \"top\",\r\n      transformOriginHorizontal: \"right\",\r\n      anchorReference: \"anchorEl\",\r\n    };\r\n  }\r\n\r\n  deleteUser = async()=>{\r\n    try{\r\n      const response= await \r\n          fetch(`http://localhost:4000/user/delete`,{\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.sessionToken\r\n                })\r\n            })\r\n            const json= await response.json()\r\n            console.log(json)\r\n            console.log('Profile is deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  \r\n  }\r\n\r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return console.log(\"hello\");\r\n    }\r\n  };\r\n\r\n  handleMenu = (e: any) => {\r\n    this.setState({ anchorE1: e.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorE1: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorE1 } = this.state;\r\n    const open = Boolean(this.state.anchorE1);\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar position=\"static\">\r\n          <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            {this.props.backArrowToggle === true ? (\r\n              <Link to=\"/myDashboard\">\r\n                <IconButton>\r\n                  <ArrowBackIcon style={{ color: \"white\" }} />\r\n                </IconButton>\r\n              </Link>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          \r\n            <div>\r\n              <IconButton onClick={this.handleMenu}>\r\n                <MenuIcon style={{color:\"white\"}} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorE1}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    this.props.clearToken();\r\n                  }}\r\n                >\r\n                  Logout \r\n                </MenuItem>\r\n                <MenuItem   onClick={() => {\r\n                    this.deleteUser();\r\n                    this.props.clearToken();\r\n                  }}>Delete Account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.checkForToken()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sitebar;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\AddServiceHours.tsx",["147","148","149","150","151","152"],"import React, { Component } from \"react\";\r\nimport Sitebar from \"../../Sitebar/Sitebar\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype AcceptedProps = {\r\n  setBackArrowToggle:(e:any)=>void;\r\n  setIsAdminFalse: any;\r\n  isAdmin: any;\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  date: any;\r\n  typeOfService: any;\r\n  description: any;\r\n  hours: any;\r\n  status: any;\r\n  studentUserId: any;\r\n  setDate: (e: any) => void;\r\n  setTypeOfService: (e: any) => void;\r\n  setDescription: (e: any) => void;\r\n  setHours: (e: any) => void;\r\n  setStatus: (e: any) => void;\r\n};\r\n\r\ntype myState={\r\n  serviceUpdate:boolean;\r\n  setServiceUpdate:(e:any)=> void;\r\n}\r\n\r\nclass AddServiceHours extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      serviceUpdate:false,\r\n      setServiceUpdate: (e) => {this.setState({serviceUpdate: e})}\r\n    };\r\n \r\n  }\r\n  componentDidMount() {\r\n    this.props.setBackArrowToggle(true) \r\n    this.props.setIsAdminFalse(false);\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`http://localhost:4000/service`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        service: {\r\n          date: this.props.date,\r\n          typeOfService: this.props.typeOfService,\r\n          description: this.props.description,\r\n          hours: this.props.hours,\r\n          status: this.props.status,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(\"Service submission was successful\");\r\n        this.state.setServiceUpdate(true);\r\n        //set each prop to empty\r\n        this.props.setDate(\"\")\r\n        this.props.setHours(0)\r\n        this.props.setTypeOfService(\"\")\r\n        this.props.setDescription(\"\")\r\n      } else {\r\n        console.log(\"Service submission failed\");\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n  checkForServiceEntry=() => {\r\n    if (this.state.serviceUpdate){\r\n      return <Redirect to=\"/mydashboard\"/>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          // arrowHandler={this.props.arrowHandler}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />\r\n        <Container\r\n          style={{ paddingLeft: \"40px\", paddingRight: \"40px\" }}\r\n          component=\"main\"\r\n          maxWidth=\"xs\"\r\n        >\r\n          <CssBaseline />\r\n          <div style={{ marginTop: \"25px\" }}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Add Service\r\n            </Typography>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <form noValidate>\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label=\"Date of Service\"\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.props.setDate(e.target.value);\r\n                        console.log(this.props.date);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={0}\r\n                    />\r\n                  </form>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Type of Service\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.props.setTypeOfService(e.target.value);\r\n                        console.log(this.props.typeOfService);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={\" \"}\r\n                    >\r\n                      <MenuItem value={\"Tutoring\"}>Tutoring</MenuItem>\r\n                      <MenuItem value={\"Recycling\"}>Recycling</MenuItem>\r\n                      <MenuItem value={\"NJHS Sponsored Event\"}>\r\n                        NJHS Sponsored Event\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Volunteering\"}>\r\n                        Volunteering\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    label=\"Description of Service\"\r\n                    id=\"text\"\r\n                    onChange={(e) => {\r\n                      this.props.setDescription(e.target.value);\r\n                      console.log(this.props.description);\r\n                    }}\r\n                    defaultValue={\" \"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160, marginBottom: \"25px\" }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Number of Hours\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.props.setHours(e.target.value);\r\n                        console.log(this.props.hours);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={0}\r\n                    >\r\n                      <MenuItem value={1}>1 hour </MenuItem>\r\n                      <MenuItem value={2}>2 hours </MenuItem>\r\n                      <MenuItem value={3}>3 hours</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n              </Grid>\r\n              {/* <Link to=\"/mydashboard\"> */}\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              {/* </Link> */}\r\n              <Grid container justify=\"flex-end\"></Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        {console.log(this.props.typeOfService)}\r\n        {console.log(this.props.hours)}\r\n        {console.log(this.props.description)}\r\n        {this.checkForServiceEntry()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddServiceHours;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\UpdateServiceHours.tsx",["153","154"],"import React, { Component } from \"react\";\r\nimport Sitebar from \"../../Sitebar/Sitebar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype AcceptedProps = {\r\n  indexNumber:any;\r\n  setIsAdminFalse: any;\r\n  isAdmin:any;\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  date: any;\r\n  typeOfService: any;\r\n  description: any;\r\n  hours: any;\r\n  status: any;\r\n  studentUserId: any;\r\n  serviceRequests: any;\r\n  setDate: (e: any) => void;\r\n  setTypeOfService: (e: any) => void;\r\n  setDescription: (e: any) => void;\r\n  setHours: (e: any) => void;\r\n  setStatus: (e: any) => void;\r\n  setServiceRequests: (e: any) => void;\r\n  setSpecificEntry?:(e:any)=>void;\r\n  specificEntry?:any;\r\n  setBackArrowToggle:(e:any)=>void; \r\n};\r\n\r\ntype myState={\r\n  serviceUpdate:boolean;\r\n  setServiceUpdate:(e:any)=> void;\r\n  setEntryById:(e:any)=> void;\r\n  setDate:(e:any)=> void;\r\n  setTypeOfService:(e:any)=> void;\r\n  setDescription:(e:any)=> void;\r\n  setHours:(e:any)=> void;\r\n  entryById:any;\r\n  date: any;\r\n  typeOfService: any;\r\n  description: any;\r\n  hours: any;\r\n}\r\n\r\n\r\n\r\nclass UpdateServiceHours extends React.Component <AcceptedProps, myState>{\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      serviceUpdate:false,\r\n      setServiceUpdate: (e) => {this.setState({serviceUpdate: e})},\r\n      entryById: [],\r\n      setEntryById: (e) => {this.setState({entryById: e})},\r\n      date: \"\",\r\n      setDate: (e) => {this.setState({date: e})},\r\n      typeOfService: \"\",\r\n      setTypeOfService: (e) => {this.setState({typeOfService: e})},\r\n      description: \"\",\r\n      setDescription: (e) => {this.setState({description: e})},\r\n      hours: 0,\r\n      setHours: (e) => {this.setState({hours: e})},\r\n    };\r\n \r\n  }\r\n  fetchServiceRequests = () =>{\r\n    fetch(`http://localhost:4000/service/${this.props.indexNumber}`, {\r\n        method: 'GET',\r\n        headers: new Headers ({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': this.props.sessionToken\r\n        })\r\n    }).then((res=> res.json()))\r\n    .then((json) => {\r\n      this.state.setEntryById(json);\r\n      this.state.setHours(json.hours);\r\n      this.state.setTypeOfService(json.typeOfService);\r\n      this.state.setDescription(json.description);\r\n      this.state.setDate(json.date)\r\n      console.log(this.state.entryById)\r\n        // console.log(json)\r\n        // this.props.setServiceRequests(json) //taking information from the server and setting it to our state\r\n        // console.log(this.props.indexNumber)\r\n        \r\n    })\r\n}\r\n\r\n//When the page loads run another fetch GET request BY ID (indexNumber) Get 1 by id in controller\r\n//local state variables this.state.hours\r\n//this makes it so variables aren't fighting one another We can use local state variables here so it doesn't hold onto old information\r\n\r\n//Another option is to make the update button disabled until a user updates a value. When something is changed in the text box a clicker ticks up 1 and then it can be clicked\r\n\r\n\r\n// ${this.props.serviceRequests.id}\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n  \r\n    type serviceInterface = {\r\n      date?: string, \r\n      typeOfService?: string,\r\n      description?: string,\r\n      hours?: number,\r\n      status?: string\r\n\r\n    }\r\n\r\n    let service: serviceInterface={};\r\n    // service.date= \"\";\r\n    \r\n\r\n\r\n    // if(this.props.date !== \"\"){\r\n    //   service.date= this.state.entryById.date\r\n    // } else{service.date= this.state.date}\r\n\r\n    // if(this.props.typeOfService !== \"\"){\r\n    //   service.typeOfService= this.state.entryById.typeOfService\r\n    // }else{service.typeOfService= this.state.typeOfService}\r\n\r\n    // if(this.props.description !== \"\"){\r\n    //   service.description= this.state.entryById.description\r\n    // }else{service.description= this.state.description}\r\n\r\n    // if(this.props.hours !== 0){\r\n    //   service.hours= this.state.entryById.hours\r\n    // }else{service.hours= this.state.hours}\r\n\r\n    fetch(`http://localhost:4000/service/${this.props.indexNumber}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        // service\r\n        service: {\r\n          date: this.state.date,\r\n          typeOfService: this.state.typeOfService,\r\n          description: this.state.description,\r\n          hours: this.state.hours,\r\n          status: this.props.status,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(\"Service update was successful\");\r\n        this.state.setServiceUpdate(true);\r\n        console.log(response)\r\n        \r\n     \r\n        \r\n      } else {\r\n        console.log(\"Service update failed\");\r\n      }\r\n      return response.json();\r\n      \r\n    });\r\n \r\n  };\r\n\r\n  checkForProfile=() => {\r\n    if (this.state.serviceUpdate){\r\n      return <Redirect to=\"/mydashboard\"/>\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.setBackArrowToggle(true) \r\n    this.props.setIsAdminFalse(false);\r\n    this.fetchServiceRequests()\r\n    console.log(this.props.serviceRequests)\r\n    console.log(this.props.indexNumber)\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sitebar\r\n              backArrowToggle={this.props.backArrowToggle}\r\n              // arrowHandler={this.props.arrowHandler}\r\n              clearToken={this.props.clearToken}\r\n              sessionToken={this.props.sessionToken}\r\n        />\r\n        <Container\r\n          style={{ paddingLeft: \"40px\", paddingRight: \"40px\" }}\r\n          component=\"main\"\r\n          maxWidth=\"xs\"\r\n        >\r\n          <CssBaseline />\r\n          <div style={{ marginTop: \"25px\" }}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Edit Service\r\n            </Typography>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <form noValidate>\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label=\"Date of Service\"\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.state.setDate(e.target.value);\r\n                        console.log(this.state.date);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={this.props.specificEntry.date}\r\n                    />\r\n                  </form>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Type of Service\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.state.setTypeOfService(e.target.value);\r\n                        console.log(this.state.entryById.typeOfService);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={this.props.specificEntry.typeOfService}\r\n                    >\r\n                       <MenuItem value={\"Tutoring\"}>Tutoring</MenuItem>\r\n                      <MenuItem value={\"Recycling\"}>Recycling</MenuItem>\r\n                      <MenuItem value={\"NJHS Sponsored Event\"}>\r\n                        NJHS Sponsored Event\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Volunteering\"}>\r\n                        Volunteering\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"description\"\r\n                  label=\"Description of Service\"\r\n                  id=\"text\"\r\n                  onChange={(e) => {\r\n                    console.log(e.target.value)\r\n                    this.state.setDescription(e.target.value);\r\n                    console.log(this.props.description);\r\n                    console.log(this.props.specificEntry)\r\n                    console.log(this.props.indexNumber)\r\n                  }}\r\n                  defaultValue={this.props.specificEntry.description}\r\n                 \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160, marginBottom: \"25px\" }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Number of Hours\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.state.setHours(e.target.value);\r\n                        console.log(this.props.hours);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={this.props.specificEntry.hours}\r\n                    >\r\n                      <MenuItem value={1}>1 hour </MenuItem>\r\n                      <MenuItem value={2}>2 hours </MenuItem>\r\n                      <MenuItem value={3}>3 hours</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n              </Grid>\r\n              {/* <Link to=\"/mydashboard\"> */}\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  //if less than one diabled \r\n                >\r\n                  UPDATE\r\n                </Button>\r\n              {/* </Link> */}\r\n              <Grid container justify=\"flex-end\"></Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        {console.log(this.props.serviceRequests)}\r\n        {console.log(this.props.typeOfService)}\r\n        {console.log(this.props.specificEntry)}\r\n        \r\n       \r\n        {this.checkForProfile()}\r\n      </div>\r\n    );\r\n    \r\n  }\r\n \r\n}\r\n\r\nexport default UpdateServiceHours;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\ViewEvents.tsx",["155","156","157","158","159"],"import React, {Component} from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Sitebar from '../Sitebar/Sitebar';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\ntype AcceptedProps = {   \r\n \r\n  setIsAdminFalse: any;\r\n  isAdmin:any;\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  setBackArrowToggle: (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  eventInfo: any;\r\n  setEventInfo: (e: any) => void;\r\n};\r\n\r\nclass ViewEvents extends React.Component  <AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      eventInfo: [],\r\n      setEventInfo: (entry) => {\r\n        this.setState({ eventInfo: entry });\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.setBackArrowToggle(true);\r\n    this.fetchService();\r\n    this.props.setIsAdminFalse(false);\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  }\r\n\r\n  fetchService = () => {\r\n    fetch(`http://localhost:4000/events/studentview`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        this.state.setEventInfo(json);\r\n        console.log(this.state.eventInfo);\r\n      });\r\n  };\r\n\r\n  \r\n    render() { \r\n        return (   <div>\r\n          {\" \"}\r\n          <Sitebar\r\n            backArrowToggle={this.props.backArrowToggle}\r\n            // arrowHandler={this.props.arrowHandler}\r\n            clearToken={this.props.clearToken}\r\n            sessionToken={this.props.sessionToken}\r\n          />{\" \"}\r\n          <h2\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginTop: \"50px\",\r\n              marginBottom: \"50px\",\r\n            }}\r\n          >\r\n            Upcoming Service Opportunities\r\n          </h2>\r\n         \r\n          <div className=\"viewEvents\">\r\n            <Box style={{ background: \"#F6D55C\", padding: \"0px\", width: \"100%\" }}>\r\n              <Box className=\"toRight\">\r\n                {\" \"}\r\n                <ButtonGroup\r\n                  style={{ background: \"#F6D55C\" }}\r\n                  className=\"toRight\"\r\n                  disableElevation\r\n                  variant=\"contained\"\r\n                  aria-label=\"text primary button group\"\r\n                >\r\n                  <Link to=\"/addevents\">\r\n                    <Button style={{ background: \"#F6D55C\", marginLeft: \"60px\" }}>\r\n                     \r\n                    </Button>\r\n                  </Link>\r\n                </ButtonGroup>\r\n              </Box>\r\n            </Box>\r\n            {this.state.eventInfo.length > 0 ? (\r\n              this.state.eventInfo.map((event: any, index: any) => (\r\n                <Accordion key={this.state.eventInfo.id} square>\r\n                  <AccordionSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                  >\r\n                  \r\n                    <Typography style={{ marginLeft: \"15px\" }}>\r\n                      {this.state.eventInfo[index].title}\r\n                    </Typography>\r\n                    <div style={{ marginLeft: \"auto\" }}>\r\n                     \r\n                    </div>\r\n                  </AccordionSummary>\r\n              <AccordionDetails style={{ padding: \"0px 30px\"}}>\r\n                  \r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\"}}>Date:</p>\r\n                  </Typography>\r\n                  <Typography>\r\n                      <p style={{ fontSize: \"12px\",  marginLeft:\"100px\"  }}>Location: </p>\r\n                    </Typography>\r\n                    <Typography>\r\n                      <p style={{ fontSize: \"12px\",  marginLeft:\"100px\"  }}>Hours: </p>\r\n                    </Typography>\r\n                </AccordionDetails>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    <p style={{  fontSize: \"12px\", marginLeft:\"15px\" }}> {this.state.eventInfo[index].date}</p>\r\n                  </Typography>\r\n                  <Typography>\r\n                      <p style={{ fontSize: \"12px\" , marginLeft:\"68px\"  }}>{this.state.eventInfo[index].location}</p>\r\n                    </Typography>\r\n                    <Typography>\r\n                      <p style={{ fontSize: \"12px\" , marginLeft:\"110px\"  }}>{this.state.eventInfo[index].hours}</p>\r\n                    </Typography>\r\n                  \r\n                  \r\n                </AccordionDetails>\r\n  \r\n                \r\n               \r\n     \r\n                  <AccordionDetails style={{ padding: \"0px 30px\"}}>\r\n                    <Typography>\r\n                      <p style={{ fontSize: \"12px\" }}>Event Description:</p>\r\n                    </Typography>\r\n                  </AccordionDetails>\r\n                  <AccordionDetails>\r\n                    <Typography>\r\n                      <p style={{  fontSize: \"12px\", padding:\"0px 15px\" }}> {this.state.eventInfo[index].description}</p>\r\n                    </Typography>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              ))\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n          {console.log(this.state.eventInfo.title)}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n \r\nexport default ViewEvents;","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\AdminDash.tsx",["160","161","162","163","164"],"import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Sitebar from \"../Sitebar/Sitebar\";\r\nimport { faTrophy } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faAddressBook } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport AdminSitebar from \"../Sitebar/AdminSitebar\"\r\n\r\nconst percentage = 66;\r\n\r\n\r\ntype AcceptedProps = {\r\n\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  teacherAccount: any;\r\n  isAdmin: any;\r\n  setBackArrowToggle:any;\r\n  setIsAdminTrue: (e: any) => void;\r\n  \r\n};\r\n\r\ntype myState={\r\n  classId: any;\r\n  setClassId: (e: any) => void;\r\n}\r\n\r\nclass AdminDash extends React.Component <AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      classId:[],\r\n      setClassId: (entry) => {\r\n        this.setState({classId: entry});\r\n      },\r\n    };\r\n\r\n  }\r\n\r\n  \r\n  fetchTeacherData = () => {\r\n    \r\n    fetch(`http://localhost:4000/teacherUser`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        console.log(json.classId)\r\n        this.state.setClassId(json.classId); \r\n        \r\n      });\r\n  };\r\n\r\n  checkForToken = () => {\r\n    console.log(this.props.isAdmin)\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchTeacherData()\r\n    this.props.setBackArrowToggle(false); \r\n    this.props.setIsAdminTrue(true)\r\n    this.checkForToken()\r\n      // this.props.arrowHandler();\r\n      console.log(this.props.teacherAccount)\r\n    }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div  >\r\n        <AdminSitebar\r\n         backArrowToggle={this.props.backArrowToggle}\r\n        //  arrowHandler={this.props.arrowHandler}\r\n         clearToken={this.props.clearToken}\r\n         sessionToken={this.props.sessionToken}\r\n       \r\n        />\r\n        <Box className=\"admindash\" >\r\n          <Box className=\"admindash_div\">\r\n            <h2 style={{letterSpacing: '3px'}} >\r\n              ADMIN DASHBOARD\r\n            </h2>\r\n            <hr/>\r\n       \r\n          <Box className= \"admindash_card\" >\r\n            <h3 className=\"marginBottom\">\r\n              {\" \"}\r\n              <FontAwesomeIcon className=\"admindash_icons\" icon={faTrophy} />\r\n              Leaderboard\r\n            </h3>\r\n            </Box>\r\n            <h3 className=\"marginBottom\">\r\n              {\" \"}\r\n              <FontAwesomeIcon className=\"admindash_icons\" icon={faClock} />\r\n              Manage Hours\r\n            </h3>\r\n            <Link className=\"visited\" to=\"/adminevent\"><h3 className=\"marginBottom\">\r\n              {\" \"}\r\n              <FontAwesomeIcon\r\n                className=\"admindash_icons\"\r\n                icon={faCalendarAlt}\r\n              />\r\n              Schedule Event\r\n            </h3></Link>\r\n            <Link to=\"/manageaccounts\"><h3 className=\"marginBottom\">\r\n              <FontAwesomeIcon\r\n                className=\"admindash_icons\"\r\n                icon={faAddressBook}\r\n              />\r\n              Student Accounts\r\n            </h3></Link>\r\n            <div className=\"classCode\">\r\n              {\" \"}\r\n              <h4>Class PIN</h4>\r\n           <h1> {this.state.classId}</h1>\r\n              \r\n            </div>\r\n          </Box>\r\n     \r\n       \r\n        </Box>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminDash;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\EventSchedule.tsx",["165"],"import React, { Component } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport AdminSitebar from \"../../Sitebar/AdminSitebar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype AcceptedProps = {\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  setBackArrowToggle: (e: any) => void;\r\n  setIsAdminTrue: (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  eventInfo: any;\r\n  setEventInfo: (e: any) => void;\r\n  setOpen: (e: any) => void;\r\n  open: any;\r\n  title: any;\r\n  setTitle: (e: any) => void;\r\n\r\n};\r\n\r\nclass EventSchedule extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      eventInfo: [],\r\n      setEventInfo: (entry) => {\r\n        this.setState({ eventInfo: entry });\r\n      },\r\n      open: false,\r\n      setOpen: (entry) => {\r\n        this.setState({ open: entry });\r\n      },\r\n      title: \" \",\r\n      setTitle: (entry) => {\r\n        this.setState({ title: entry });\r\n      },\r\n    \r\n    };\r\n  }\r\n\r\n  handleClickOpen = (e:any) => {\r\n    this.state.setOpen(true);\r\n    this.state.setTitle(e);\r\n  };\r\n\r\n  handleClickClose = () => {\r\n    this.state.setOpen(false);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.setIsAdminTrue(true);\r\n    this.props.setBackArrowToggle(true);\r\n    this.fetchService();\r\n  }\r\n\r\n  deleteEvent = async (id: number) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/events/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: this.props.sessionToken,\r\n        }),\r\n      });\r\n      const json = await response.json();\r\n      console.log(json);\r\n\r\n      this.props.setBackArrowToggle(true);\r\n      this.fetchService();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  fetchService = () => {\r\n    fetch(`http://localhost:4000/events`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        this.state.setEventInfo(json);\r\n        console.log(this.state.eventInfo);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <AdminSitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          // arrowHandler={this.props.arrowHandler}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />{\" \"}\r\n        <h2\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: \"50px\",\r\n            marginBottom: \"50px\",\r\n          }}\r\n        >\r\n          Upcoming Service Opportunities\r\n        </h2>\r\n        <div></div>\r\n        <div className=\"viewEvents\">\r\n          <Box style={{ background: \"#F6D55C\", padding: \"0px\", width: \"100%\" }}>\r\n            <Box className=\"toRight\">\r\n              {\" \"}\r\n              <Button\r\n                style={{ background: \"#F6D55C\" }}\r\n                className=\"toRight\"\r\n                disableElevation\r\n                variant=\"contained\"\r\n                aria-label=\"text primary button group\"\r\n              >\r\n                \r\n                  <Button style={{ background: \"#F6D55C\", marginLeft: \"60px\" }}>\r\n                    <AddBoxIcon    onClick={() => {\r\n                        this.handleClickOpen(\"Add Event \");\r\n                      }} />\r\n                  </Button>\r\n          \r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n          {this.state.eventInfo.length > 0 ? (\r\n            this.state.eventInfo.map((event: any, index: any) => (\r\n              <Accordion style={{margin:\"1px\"}} key={this.state.eventInfo.id} square>\r\n                <AccordionSummary\r\n               \r\n                 \r\n                  \r\n                  aria-controls=\"panel1d-content\"\r\n                  id=\"panel1d-header\"\r\n                >\r\n                  <Typography style={{ marginLeft: \"15px\" }}>\r\n                    {this.state.eventInfo[index].title}\r\n                  </Typography>\r\n                  <div style={{ marginLeft: \"auto\" }}>\r\n                    <EditIcon\r\n                      onClick={() => {\r\n                        this.handleClickOpen('Update Event Details');\r\n                      }}\r\n                    />\r\n                    <DeleteIcon\r\n                      onClick={() => {\r\n                        try {\r\n                          this.deleteEvent(this.state.eventInfo[index]?.id);\r\n                          console.log(this.state.eventInfo[index]?.id);\r\n                        } catch (err) {\r\n                          console.log(err);\r\n                        }\r\n                      }}\r\n                    />\r\n\r\n                    <div >\r\n                      <Dialog open={this.state.open}>\r\n                        <DialogTitle id=\"form-dialog-title\">\r\n                          {this.state.title}\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                          <form noValidate>\r\n                            <Grid container spacing={2}>\r\n                              <Grid item xs={12} sm={6}>\r\n                                <form noValidate>\r\n                                  <TextField\r\n                                    id=\"date\"\r\n                                    label=\"Date of Service\"\r\n                                    type=\"date\"\r\n                                    InputLabelProps={{\r\n                                      shrink: true,\r\n                                    }}\r\n                                  />\r\n                                </form>\r\n                              </Grid>\r\n                              <Grid item xs={12} sm={6}></Grid>\r\n                              <Grid item xs={12}>\r\n                                <FormControl style={{ minWidth: 160 }}>\r\n                                  <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"name\"\r\n                                    label=\"Title of Event\"\r\n                                    type=\"email\"\r\n                                    fullWidth\r\n                                  />\r\n                                  <TextField\r\n                                    autoFocus\r\n                                    margin=\"dense\"\r\n                                    id=\"name\"\r\n                                    label=\"Location\"\r\n                                    type=\"email\"\r\n                                    fullWidth\r\n                                  />\r\n                                </FormControl>{\" \"}\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <TextField\r\n                                  variant=\"outlined\"\r\n                                  required\r\n                                  fullWidth\r\n                                  name=\"password\"\r\n                                  label=\"Event Description\"\r\n                                  type=\"password\"\r\n                                  id=\"password\"\r\n                                />\r\n                              </Grid>\r\n                              <Grid item xs={12}>\r\n                                <FormControl\r\n                                  style={{\r\n                                    minWidth: 160,\r\n                                    marginBottom: \"25px\",\r\n                                  }}\r\n                                >\r\n                                  <InputLabel id=\"demo-simple-select-label\">\r\n                                    Number of Hours\r\n                                  </InputLabel>\r\n                                  <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    //   value={age}\r\n                                    //   onChange={handleChange}\r\n                                  >\r\n                                    <MenuItem value={1}>1</MenuItem>\r\n                                    <MenuItem value={2}>2</MenuItem>\r\n                                    <MenuItem value={3}>3</MenuItem>\r\n                                  </Select>\r\n                                </FormControl>{\" \"}\r\n                              </Grid>\r\n                            </Grid>\r\n\r\n                            <DialogActions>\r\n                              <Button\r\n                                onClick={() => {\r\n                                  this.handleClickClose();\r\n                                }}\r\n                              >\r\n                                Cancel\r\n                              </Button>\r\n                              <Link to=\"/adminevent\">\r\n                                <Button\r\n                                  onClick={() => {\r\n                                    this.handleClickClose();\r\n                                  }}\r\n                                  type=\"submit\"\r\n                                >\r\n                                  Submit\r\n                                </Button>\r\n                              </Link>\r\n                            </DialogActions>\r\n                            <Grid container justify=\"flex-end\"></Grid>\r\n                          </form>\r\n                        </DialogContent>\r\n                      </Dialog>\r\n                    </div>\r\n                  </div>\r\n                </AccordionSummary>\r\n                <AccordionDetails style={{ padding: \"0px 30px\" }}>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\" }}>Date:</p>\r\n                  </Typography>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\", marginLeft: \"100px\" }}>\r\n                      Location:{\" \"}\r\n                    </p>\r\n                  </Typography>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\", marginLeft: \"100px\" }}>\r\n                      Hours:{\" \"}\r\n                    </p>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\", marginLeft: \"15px\" }}>\r\n                      {\" \"}\r\n                      {this.state.eventInfo[index].date}\r\n                    </p>\r\n                  </Typography>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\", marginLeft: \"68px\" }}>\r\n                      {this.state.eventInfo[index].location}\r\n                    </p>\r\n                  </Typography>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\", marginLeft: \"110px\" }}>\r\n                      {this.state.eventInfo[index].hours}\r\n                    </p>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n\r\n                <AccordionDetails style={{ padding: \"0px 30px\" }}>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\" }}>Event Description:</p>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    <p style={{ fontSize: \"12px\", padding: \"0px 15px\" }}>\r\n                      {\" \"}\r\n                      {this.state.eventInfo[index].description}\r\n                    </p>\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            ))\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n        {console.log(this.state.eventInfo.title)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventSchedule;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\AdminSitebar.tsx",["166","167"],"import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\ntype AcceptedProps = {\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  sessionToken: any;\r\n};\r\n\r\ntype myState = {\r\n  anchorE1: any;\r\n  anchorOriginVertical: any;\r\n  anchorOriginHorizontal: any;\r\n  transformOriginVertical: any;\r\n  transformOriginHorizontal: any;\r\n  anchorReference: any;\r\n};\r\n\r\nclass AdminSitebar extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      anchorE1: null,\r\n      anchorOriginVertical: \"bottom\",\r\n      anchorOriginHorizontal: \"right\",\r\n      transformOriginVertical: \"top\",\r\n      transformOriginHorizontal: \"right\",\r\n      anchorReference: \"anchorEl\",\r\n    };\r\n  }\r\n\r\n  deleteUser = async()=>{\r\n    try{\r\n      const response= await \r\n          fetch(`http://localhost:4000/teacherUser/deleteadmin`,{\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.sessionToken\r\n                })\r\n            })\r\n            const json= await response.json()\r\n            console.log(json)\r\n            console.log('Teacher is deleted')\r\n         \r\n        \r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n    try{\r\n        \r\n      const response= await \r\n      fetch(`http://localhost:4000/teacherUser/deleteclass`,{\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const json= await response.json()\r\n        console.log(json)\r\n        console.log('Class is deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n    try{\r\n        \r\n      const response= await \r\n      fetch(`http://localhost:4000/teacherUser/deleteclassentries`,{\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const json= await response.json()\r\n        console.log(json)\r\n        console.log('Class entries are deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  \r\n  }\r\n  \r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return console.log(\"hello\");\r\n    }\r\n  };\r\n\r\n\r\n  handleMenu = (e: any) => {\r\n    this.setState({ anchorE1: e.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorE1: null });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { anchorE1 } = this.state;\r\n    const open = Boolean(this.state.anchorE1);\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar position=\"static\">\r\n          <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            {this.props.backArrowToggle === true ? (\r\n              <Link to=\"/adminDash\">\r\n                <IconButton>\r\n                  <ArrowBackIcon style={{ color: \"white\" }} />\r\n                </IconButton>\r\n              </Link>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            <div>\r\n              <IconButton onClick={this.handleMenu}>\r\n                <MenuIcon style={{color:\"white\"}} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorE1}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    this.props.clearToken();\r\n                  }}\r\n                >\r\n                  Logout\r\n                </MenuItem>\r\n                <MenuItem onClick={()=>{this.deleteUser();  this.props.clearToken();}}>Delete Account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.checkForToken()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminSitebar;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageAccounts.tsx",["168"],"import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem, { ListItemProps } from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AdminSitebar from \"../Sitebar/AdminSitebar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\ntype AcceptedProps = {\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  classCode?: any;\r\n  teacherAccount: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  setBackArrowToggle: (e: any) => void;\r\n  setIsAdminTrue: (e: any) => void;\r\n};\r\n\r\ntype MyState = {\r\n  studentAccounts: any;\r\n  setStudentAccounts: (e: any) => void;\r\n  userId:any;\r\n  setUserId: (e: any) => void;\r\n  setOpen: (e: any) => void;\r\n  open:any;\r\n};\r\n\r\nclass ManageAccounts extends React.Component<AcceptedProps, MyState>{\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      userId:800,\r\n      setUserId: (entry) => {\r\n        this.setState({ userId: entry });\r\n      },\r\n      open:false,\r\n      setOpen: (entry) => {\r\n        this.setState({ open: entry });\r\n      },\r\n\r\n      studentAccounts: [],\r\n      setStudentAccounts: (entry) => {\r\n        this.setState({ studentAccounts: entry });\r\n      },\r\n    };\r\n  }\r\n\r\n  handleClickOpen=()=>{\r\n    this.state.setOpen(true)\r\n  }\r\n\r\n  handleClickClose=()=>{\r\n    this.state.setOpen(false)\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.props.arrowHandler();\r\n    this.props.setBackArrowToggle(true);\r\n    this.props.setIsAdminTrue(true);\r\n\r\n    this.fetchTeacherData();\r\n  }\r\n\r\n  //This function takes the argument id which is passed into the deleteEntryAsync2 function on line 140. The argument being passed into this function is the id associated with user name\r\n\r\n  deleteEntryAsync2 = async (id:number) => {\r\n\r\n      try { \r\n        const response = await fetch(\r\n          `http://localhost:4000/user/${id}`,\r\n          {\r\n            method: \"DELETE\",\r\n            headers: new Headers({\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: this.props.sessionToken,\r\n            }),\r\n          }\r\n        );\r\n        const json = await response.json();\r\n        console.log(json);\r\n        \r\n        this.props.setBackArrowToggle(true);\r\n        this.fetchTeacherData();\r\n       \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    \r\n   \r\n  };\r\n\r\n\r\n  //This fetch gets all information linked to the classId that is logged in. I then took the list of students and set it to the variable studentData. This is the variable I will use to map over the page.\r\n  fetchTeacherData = () => {\r\n    fetch(`http://localhost:4000/teacherUser`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        console.log(json.classId);\r\n        this.state.setStudentAccounts(json.studentUsers);\r\n        console.log(this.state.studentAccounts);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Box>\r\n        <AdminSitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          // arrowHandler={this.props.arrowHandler}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />\r\n        <h2 style={{ textAlign: \"center\", margin: \"30px\" }}>\r\n          Student Accounts\r\n        </h2>\r\n\r\n        <Box className=\"studentAccounts\">\r\n          {\" \"}\r\n          {this.state.studentAccounts.length > 0 ? (\r\n            this.state.studentAccounts.map((service: any, index: any) => (\r\n              <Box width=\"auto\" key={this.state.studentAccounts.id}>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\"></List>\r\n                <ListItem className=\"accountRows\" button>\r\n                  <ListItemIcon>\r\n                    <AccountCircleIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    {this.state.studentAccounts[index]?.firstName +\r\n                      \" \" +\r\n                      this.state.studentAccounts[index]?.lastName}\r\n                  </ListItemText>\r\n                  <ListItemText>\r\n                    {\" \"}\r\n                    {this.state.studentAccounts[index]?.email}\r\n                  </ListItemText>\r\n                  <EditIcon onClick={()=>{this.handleClickOpen()}} />\r\n                  <div>\r\n    \r\n      <Dialog open={this.state.open}>\r\n        <DialogTitle id=\"form-dialog-title\">Student User Information</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Fill in the inputs below to update student user information.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"First Name\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Last Name\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n           <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Password\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>{this.handleClickClose()}} >\r\n            Cancel\r\n          </Button>\r\n          <Button  >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n                  <DeleteIcon \r\n                  onClick={() => {\r\n                   \r\n                    try{ \r\n                     \r\n                      this.deleteEntryAsync2(this.state.studentAccounts[index]?.id)\r\n                      console.log(this.state.studentAccounts[index]?.id)\r\n                      \r\n                      ;} \r\n                    catch (err) {\r\n                      console.log(err);\r\n                    }}\r\n                  \r\n                  }\r\n                  \r\n                  />\r\n                </ListItem>\r\n              </Box>\r\n            ))\r\n          ) : (\r\n            <div >You don't currently have any students. </div>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageAccounts;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\UpdateEvents.tsx",["169"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AdminSitebar from \"../../Sitebar/AdminSitebar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {\r\n    Link\r\n   } from \"react-router-dom\";\r\n\r\n   type AcceptedProps = {\r\n    sessionToken?: any;\r\n    clearToken?: any;\r\n    backArrowToggle: any;\r\n    setBackArrowToggle: (e: any) => void;\r\n    setIsAdminTrue: (e: any) => void;\r\n  };\r\n  \r\n \r\n\r\nclass UpdateEvents extends React.Component <AcceptedProps, {}>{\r\n  render() {\r\n    return (\r\n      <div>\r\n         <AdminSitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />\r\n        <Container style={{paddingLeft:\"40px\", paddingRight:\"40px\"}}component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div style={{ marginTop: \"25px\" }}>\r\n            <Typography\r\n           \r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n            >\r\n              Edit Event\r\n            </Typography>\r\n        \r\n            <br></br>\r\n            <br></br>\r\n            <form noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <form noValidate>\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label=\"Date of Service\"\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    />\r\n                  </form>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{minWidth:160}} >\r\n                    <InputLabel id=\"demo-simple-select-label\">Type of Service</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                    //   value={age}\r\n                    //   onChange={handleChange}\r\n                    >\r\n                      <MenuItem value={10}>Tutoring</MenuItem>\r\n                      <MenuItem value={20}>Recycling</MenuItem>\r\n                      <MenuItem value={30}>NJHS Sponsored Event</MenuItem>\r\n                      <MenuItem value={30}>Other</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                  \r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Decription of Service\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <FormControl style={{minWidth:160, marginBottom:\"25px\"}} >\r\n                    <InputLabel id=\"demo-simple-select-label\">Number of Hours</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                    //   value={age}\r\n                    //   onChange={handleChange}\r\n                    >\r\n                      <MenuItem value={10}>0.5</MenuItem>\r\n                      <MenuItem value={20}>1</MenuItem>\r\n                      <MenuItem value={30}>1.5</MenuItem>\r\n                      <MenuItem value={30}>2</MenuItem>\r\n                      <MenuItem value={30}>2.5</MenuItem>\r\n                      <MenuItem value={30}>3</MenuItem>\r\n                      <MenuItem value={30}>3.5</MenuItem>\r\n                      <MenuItem value={30}>4</MenuItem>\r\n                      <MenuItem value={30}>4.5</MenuItem>\r\n                      <MenuItem value={30}>5</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n              </Grid>\r\n              <Link to=\"/mydashboard\"><Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Update \r\n              </Button></Link>\r\n              <Grid container justify=\"flex-end\"></Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateEvents;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\AddEvents.tsx",["170","171","172","173","174","175","176","177","178"],"import React, { Component } from \"react\";\r\nimport Sitebar from \"../../Sitebar/Sitebar\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport AdminSitebar from \"../../Sitebar/AdminSitebar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport {\r\n    Link\r\n   } from \"react-router-dom\";\r\n\r\n   type AcceptedProps = {\r\n    sessionToken?: any;\r\n    clearToken?: any;\r\n    backArrowToggle: any;\r\n    setBackArrowToggle: (e: any) => void;\r\n    setIsAdminTrue: (e: any) => void;\r\n  };\r\n  \r\n \r\n\r\nclass AddEvent extends React.Component <AcceptedProps, {}>{\r\n  render() {\r\n    return (\r\n      <div>\r\n         <AdminSitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />\r\n        <Container style={{paddingLeft:\"40px\", paddingRight:\"40px\"}}component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div style={{ marginTop: \"25px\" }}>\r\n            <Typography\r\n           \r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n            >\r\n              Add Event\r\n            </Typography>\r\n        \r\n            <br></br>\r\n            <br></br>\r\n            <form noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <form noValidate>\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label=\"Date of Service\"\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                    />\r\n                  </form>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{minWidth:160}} >\r\n                    <InputLabel id=\"demo-simple-select-label\">Type of Service</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                    //   value={age}\r\n                    //   onChange={handleChange}\r\n                    >\r\n                      <MenuItem value={10}>Tutoring</MenuItem>\r\n                      <MenuItem value={20}>Recycling</MenuItem>\r\n                      <MenuItem value={30}>NJHS Sponsored Event</MenuItem>\r\n                      <MenuItem value={30}>Other</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                  \r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Decription of Service\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <FormControl style={{minWidth:160, marginBottom:\"25px\"}} >\r\n                    <InputLabel id=\"demo-simple-select-label\">Number of Hours</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                    //   value={age}\r\n                    //   onChange={handleChange}\r\n                    >\r\n                      <MenuItem value={10}>0.5</MenuItem>\r\n                      <MenuItem value={20}>1</MenuItem>\r\n                      <MenuItem value={30}>1.5</MenuItem>\r\n                      <MenuItem value={30}>2</MenuItem>\r\n                      <MenuItem value={30}>2.5</MenuItem>\r\n                      <MenuItem value={30}>3</MenuItem>\r\n                      <MenuItem value={30}>3.5</MenuItem>\r\n                      <MenuItem value={30}>4</MenuItem>\r\n                      <MenuItem value={30}>4.5</MenuItem>\r\n                      <MenuItem value={30}>5</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n              </Grid>\r\n              <Link to=\"/mydashboard\"><Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Update \r\n              </Button></Link>\r\n              <Grid container justify=\"flex-end\"></Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddEvent;",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":15},{"ruleId":"183","severity":1,"message":"187","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":18},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"189","line":18,"column":8,"nodeType":"185","messageId":"186","endLine":18,"endColumn":18},{"ruleId":"183","severity":1,"message":"190","line":19,"column":8,"nodeType":"185","messageId":"186","endLine":19,"endColumn":18},{"ruleId":"183","severity":1,"message":"191","line":20,"column":8,"nodeType":"185","messageId":"186","endLine":20,"endColumn":18},{"ruleId":"183","severity":1,"message":"192","line":22,"column":3,"nodeType":"185","messageId":"186","endLine":22,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":53,"column":41,"nodeType":"195","endLine":53,"endColumn":105},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"196","line":8,"column":9,"nodeType":"185","messageId":"186","endLine":8,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":29,"column":40,"nodeType":"195","endLine":29,"endColumn":129},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"197","severity":1,"message":"198","line":52,"column":3,"nodeType":"199","messageId":"200","endLine":54,"endColumn":4},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"201","line":16,"column":10,"nodeType":"185","messageId":"186","endLine":16,"endColumn":19},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"193","severity":1,"message":"194","line":45,"column":35,"nodeType":"195","endLine":45,"endColumn":99},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"202","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":17},{"ruleId":"193","severity":1,"message":"194","line":53,"column":35,"nodeType":"195","endLine":53,"endColumn":99},{"ruleId":"203","severity":1,"message":"204","line":70,"column":13,"nodeType":"195","endLine":70,"endColumn":41},{"ruleId":"183","severity":1,"message":"205","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":20},{"ruleId":"183","severity":1,"message":"206","line":12,"column":8,"nodeType":"185","messageId":"186","endLine":12,"endColumn":18},{"ruleId":"183","severity":1,"message":"207","line":16,"column":8,"nodeType":"185","messageId":"186","endLine":16,"endColumn":12},{"ruleId":"183","severity":1,"message":"208","line":20,"column":10,"nodeType":"185","messageId":"186","endLine":20,"endColumn":30},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"209","line":15,"column":5,"nodeType":"185","messageId":"186","endLine":15,"endColumn":15},{"ruleId":"197","severity":1,"message":"198","line":43,"column":3,"nodeType":"199","messageId":"200","endLine":45,"endColumn":4},{"ruleId":"210","severity":1,"message":"211","line":62,"column":3,"nodeType":"212","messageId":"213","endLine":62,"endColumn":21},{"ruleId":"210","severity":1,"message":"211","line":63,"column":3,"nodeType":"212","messageId":"213","endLine":67,"endColumn":32},{"ruleId":"210","severity":1,"message":"211","line":68,"column":2,"nodeType":"212","messageId":"213","endLine":68,"endColumn":73},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"206","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":18},{"ruleId":"183","severity":1,"message":"214","line":12,"column":8,"nodeType":"185","messageId":"186","endLine":12,"endColumn":14},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"215","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":24},{"ruleId":"183","severity":1,"message":"216","line":8,"column":8,"nodeType":"185","messageId":"186","endLine":8,"endColumn":16},{"ruleId":"183","severity":1,"message":"205","line":12,"column":10,"nodeType":"185","messageId":"186","endLine":12,"endColumn":20},{"ruleId":"183","severity":1,"message":"217","line":16,"column":8,"nodeType":"185","messageId":"186","endLine":16,"endColumn":22},{"ruleId":"183","severity":1,"message":"218","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":14},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"219","line":119,"column":9,"nodeType":"185","messageId":"186","endLine":119,"endColumn":34},{"ruleId":"183","severity":1,"message":"188","line":1,"column":16,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"220","line":10,"column":8,"nodeType":"185","messageId":"186","endLine":10,"endColumn":18},{"ruleId":"183","severity":1,"message":"221","line":11,"column":8,"nodeType":"185","messageId":"186","endLine":11,"endColumn":21},{"ruleId":"183","severity":1,"message":"222","line":13,"column":8,"nodeType":"185","messageId":"186","endLine":13,"endColumn":16},{"ruleId":"183","severity":1,"message":"223","line":14,"column":8,"nodeType":"185","messageId":"186","endLine":14,"endColumn":18},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"224","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":15},{"ruleId":"183","severity":1,"message":"225","line":12,"column":10,"nodeType":"185","messageId":"186","endLine":12,"endColumn":29},{"ruleId":"183","severity":1,"message":"209","line":15,"column":7,"nodeType":"185","messageId":"186","endLine":15,"endColumn":17},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"206","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":18},{"ruleId":"183","severity":1,"message":"226","line":3,"column":20,"nodeType":"185","messageId":"186","endLine":3,"endColumn":33},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"188","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"184","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":15},{"ruleId":"183","severity":1,"message":"227","line":4,"column":8,"nodeType":"185","messageId":"186","endLine":4,"endColumn":14},{"ruleId":"183","severity":1,"message":"215","line":8,"column":8,"nodeType":"185","messageId":"186","endLine":8,"endColumn":24},{"ruleId":"183","severity":1,"message":"216","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":16},{"ruleId":"183","severity":1,"message":"228","line":12,"column":8,"nodeType":"185","messageId":"186","endLine":12,"endColumn":11},{"ruleId":"183","severity":1,"message":"229","line":13,"column":8,"nodeType":"185","messageId":"186","endLine":13,"endColumn":24},{"ruleId":"183","severity":1,"message":"205","line":15,"column":10,"nodeType":"185","messageId":"186","endLine":15,"endColumn":20},{"ruleId":"183","severity":1,"message":"217","line":19,"column":8,"nodeType":"185","messageId":"186","endLine":19,"endColumn":22},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"@typescript-eslint/no-unused-vars","'Sitebar' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Component' is defined but never used.","'SelectRole' is defined but never used.","'StudentPin' is defined but never used.","'TeacherPin' is defined but never used.","'BrowserRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Picture' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Copyright' is defined but never used.","'TextField' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'makeStyles' is defined but never used.","'Typography' is defined but never used.","'Chip' is defined but never used.","'SettingsPowerRounded' is defined but never used.","'percentage' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Button' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'FormHelperText' is defined but never used.","'Link' is defined but never used.","'service' is assigned a value but never used.","'AddBoxIcon' is defined but never used.","'EventNoteIcon' is defined but never used.","'EditIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'Paper' is defined but never used.","'CircularProgressbar' is defined but never used.","'ListItemProps' is defined but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]