[{"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\index.tsx":"1","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\reportWebVitals.ts":"2","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\App.tsx":"3","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Home.tsx":"4","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Signup.tsx":"5","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\HomeSitebar.tsx":"6","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Login.tsx":"7","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\SelectRole.tsx":"8","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\StudentPin.tsx":"9","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\TeacherPin.tsx":"10","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\StudentViewDashboard\\Chart.tsx":"11","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\AdminSignup.tsx":"12","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\MyDashboard.tsx":"13","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\Sitebar.tsx":"14","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\AddServiceHours.tsx":"15","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\UpdateServiceHours.tsx":"16","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\ViewEvents.tsx":"17","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\AdminDash.tsx":"18","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\EventSchedule.tsx":"19","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\AdminSitebar.tsx":"20","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageAccounts.tsx":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":9382,"mtime":1608174541064,"results":"25","hashOfConfig":"23"},{"size":1958,"mtime":1607186443137,"results":"26","hashOfConfig":"23"},{"size":6995,"mtime":1608168256792,"results":"27","hashOfConfig":"23"},{"size":922,"mtime":1607044109359,"results":"28","hashOfConfig":"23"},{"size":4685,"mtime":1608160924897,"results":"29","hashOfConfig":"23"},{"size":2580,"mtime":1608168358842,"results":"30","hashOfConfig":"23"},{"size":2920,"mtime":1608168315936,"results":"31","hashOfConfig":"23"},{"size":2283,"mtime":1607190725301,"results":"32","hashOfConfig":"23"},{"size":32241,"mtime":1607286072355,"results":"33","hashOfConfig":"23"},{"size":6363,"mtime":1608174765342,"results":"34","hashOfConfig":"23"},{"size":3036,"mtime":1608174429527,"results":"35","hashOfConfig":"23"},{"size":1701,"mtime":1608174604571,"results":"36","hashOfConfig":"23"},{"size":5297,"mtime":1608173676406,"results":"37","hashOfConfig":"23"},{"size":5428,"mtime":1608173698337,"results":"38","hashOfConfig":"23"},{"size":4269,"mtime":1608173742396,"results":"39","hashOfConfig":"23"},{"size":3037,"mtime":1608174290338,"results":"40","hashOfConfig":"23"},{"size":4875,"mtime":1608172408196,"results":"41","hashOfConfig":"23"},{"size":1721,"mtime":1608174657624,"results":"42","hashOfConfig":"23"},{"size":4349,"mtime":1608172419706,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1wlda11",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\index.tsx",[],["95","96"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\reportWebVitals.ts",[],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\App.tsx",["97"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Home.tsx",["98","99","100","101","102","103"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Signup.tsx",["104","105"],"import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\"\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport {\r\n Link\r\n} from \"react-router-dom\";\r\n\r\n\r\ntype AcceptedProps={\r\n  sessionToken:any, \r\n  updateToken:any,\r\n  email:any,\r\n  firstName: string,\r\n  lastName: string, \r\n  password: any,\r\n  setEmail: any,\r\n  setPassword: any,\r\n  classCode?:any,\r\n  setClassCode?:any,\r\n  setFirstName?: any,\r\n  setLastName?: any\r\n\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\n\r\nclass Signup extends React.Component<AcceptedProps,{}> {\r\n\r\n  \r\n  handleSubmit =(event:any) => {\r\n    event.preventDefault();\r\n    fetch(`http://localhost:4000/user/signup`,{\r\n        method: 'POST', \r\n        body: JSON.stringify({\r\n          studentUser: {\r\n            firstName: this.props.firstName, \r\n            lastName: this.props.lastName, \r\n            email: this.props.email,\r\n            password: this.props.password,\r\n            classId:this.props.classCode\r\n          }}),\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json'\r\n        })\r\n    }).then(\r\n        (response) => response.json()\r\n  \r\n    ).then((json)=>{\r\n        this.props.updateToken(json.sessionToken)\r\n       \r\n    })\r\n  }\r\n\r\ncheckForToken= () =>{\r\n    if(!this.props.sessionToken || this.props.firstName === undefined ){\r\n      return ( <Redirect to= \"/signup\"/>)\r\n    }return(<Redirect to= \"/myDashboard\"/>)\r\n  }\r\n\r\n\r\n    \r\n     \r\n   \r\n  render() {\r\n    return (\r\n      <div> \r\n \r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n  \r\n          <div className=\"formPadding\">\r\n              <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n                NJHS ServiceTracker\r\n              </Typography>\r\n              <br></br>\r\n              <form onSubmit={this.handleSubmit} noValidate>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      autoComplete=\"fname\"\r\n                      name=\"firstName\"\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      autoFocus\r\n                      onChange={(e) => {\r\n                        this.props.setFirstName(e.target.value)\r\n                        console.log(this.props.firstName)\r\n                    \r\n                      }}\r\n                      defaultValue={this.props.firstName}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      autoComplete=\"lname\"\r\n                      onChange={(e) => {\r\n                        this.props.setLastName(e.target.value)\r\n                        console.log(this.props.lastName)\r\n                    \r\n                      }}\r\n                      defaultValue={this.props.lastName}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      onChange={(e) => {\r\n                        this.props.setEmail(e.target.value)\r\n                        console.log(this.props.email)\r\n                    \r\n                      }}\r\n                      defaultValue={this.props.email}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"current-password\"\r\n                      onChange={(e) => {\r\n                        this.props.setPassword(e.target.value)\r\n                        console.log(this.props.password)\r\n                    \r\n                      }}\r\n                      defaultValue={this.props.password}\r\n                    />\r\n                    \r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"Code\"\r\n                label=\"Enter Class Code \"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => {\r\n                  this.props.setClassCode(e.target.value)\r\n                  console.log(this.props.setClassCode)\r\n              \r\n                }}\r\n                defaultValue={this.props.classCode}\r\n              />\r\n        \r\n         \r\n            </Grid>\r\n                  \r\n                  <Grid item xs={12}></Grid>\r\n                </Grid>\r\n                {/* <Link to=\"/mydashboard\"> */}\r\n                <Button\r\n               \r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                 {/* </Link> */}\r\n        \r\n                <Grid container justify=\"flex-end\">\r\n                \r\n                  <Grid item className=\"smallMarginTop\">\r\n                  <Link to=\"/\">\r\n                {\"Already have an account? Sign in\"}\r\n              </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n              <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n       \r\n      </div>\r\n      \r\n</Container>\r\n\r\n</div>\r\n{this.checkForToken()}\r\n  </div>\r\n \r\n    );\r\n \r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\HomeSitebar.tsx",["106","107"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Login.tsx",["108","109","110"],"import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\ntype AcceptedProps={\r\n  sessionToken:any, \r\n  updateToken:any,\r\n  email:any,\r\n  firstName: string,\r\n  lastName: string, \r\n  password: any,\r\n  setEmail: any,\r\n  setPassword: any,\r\n  classCode?:any,\r\n  setClassCode?:any,\r\n  setFirstName?: any,\r\n  setLastName?: any,\r\n  collectToken: any\r\n}\r\n\r\nclass Login extends React.Component<AcceptedProps,{}> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    \r\n  }\r\n\r\n  handleSubmit =(event:any) => {\r\n    event.preventDefault();\r\n    fetch(`http://localhost:4000/user/login`,{\r\n        method: 'POST', \r\n        body: JSON.stringify({\r\n          studentUser: {\r\n            firstName: this.props.firstName, \r\n            lastName: this.props.lastName, \r\n            email: this.props.email,\r\n            password: this.props.password,\r\n            classId:this.props.classCode\r\n          }}),\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json'\r\n        })\r\n    }).then(\r\n      (response) => {\r\n        if (response.status===200){\r\n          console.log(\"Login was successful\");\r\n        }\r\n        else {\r\n          console.log('Login in failed');\r\n        }\r\n        return response.json();\r\n       }\r\n\r\n   ).then((json)=>{\r\n       this.props.updateToken(json.sessionToken)\r\n   })\r\n}\r\n\r\ncheckForToken= () =>{\r\n  if(!this.props.sessionToken || this.props.firstName === undefined ){\r\n    return ( <Redirect to= \"/\"/>)\r\n  }return(<Redirect to= \"/myDashboard\"/>)\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div> \r\n\r\n  \r\n<div className= \"mainDiv\" >\r\n\r\n \r\n<Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n<CssBaseline />\r\n\r\n   \r\n<div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n\r\n\r\n</div>\r\n<div className=\"formPadding\"> \r\n<Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          NJHS ServiceTracker\r\n        </Typography>\r\n        <br></br>\r\n        <form onSubmit={this.handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}></Grid>\r\n            <Grid item xs={12} sm={6}></Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(e) => {\r\n                  this.props.setEmail(e.target.value)\r\n                  console.log(this.props.email)\r\n              \r\n                }}\r\n                defaultValue={this.props.email}\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => {\r\n                  this.props.setPassword(e.target.value)\r\n                  console.log(this.props.password)\r\n              \r\n                }}\r\n                defaultValue={this.props.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n         {/* <Link to=\"./admindash\"> */}\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n            Member Login\r\n          </Button>\r\n         \r\n          {/* </Link> */}\r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item className=\"smallMarginTop\">\r\n            <Link  to=\"/selectrole\">\r\n                {\"Need an account? Sign up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n\r\n<Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n</div>\r\n</Container>\r\n\r\n</div>\r\n{this.checkForToken()}\r\n  </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\SelectRole.tsx",["111","112","113","114"],"import React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Link\r\n \r\n } from \"react-router-dom\";\r\n import { faBookOpen} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\nclass SelectRole extends React.Component {\r\n  render() {\r\n    return (\r\n      <div> \r\n\r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n      <div style={{marginTop: \"50px\"}} className=\"formPadding\">\r\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          Choose Your Account Type:\r\n        </Typography>\r\n        <br></br>\r\n        \r\n        <form noValidate>\r\n          <Grid container spacing={2}>\r\n         \r\n        \r\n            <Grid item xs={6}>\r\n              \r\n            <Link to=\"/signup\">\r\n            <Button style={{height: '150px'}}  fullWidth variant=\"contained\" >\r\n           STUDENT\r\n          </Button> </Link>\r\n         \r\n            </Grid>\r\n            <Grid item xs={6} >\r\n              <div >   <Link to=\"/adminsignup\">\r\n            <Button style={{height: '150px'}} fullWidth variant=\"contained\" >\r\n            \r\n            <Grid item xs={12}>  TEACHER</Grid>\r\n            \r\n          </Button>\r\n         </Link></div>\r\n        \r\n      \r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n    \r\n        \r\n      \r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item className=\"smallMarginTop\">\r\n            <Link to=\"/\">\r\n                {\"Already have an account? Sign in\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n      </div>\r\n    \r\n      </Container>\r\n\r\n\r\n</div>\r\n  </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectRole;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\StudentPin.tsx",["115","116"],"import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {\r\n  Link\r\n } from \"react-router-dom\";\r\n\r\n function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype AcceptedProps={\r\n  setClassCode?:any,\r\n  classCode:any,\r\n  sessionToken?:any\r\n}\r\n\r\n\r\nclass StudentPin extends React.Component<AcceptedProps,{}> {\r\n  render() {\r\n    return (\r\n      <div> \r\n\r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n      <div className=\"formPadding\">\r\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          Find Your Group\r\n        </Typography>\r\n        <br></br>\r\n        \r\n        <form noValidate>\r\n          <Grid container spacing={2}>\r\n         \r\n        \r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"Code\"\r\n                label=\"ENTER CODE \"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => {\r\n                  this.props.setClassCode(e.target.value)\r\n                  console.log(this.props.setClassCode)\r\n              \r\n                }}\r\n                defaultValue={this.props.classCode}\r\n              />\r\n        \r\n         \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n        \r\n        \r\n      \r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Link to= \"/signup\">\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n          <ArrowForwardIcon />\r\n          </Button></Link>\r\n        \r\n      \r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item className=\"smallMarginTop\">\r\n            <Link  to=\"/\">\r\n                {\"Already have an account? Sign in\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n      </div>\r\n      \r\n</Container>\r\n\r\n</div>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentPin;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\TeacherPin.tsx",["117","118","119"],"import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Link\r\n \r\n } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\nclass TeacherPin extends React.Component {\r\n  render() {\r\n    return (\r\n      <div> \r\n\r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n      <div className=\"formPadding\">\r\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          CLASS CODE\r\n          \r\n        </Typography>\r\n        <h5 className=\"signupTitle\"> Students will use this code to join your group. </h5>\r\n        <br></br>\r\n        \r\n        <form noValidate>\r\n          <Grid container spacing={2}>\r\n         \r\n        \r\n            <Grid item xs={12}>\r\n            <h1 className=\"signupTitle\">153754</h1>\r\n         \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n        \r\n        \r\n      \r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Link to=\"/chart\">\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n          <ArrowForwardIcon />\r\n          </Button></Link>\r\n        \r\n      \r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n      \r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n      </div>\r\n      \r\n</Container>\r\n\r\n</div>\r\n  </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherPin;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\StudentViewDashboard\\Chart.tsx",["120","121"],"// import React from \"react\";\r\n// import clsx from \"clsx\";\r\n// import {\r\n//   createStyles,\r\n//   lighten,\r\n//   makeStyles,\r\n//   Theme,\r\n// } from \"@material-ui/core/styles\";\r\n// import Table from \"@material-ui/core/Table\";\r\n// import TableBody from \"@material-ui/core/TableBody\";\r\n// import TableCell from \"@material-ui/core/TableCell\";\r\n// import TableContainer from \"@material-ui/core/TableContainer\";\r\n// import TableHead from \"@material-ui/core/TableHead\";\r\n// import TablePagination from \"@material-ui/core/TablePagination\";\r\n// import TableRow from \"@material-ui/core/TableRow\";\r\n// import TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\n// import Toolbar from \"@material-ui/core/Toolbar\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\n// import IconButton from \"@material-ui/core/IconButton\";\r\n// import Tooltip from \"@material-ui/core/Tooltip\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import Switch from \"@material-ui/core/Switch\";\r\n// import DeleteIcon from \"@material-ui/icons/Delete\";\r\n// import FilterListIcon from \"@material-ui/icons/FilterList\";\r\n// import WarningIcon from \"@material-ui/icons/Warning\";\r\n// import AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\n// import KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\n// import { positions } from \"@material-ui/system\";\r\n// import Box from \"@material-ui/core/Box\";\r\n// import Collapse from \"@material-ui/core/Collapse\";\r\n\r\n// interface Data {\r\n//   hours: number;\r\n// status: string;\r\n//   description: string;\r\n//   name: string;\r\n\r\n// }\r\n\r\n// function createData(\r\n//   name: string,\r\n//  hours: number,\r\n//   description: string,\r\n//   status: string\r\n\r\n// ): Data {\r\n//   return { name, hours, description, status};\r\n// }\r\n\r\n// const rows = [\r\n//   createData('George Smith', 5, \"I babysat my little cousin.\", 'Approved'),\r\n//   createData('Dana Smith', 2, \"I babysat my little cousin.\", 'Approved'),\r\n//   createData('Beth Smith', 2, \"I babysat my little cousin.\", 'Approved'),\r\n//   createData('Cara Smith', 9, \"I babysat my little cousin.\", 'Denied'),\r\n//   createData('Mark Smith', 6, \"I babysat my little cousin.\", 'Pending'),\r\n//   createData('Amy Smith', 8, \"I babysat my little cousin.\", 'Approved'),\r\n//   createData('Lulu Smith', 7, \"I babysat my little cousin.\",'Pending'),\r\n//   createData('Todd Smith', 5, \"I babysat my little cousin.\", 'Pending'),\r\n//   createData('Frank Smith', 8, \"I babysat my little cousin.\", 'Approved'),\r\n//   createData('Marlo Smith', 2, \"I babysat my little cousin.\", 'Pending'),\r\n//   createData('Marshmallow', 8, \"I babysat my little cousin.\", 'Pending'),\r\n//   createData('Nougat', 3, \"I babysat my little cousin.\", 'Denied'),\r\n//   createData('Oreo', 7, \"I babysat my little cousin.\", 'Denied'),\r\n// ];\r\n\r\n// function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n//   if (b[orderBy] < a[orderBy]) {\r\n//     return -1;\r\n//   }\r\n//   if (b[orderBy] > a[orderBy]) {\r\n//     return 1;\r\n//   }\r\n//   return 0;\r\n// }\r\n\r\n// type Order = 'asc' | 'desc';\r\n\r\n// function getComparator<Key extends keyof any>(\r\n//   order: Order,\r\n//   orderBy: Key,\r\n// ): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\r\n//   return order === 'desc'\r\n//     ? (a, b) => descendingComparator(a, b, orderBy)\r\n//     : (a, b) => -descendingComparator(a, b, orderBy);\r\n// }\r\n\r\n// function stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n//   const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n//   stabilizedThis.sort((a, b) => {\r\n//     const order = comparator(a[0], b[0]);\r\n//     if (order !== 0) return order;\r\n//     return a[1] - b[1];\r\n//   });\r\n//   return stabilizedThis.map((el) => el[0]);\r\n// }\r\n\r\n// interface HeadCell {\r\n//   disablePadding: boolean;\r\n//   id: keyof Data;\r\n//   label: string;\r\n//   numeric: boolean;\r\n// }\r\n\r\n// const headCells: HeadCell[] = [\r\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\r\n//   { id: 'description', numeric: true, disablePadding: false, label: 'Description' },\r\n//   { id: 'hours', numeric: true, disablePadding: false, label: 'Hours' },\r\n\r\n//   { id: 'status', numeric: true, disablePadding: false, label: 'Status' },\r\n\r\n// ];\r\n\r\n// interface EnhancedTableProps {\r\n//   classes: ReturnType<typeof useStyles>;\r\n//   numSelected: number;\r\n//   onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n//   onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n//   order: Order;\r\n//   orderBy: string;\r\n//   rowCount: number;\r\n// }\r\n\r\n// function EnhancedTableHead(props: EnhancedTableProps) {\r\n//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n//   const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n//     onRequestSort(event, property);\r\n//   };\r\n\r\n//   return (\r\n//     <TableHead>\r\n//       <TableRow>\r\n//         <TableCell padding=\"checkbox\">\r\n//           <Checkbox\r\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\r\n//             checked={rowCount > 0 && numSelected === rowCount}\r\n//             onChange={onSelectAllClick}\r\n//             inputProps={{ 'aria-label': 'select all desserts' }}\r\n//           />\r\n//         </TableCell>\r\n//         {headCells.map((headCell) => (\r\n//           <TableCell\r\n//             key={headCell.id}\r\n//             align={headCell.numeric ? 'left' : 'left'}\r\n//             padding={headCell.disablePadding ? 'none' : 'default'}\r\n//             sortDirection={orderBy === headCell.id ? order : false}\r\n//           >\r\n//             <TableSortLabel\r\n//               active={orderBy === headCell.id}\r\n//               direction={orderBy === headCell.id ? order : 'asc'}\r\n//               onClick={createSortHandler(headCell.id)}\r\n//             >\r\n//               {headCell.label}\r\n//               {orderBy === headCell.id ? (\r\n//                 <span className={classes.visuallyHidden}>\r\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n//                 </span>\r\n//               ) : null}\r\n//             </TableSortLabel>\r\n//           </TableCell>\r\n//         ))}\r\n//       </TableRow>\r\n//     </TableHead>\r\n//   );\r\n// }\r\n\r\n// const useToolbarStyles = makeStyles((theme: Theme) =>\r\n//   createStyles({\r\n//     root: {\r\n//       paddingLeft: theme.spacing(2),\r\n//       paddingRight: theme.spacing(1),\r\n//     },\r\n//     highlight:\r\n//       theme.palette.type === 'light'\r\n//         ? {\r\n//             color: theme.palette.primary.main,\r\n//             backgroundColor: lighten(theme.palette.primary.light, 0.85),\r\n//           }\r\n//         : {\r\n//             color: theme.palette.text.primary,\r\n//             backgroundColor: theme.palette.primary.dark,\r\n//           },\r\n//     title: {\r\n//       flex: '1 1 100%',\r\n//     },\r\n//   }),\r\n// );\r\n\r\n// interface EnhancedTableToolbarProps {\r\n//   numSelected: number;\r\n// }\r\n\r\n// const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n//   const classes = useToolbarStyles();\r\n//   const { numSelected } = props;\r\n\r\n//   return (\r\n//     <Toolbar\r\n//       className={clsx(classes.root, {\r\n//         [classes.highlight]: numSelected > 0,\r\n//       })}\r\n//     >\r\n//       {numSelected > 0 ? (\r\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n//           {numSelected} selected\r\n//         </Typography>\r\n//       ) : (\r\n//         <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n//           Service Hours\r\n//         </Typography>\r\n//       )}\r\n//       {numSelected > 0 ? (\r\n//         <div>\r\n//        <Tooltip title=\"Delete\">\r\n//           <IconButton aria-label=\"delete\">\r\n//             <AssignmentTurnedInIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//         <Tooltip title=\"Delete\">\r\n//           <IconButton aria-label=\"delete\">\r\n//             <WarningIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//         </div>\r\n\r\n//       ) : (\r\n//         <Tooltip title=\"Filter list\">\r\n//           <IconButton aria-label=\"filter list\">\r\n//             <FilterListIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       )}\r\n//     </Toolbar>\r\n//   );\r\n// };\r\n\r\n// const useStyles = makeStyles((theme: Theme) =>\r\n//   createStyles({\r\n//     root: {\r\n//       width: '100%',\r\n//     },\r\n//     paper: {\r\n//       width: '100%',\r\n//       marginBottom: theme.spacing(2),\r\n//     },\r\n//     table: {\r\n//       minWidth: 750,\r\n//     },\r\n//     visuallyHidden: {\r\n//       border: 0,\r\n//       clip: 'rect(0 0 0 0)',\r\n//       height: 1,\r\n//       margin: -1,\r\n//       overflow: 'hidden',\r\n//       padding: 0,\r\n//       position: 'absolute',\r\n//       top: 20,\r\n//       width: 1,\r\n//     },\r\n//   }),\r\n// );\r\n\r\n// export default function EnhancedTable() {\r\n//   const classes = useStyles();\r\n//   const [order, setOrder] = React.useState<Order>('asc');\r\n//   const [orderBy, setOrderBy] = React.useState<keyof Data>('hours');\r\n//   const [selected, setSelected] = React.useState<string[]>([]);\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [dense, setDense] = React.useState(false);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n//   const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\r\n//     const isAsc = orderBy === property && order === 'asc';\r\n//     setOrder(isAsc ? 'desc' : 'asc');\r\n//     setOrderBy(property);\r\n//   };\r\n\r\n//   const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n//     if (event.target.checked) {\r\n//       const newSelecteds = rows.map((n) => n.name);\r\n//       setSelected(newSelecteds);\r\n//       return;\r\n//     }\r\n//     setSelected([]);\r\n//   };\r\n\r\n//   const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n//     const selectedIndex = selected.indexOf(name);\r\n//     let newSelected: string[] = [];\r\n\r\n//     if (selectedIndex === -1) {\r\n//       newSelected = newSelected.concat(selected, name);\r\n//     } else if (selectedIndex === 0) {\r\n//       newSelected = newSelected.concat(selected.slice(1));\r\n//     } else if (selectedIndex === selected.length - 1) {\r\n//       newSelected = newSelected.concat(selected.slice(0, -1));\r\n//     } else if (selectedIndex > 0) {\r\n//       newSelected = newSelected.concat(\r\n//         selected.slice(0, selectedIndex),\r\n//         selected.slice(selectedIndex + 1),\r\n//       );\r\n//     }\r\n\r\n//     setSelected(newSelected);\r\n//   };\r\n\r\n//   const handleChangePage = (event: unknown, newPage: number) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setRowsPerPage(parseInt(event.target.value, 10));\r\n//     setPage(0);\r\n//   };\r\n\r\n//   const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setDense(event.target.checked);\r\n//   };\r\n\r\n//   const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n//   return (\r\n\r\n//     <Box >\r\n//     <div className={classes.root}>\r\n//       <Paper className={classes.paper}>\r\n//         <EnhancedTableToolbar numSelected={selected.length} />\r\n//         <TableContainer>\r\n//           <Table\r\n//             className={classes.table}\r\n//             aria-labelledby=\"tableTitle\"\r\n//             size={dense ? 'small' : 'medium'}\r\n//             aria-label=\"enhanced table\"\r\n//           >\r\n//             <EnhancedTableHead\r\n//               classes={classes}\r\n//               numSelected={selected.length}\r\n//               order={order}\r\n//               orderBy={orderBy}\r\n//               onSelectAllClick={handleSelectAllClick}\r\n//               onRequestSort={handleRequestSort}\r\n//               rowCount={rows.length}\r\n//             />\r\n//             <TableBody>\r\n//               {stableSort(rows, getComparator(order, orderBy))\r\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n//                 .map((row, index) => {\r\n//                   const isItemSelected = isSelected(row.name);\r\n//                   const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n//                   return (\r\n//                     <TableRow\r\n//                       hover\r\n//                       onClick={(event) => handleClick(event, row.name)}\r\n//                       role=\"checkbox\"\r\n//                       aria-checked={isItemSelected}\r\n//                       tabIndex={-1}\r\n//                       key={row.name}\r\n//                       selected={isItemSelected}\r\n\r\n//                     >\r\n//                       <TableCell padding=\"checkbox\">\r\n//                         <Checkbox\r\n//                           checked={isItemSelected}\r\n//                           inputProps={{ 'aria-labelledby': labelId }}\r\n//                         />\r\n//                       </TableCell>\r\n//                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n//                         {row.name}\r\n//                       </TableCell>\r\n//                       <TableCell align=\"left\">{row.description}</TableCell>\r\n//                       <TableCell align=\"left\">{row.hours}</TableCell>\r\n\r\n//                       <TableCell align=\"left\">{row.status}</TableCell>\r\n\r\n//                     </TableRow>\r\n//                   );\r\n//                 })}\r\n//               {emptyRows > 0 && (\r\n//                 <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n//                   <TableCell colSpan={6} />\r\n//                 </TableRow>\r\n//               )}\r\n//             </TableBody>\r\n//           </Table>\r\n//         </TableContainer>\r\n//         <TablePagination\r\n//           rowsPerPageOptions={[5, 10, 25]}\r\n//           component=\"div\"\r\n//           count={rows.length}\r\n//           rowsPerPage={rowsPerPage}\r\n//           page={page}\r\n//           onChangePage={handleChangePage}\r\n//           onChangeRowsPerPage={handleChangeRowsPerPage}\r\n//         />\r\n//       </Paper>\r\n//       <FormControlLabel\r\n//         control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n//         label=\"Dense padding\"\r\n//       />\r\n//     </div>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// interface Data {\r\n//   hours: number;\r\n//   status: string;\r\n//   description: string;\r\n//   name: string;\r\n// }\r\n\r\n// function createData(\r\n//   name: string,\r\n//   hours: number,\r\n//   description: string,\r\n//   status: string\r\n// ): Data {\r\n//   return { name, hours, description, status };\r\n// }\r\n\r\n// const rows = [\r\n//   createData(\"George Smith\", 5, \"Tutoring\", \"Approved\"),\r\n//   createData(\"Dana Smith\", 2, \"Donation\", \"Approved\"),\r\n//   createData(\"Beth Smith\", 2, \"Babysitting\", \"Approved\"),\r\n//   createData(\"Cara Smith\", 9, \"Recycling\", \"Denied\"),\r\n//   createData(\"Mark Smith\", 6, \"Letter of Support\", \"Pending\"),\r\n//   createData(\"Amy Smith\", 8, \"Animal Shelter\", \"Approved\"),\r\n//   createData(\"Lulu Smith\", 7, \"Tutoring\", \"Pending\"),\r\n//   createData(\"Todd Smith\", 5, \"Tutoring\", \"Pending\"),\r\n//   createData(\"Frank Smith\", 8,  \"Recycling\", \"Approved\"),\r\n//   createData(\"Marlo Smith\", 2, \"Letter of Support\", \"Pending\"),\r\n//   createData(\"Marshmallow\", 8, \"Animal Shelter\", \"Pending\"),\r\n//   createData(\"Nougat\", 3,  \"Recycling\", \"Denied\"),\r\n//   createData(\"Oreo\", 7, \"Letter of Support\", \"Denied\"),\r\n// ];\r\n\r\n// function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n//   if (b[orderBy] < a[orderBy]) {\r\n//     return -1;\r\n//   }\r\n//   if (b[orderBy] > a[orderBy]) {\r\n//     return 1;\r\n//   }\r\n//   return 0;\r\n// }\r\n\r\n// type Order = \"asc\" | \"desc\";\r\n\r\n// function getComparator<Key extends keyof any>(\r\n//   order: Order,\r\n//   orderBy: Key\r\n// ): (\r\n//   a: { [key in Key]: number | string },\r\n//   b: { [key in Key]: number | string }\r\n// ) => number {\r\n//   return order === \"desc\"\r\n//     ? (a, b) => descendingComparator(a, b, orderBy)\r\n//     : (a, b) => -descendingComparator(a, b, orderBy);\r\n// }\r\n\r\n// function stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n//   const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n//   stabilizedThis.sort((a, b) => {\r\n//     const order = comparator(a[0], b[0]);\r\n//     if (order !== 0) return order;\r\n//     return a[1] - b[1];\r\n//   });\r\n//   return stabilizedThis.map((el) => el[0]);\r\n// }\r\n\r\n// interface HeadCell {\r\n//   disablePadding: boolean;\r\n//   id: keyof Data;\r\n//   label: string;\r\n//   numeric: boolean;\r\n// }\r\n\r\n// const headCells: HeadCell[] = [\r\n//   {\r\n//     id: \"description\",\r\n//     numeric: true,\r\n//     disablePadding: false,\r\n//     label: \"Service Type\",\r\n//   },\r\n//   { id: \"hours\", numeric: true, disablePadding: false, label: \"Hours\" },\r\n\r\n//   { id: \"status\", numeric: true, disablePadding: false, label: \"Status\" },\r\n// ];\r\n\r\n// interface EnhancedTableProps {\r\n//   classes: ReturnType<typeof useStyles>;\r\n//   numSelected: number;\r\n//   onRequestSort: (\r\n//     event: React.MouseEvent<unknown>,\r\n//     property: keyof Data\r\n//   ) => void;\r\n//   onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n//   order: Order;\r\n//   orderBy: string;\r\n//   rowCount: number;\r\n// }\r\n\r\n// function EnhancedTableHead(props: EnhancedTableProps) {\r\n//   const {\r\n//     classes,\r\n//     onSelectAllClick,\r\n//     order,\r\n//     orderBy,\r\n//     numSelected,\r\n//     rowCount,\r\n//     onRequestSort,\r\n//   } = props;\r\n//   const createSortHandler = (property: keyof Data) => (\r\n//     event: React.MouseEvent<unknown>\r\n//   ) => {\r\n//     onRequestSort(event, property);\r\n//   };\r\n\r\n//   return (\r\n//     <TableHead>\r\n//       <TableRow>\r\n//         <TableCell padding=\"checkbox\">\r\n//           <Checkbox\r\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\r\n//             checked={rowCount > 0 && numSelected === rowCount}\r\n//             onChange={onSelectAllClick}\r\n//             inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n//           />\r\n//         </TableCell>\r\n//         {headCells.map((headCell) => (\r\n//           <TableCell\r\n//             key={headCell.id}\r\n//             align={headCell.numeric ? \"left\" : \"left\"}\r\n//             padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n//             sortDirection={orderBy === headCell.id ? order : false}\r\n//           >\r\n//             <TableSortLabel\r\n//               active={orderBy === headCell.id}\r\n//               direction={orderBy === headCell.id ? order : \"asc\"}\r\n//               onClick={createSortHandler(headCell.id)}\r\n//             >\r\n//               {headCell.label}\r\n//               {orderBy === headCell.id ? (\r\n//                 <span className={classes.visuallyHidden}>\r\n//                   {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n//                 </span>\r\n//               ) : null}\r\n//             </TableSortLabel>\r\n//           </TableCell>\r\n//         ))}\r\n//       </TableRow>\r\n//     </TableHead>\r\n//   );\r\n// }\r\n\r\n// const useToolbarStyles = makeStyles((theme: Theme) =>\r\n//   createStyles({\r\n//     root: {\r\n//       paddingLeft: theme.spacing(2),\r\n//       paddingRight: theme.spacing(1),\r\n//     },\r\n//     highlight:\r\n//       theme.palette.type === \"light\"\r\n//         ? {\r\n//             color: theme.palette.primary.main,\r\n//             backgroundColor: lighten(theme.palette.primary.light, 0.85),\r\n//           }\r\n//         : {\r\n//             color: theme.palette.text.primary,\r\n//             backgroundColor: theme.palette.primary.dark,\r\n//           },\r\n//     title: {\r\n//       flex: \"1 1 100%\",\r\n//     },\r\n//   })\r\n// );\r\n\r\n// interface EnhancedTableToolbarProps {\r\n//   numSelected: number;\r\n// }\r\n\r\n// const EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n//   const classes = useToolbarStyles();\r\n//   const { numSelected } = props;\r\n\r\n//   return (\r\n//     <Toolbar\r\n//       className={clsx(classes.root, {\r\n//         [classes.highlight]: numSelected > 0,\r\n//       })}\r\n//     >\r\n//       {numSelected > 0 ? (\r\n//         <Typography\r\n//           className={classes.title}\r\n//           color=\"inherit\"\r\n//           variant=\"subtitle1\"\r\n//           component=\"div\"\r\n//         >\r\n//           {numSelected} selected\r\n//         </Typography>\r\n//       ) : (\r\n//         <Typography\r\n//           className={classes.title}\r\n//           variant=\"h6\"\r\n//           id=\"tableTitle\"\r\n//           component=\"div\"\r\n//         >\r\n//           Service Hours\r\n//         </Typography>\r\n//       )}\r\n//       {numSelected > 0 ? (\r\n//         <div>\r\n//           <Tooltip title=\"Delete\">\r\n//             <IconButton aria-label=\"delete\">\r\n//               <AssignmentTurnedInIcon />\r\n//             </IconButton>\r\n//           </Tooltip>\r\n//           <Tooltip title=\"Delete\">\r\n//             <IconButton aria-label=\"delete\">\r\n//               <WarningIcon />\r\n//             </IconButton>\r\n//           </Tooltip>\r\n//         </div>\r\n//       ) : (\r\n//         <Tooltip title=\"Filter list\">\r\n//           <IconButton aria-label=\"filter list\">\r\n//             <FilterListIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       )}\r\n//     </Toolbar>\r\n//   );\r\n// };\r\n\r\n// const useStyles = makeStyles((theme: Theme) =>\r\n//   createStyles({\r\n//     root: {\r\n//       width: \"100%\",\r\n//     },\r\n//     paper: {\r\n//       width: \"100%\",\r\n//       marginBottom: theme.spacing(2),\r\n//     },\r\n//     table: {\r\n//       minWidth: 750,\r\n//     },\r\n//     visuallyHidden: {\r\n//       border: 0,\r\n//       clip: \"rect(0 0 0 0)\",\r\n//       height: 1,\r\n//       margin: -1,\r\n//       overflow: \"hidden\",\r\n//       padding: 0,\r\n//       position: \"absolute\",\r\n//       top: 20,\r\n//       width: 1,\r\n//     },\r\n//   })\r\n// );\r\n\r\n// export default function EnhancedTable() {\r\n//   const classes = useStyles();\r\n//   const [order, setOrder] = React.useState<Order>(\"asc\");\r\n//   const [orderBy, setOrderBy] = React.useState<keyof Data>(\"hours\");\r\n//   const [selected, setSelected] = React.useState<string[]>([]);\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [dense, setDense] = React.useState(false);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n//   const handleRequestSort = (\r\n//     event: React.MouseEvent<unknown>,\r\n//     property: keyof Data\r\n//   ) => {\r\n//     const isAsc = orderBy === property && order === \"asc\";\r\n//     setOrder(isAsc ? \"desc\" : \"asc\");\r\n//     setOrderBy(property);\r\n//   };\r\n\r\n//   const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n//     if (event.target.checked) {\r\n//       const newSelecteds = rows.map((n) => n.name);\r\n//       setSelected(newSelecteds);\r\n//       return;\r\n//     }\r\n//     setSelected([]);\r\n//   };\r\n\r\n//   const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n//     const selectedIndex = selected.indexOf(name);\r\n//     let newSelected: string[] = [];\r\n\r\n//     if (selectedIndex === -1) {\r\n//       newSelected = newSelected.concat(selected, name);\r\n//     } else if (selectedIndex === 0) {\r\n//       newSelected = newSelected.concat(selected.slice(1));\r\n//     } else if (selectedIndex === selected.length - 1) {\r\n//       newSelected = newSelected.concat(selected.slice(0, -1));\r\n//     } else if (selectedIndex > 0) {\r\n//       newSelected = newSelected.concat(\r\n//         selected.slice(0, selectedIndex),\r\n//         selected.slice(selectedIndex + 1)\r\n//       );\r\n//     }\r\n\r\n//     setSelected(newSelected);\r\n//   };\r\n\r\n//   const handleChangePage = (event: unknown, newPage: number) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   const handleChangeRowsPerPage = (\r\n//     event: React.ChangeEvent<HTMLInputElement>\r\n//   ) => {\r\n//     setRowsPerPage(parseInt(event.target.value, 10));\r\n//     setPage(0);\r\n//   };\r\n\r\n//   const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setDense(event.target.checked);\r\n//   };\r\n\r\n//   const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n//   const emptyRows =\r\n//     rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n//   return (\r\n//     <Box>\r\n//       <div className={classes.root}>\r\n//         <Paper className={classes.paper}>\r\n//           <EnhancedTableToolbar numSelected={selected.length} />\r\n//           <TableContainer>\r\n//             <Table\r\n//               className={classes.table}\r\n//               aria-labelledby=\"tableTitle\"\r\n//               size={dense ? \"small\" : \"medium\"}\r\n//               aria-label=\"enhanced table\"\r\n//             >\r\n//               <EnhancedTableHead\r\n//                 classes={classes}\r\n//                 numSelected={selected.length}\r\n//                 order={order}\r\n//                 orderBy={orderBy}\r\n//                 onSelectAllClick={handleSelectAllClick}\r\n//                 onRequestSort={handleRequestSort}\r\n//                 rowCount={rows.length}\r\n//               />\r\n//               <TableBody>\r\n//                 {stableSort(rows, getComparator(order, orderBy))\r\n//                   .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n//                   .map((row, index) => {\r\n//                     const isItemSelected = isSelected(row.name);\r\n//                     const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n//                     return (\r\n//                       <TableRow\r\n//                         hover\r\n//                         onClick={(event) => handleClick(event, row.name)}\r\n//                         role=\"checkbox\"\r\n//                         aria-checked={isItemSelected}\r\n//                         tabIndex={-1}\r\n//                         key={row.name}\r\n//                         selected={isItemSelected}\r\n//                       >\r\n//                         <Collapse in={false} timeout=\"auto\" unmountOnExit>\r\n//                           <Box margin={1}>\r\n//                             <Typography\r\n//                               variant=\"h6\"\r\n//                               gutterBottom\r\n//                               component=\"div\"\r\n//                             >\r\n//                               History\r\n//                             </Typography>\r\n//                           </Box>\r\n//                         </Collapse>\r\n//                         <TableCell padding=\"checkbox\">\r\n//                           <Checkbox\r\n//                             checked={isItemSelected}\r\n//                             inputProps={{ \"aria-labelledby\": labelId }}\r\n//                           />\r\n//                         </TableCell>\r\n//                         <TableCell>\r\n//                         {row.description}\r\n//                           <IconButton\r\n//                             aria-label=\"expand row\"\r\n//                             size=\"small\"\r\n\r\n//                           >\r\n//                     <KeyboardArrowUpIcon/>\r\n//                           </IconButton>\r\n//                         </TableCell>\r\n\r\n//                         <TableCell align=\"left\">{row.hours}</TableCell>\r\n\r\n//                         <TableCell align=\"left\">{row.status}</TableCell>\r\n//                       </TableRow>\r\n//                     );\r\n//                   })}\r\n//                 {emptyRows > 0 && (\r\n//                   <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n//                     <TableCell colSpan={6} />\r\n//                   </TableRow>\r\n//                 )}\r\n//               </TableBody>\r\n//             </Table>\r\n//           </TableContainer>\r\n//           <TablePagination\r\n//             rowsPerPageOptions={[5, 10, 25]}\r\n//             component=\"div\"\r\n//             count={rows.length}\r\n//             rowsPerPage={rowsPerPage}\r\n//             page={page}\r\n//             onChangePage={handleChangePage}\r\n//             onChangeRowsPerPage={handleChangeRowsPerPage}\r\n//           />\r\n//         </Paper>\r\n//         <FormControlLabel\r\n//           control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n//           label=\"Dense padding\"\r\n//         />\r\n//       </div>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Link\r\n } from \"react-router-dom\";\r\n\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction createData(\r\n  name: string,\r\n  calories: number,\r\n  fat: number,\r\n  price: number\r\n) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    price,\r\n    history: [\r\n      { date: \"2020-01-05\", customerId: \"11091700\", amount: 3 },\r\n      { date: \"2020-01-02\", customerId: \"Anonymous\", amount: 1 },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction Row(props: { row: ReturnType<typeof createData> }) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment >\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.name}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.calories}</TableCell>\r\n        <TableCell align=\"center\">{row.fat}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box style={{ padding: \"5px\" }} margin={1}>\r\n          \r\n              <Box className=\"editIcon\"><h5 style={{marginRight:\"auto\"}}>Details</h5>\r\n              <Link to=\"/editservice\"><EditIcon style={{marginRight:\"10px\"}}  /></Link><DeleteIcon  /></Box>\r\n              <p style={{ padding: \"15px\" }}>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Sed\r\n                vitae ipsa natus laboriosam et odio deleniti.\r\n              </p>\r\n              \r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst rows = [\r\n  createData(\"Tutoring\", 1, 6.0, 24),\r\n  createData(\"Babysitting\", 2, 9.0, 37),\r\n  createData(\"Letter of Support\", 2, 16.0, 24),\r\n  createData(\"Animal Shelter\", 3, 3.7, 67),\r\n  createData(\"Recycling\", 3, 16.0, 49),\r\n];\r\n\r\nexport default function Chart() {\r\n  return (\r\n    <TableContainer style={{paddingLeft:\"5px\"}} component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Service Type</TableCell>\r\n            <TableCell align=\"center\">Hours</TableCell>\r\n            <TableCell align=\"center\">Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <Row key={row.name} row={row} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\AdminSignup.tsx",["122","123"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\MyDashboard.tsx",["124","125"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\Sitebar.tsx",["126","127","128"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\AddServiceHours.tsx",["129","130","131","132","133","134","135","136"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\UpdateServiceHours.tsx",["137","138","139","140","141","142","143","144"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\ViewEvents.tsx",["145"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\AdminDash.tsx",["146","147","148","149","150","151"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\EventSchedule.tsx",["152"],"import React, { Component } from \"react\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AdminSitebar from \"../../Sitebar/AdminSitebar\";\r\n\r\ntype AcceptedProps = {\r\n\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  arrowHandler: any;\r\n  clearToken: any;\r\n};\r\n\r\nclass EventSchedule extends React.Component  <AcceptedProps, {}> {\r\n  componentDidMount(){\r\n    this.props.arrowHandler();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <AdminSitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          arrowHandler={this.props.arrowHandler}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />{\" \"}\r\n        <h2\r\n          style={{\r\n            textAlign: \"center\",\r\n            marginTop: \"50px\",\r\n            marginBottom: \"50px\",\r\n          }}\r\n        >\r\n          Upcoming Service Opportunities\r\n        </h2>\r\n        <div className=\"viewEvents\">\r\n          <Accordion square>\r\n            <AccordionSummary\r\n              aria-controls=\"panel1d-content\"\r\n              id=\"panel1d-header\"\r\n            >\r\n              <Typography>Peer Tutoring</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget.\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion square>\r\n            <AccordionSummary\r\n              aria-controls=\"panel2d-content\"\r\n              id=\"panel2d-header\"\r\n            >\r\n              <Typography>School Recycling</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget.\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion square>\r\n            <AccordionSummary\r\n              aria-controls=\"panel3d-content\"\r\n              id=\"panel3d-header\"\r\n            >\r\n              <Typography>Sporting Concessions</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget.\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion square>\r\n            <AccordionSummary\r\n              aria-controls=\"panel3d-content\"\r\n              id=\"panel3d-header\"\r\n            >\r\n              <Typography>Animal Shelter</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget.\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion square>\r\n            <AccordionSummary\r\n              aria-controls=\"panel3d-content\"\r\n              id=\"panel3d-header\"\r\n            >\r\n              <Typography>GoodVibes Campaign</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                Suspendisse malesuada lacus ex, sit amet blandit leo lobortis\r\n                eget.\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventSchedule;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\AdminSitebar.tsx",["153","154","155"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageAccounts.tsx",["156"],"import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem, { ListItemProps } from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AdminSitebar from \"../Sitebar/AdminSitebar\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\ntype AcceptedProps = {\r\n\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  arrowHandler: any;\r\n  clearToken: any;\r\n\r\n};\r\n\r\nclass ManageAccounts extends React.Component <AcceptedProps, {}>  {\r\n  componentDidMount(){\r\n    this.props.arrowHandler();\r\n  }\r\n  render() {\r\n    return (\r\n      <Box>\r\n        <AdminSitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          arrowHandler={this.props.arrowHandler}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />\r\n        <h2 style={{ textAlign: \"center\", margin: \"30px\" }}>\r\n          Student Accounts\r\n        </h2>\r\n\r\n        <Box className=\"studentAccounts\">\r\n          {\" \"}\r\n          <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Amy Baker</ListItemText>\r\n              <ListItemText>baker@email.com</ListItemText>\r\n              <EditIcon />\r\n              <DeleteIcon />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Amy Baker</ListItemText>\r\n              <ListItemText>baker@email.com</ListItemText>\r\n              <EditIcon />\r\n              <DeleteIcon />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Amy Baker</ListItemText>\r\n              <ListItemText>baker@email.com</ListItemText>\r\n              <EditIcon />\r\n              <DeleteIcon />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Amy Baker</ListItemText>\r\n              <ListItemText>baker@email.com</ListItemText>\r\n              <EditIcon />\r\n              <DeleteIcon />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Amy Baker</ListItemText>\r\n              <ListItemText>baker@email.com</ListItemText>\r\n              <EditIcon />\r\n              <DeleteIcon />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Amy Baker</ListItemText>\r\n              <ListItemText>baker@email.com</ListItemText>\r\n              <EditIcon />\r\n              <DeleteIcon />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Amy Baker</ListItemText>\r\n              <ListItemText>baker@email.com</ListItemText>\r\n              <EditIcon />\r\n              <DeleteIcon />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Amy Baker</ListItemText>\r\n              <ListItemText>baker@email.com</ListItemText>\r\n              <EditIcon />\r\n              <DeleteIcon />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemIcon>\r\n                <AccountCircleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Amy Baker</ListItemText>\r\n              <ListItemText>baker@email.com</ListItemText>\r\n              <EditIcon />\r\n              <DeleteIcon />\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageAccounts;\r\n",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":18,"column":8,"nodeType":"163","messageId":"164","endLine":18,"endColumn":15},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"166","line":18,"column":8,"nodeType":"163","messageId":"164","endLine":18,"endColumn":18},{"ruleId":"161","severity":1,"message":"167","line":19,"column":8,"nodeType":"163","messageId":"164","endLine":19,"endColumn":18},{"ruleId":"161","severity":1,"message":"168","line":20,"column":8,"nodeType":"163","messageId":"164","endLine":20,"endColumn":18},{"ruleId":"161","severity":1,"message":"169","line":22,"column":3,"nodeType":"163","messageId":"164","endLine":22,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":53,"column":41,"nodeType":"172","endLine":53,"endColumn":105},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":93,"column":35,"nodeType":"172","endLine":93,"endColumn":99},{"ruleId":"161","severity":1,"message":"173","line":8,"column":9,"nodeType":"163","messageId":"164","endLine":8,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":29,"column":40,"nodeType":"172","endLine":29,"endColumn":129},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":41,"column":3,"nodeType":"176","messageId":"177","endLine":44,"endColumn":4},{"ruleId":"170","severity":1,"message":"171","line":95,"column":29,"nodeType":"172","endLine":95,"endColumn":93},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"178","line":9,"column":10,"nodeType":"163","messageId":"164","endLine":9,"endColumn":25},{"ruleId":"161","severity":1,"message":"179","line":14,"column":11,"nodeType":"163","messageId":"164","endLine":14,"endColumn":21},{"ruleId":"170","severity":1,"message":"171","line":40,"column":35,"nodeType":"172","endLine":40,"endColumn":99},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":45,"column":35,"nodeType":"172","endLine":45,"endColumn":99},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"180","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":40,"column":35,"nodeType":"172","endLine":40,"endColumn":99},{"ruleId":"161","severity":1,"message":"181","line":842,"column":8,"nodeType":"163","messageId":"164","endLine":842,"endColumn":18},{"ruleId":"161","severity":1,"message":"182","line":846,"column":8,"nodeType":"163","messageId":"164","endLine":846,"endColumn":12},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":92,"column":35,"nodeType":"172","endLine":92,"endColumn":99},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":28,"column":3,"nodeType":"176","messageId":"177","endLine":30,"endColumn":4},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"181","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":18},{"ruleId":"161","severity":1,"message":"183","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"184","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":14},{"ruleId":"161","severity":1,"message":"185","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":24},{"ruleId":"161","severity":1,"message":"186","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":16},{"ruleId":"161","severity":1,"message":"187","line":12,"column":8,"nodeType":"163","messageId":"164","endLine":12,"endColumn":11},{"ruleId":"161","severity":1,"message":"188","line":13,"column":8,"nodeType":"163","messageId":"164","endLine":13,"endColumn":24},{"ruleId":"161","severity":1,"message":"189","line":15,"column":10,"nodeType":"163","messageId":"164","endLine":15,"endColumn":20},{"ruleId":"161","severity":1,"message":"190","line":19,"column":8,"nodeType":"163","messageId":"164","endLine":19,"endColumn":22},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"184","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":14},{"ruleId":"161","severity":1,"message":"185","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":24},{"ruleId":"161","severity":1,"message":"186","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":16},{"ruleId":"161","severity":1,"message":"187","line":12,"column":8,"nodeType":"163","messageId":"164","endLine":12,"endColumn":11},{"ruleId":"161","severity":1,"message":"188","line":13,"column":8,"nodeType":"163","messageId":"164","endLine":13,"endColumn":24},{"ruleId":"161","severity":1,"message":"189","line":15,"column":10,"nodeType":"163","messageId":"164","endLine":15,"endColumn":20},{"ruleId":"161","severity":1,"message":"190","line":19,"column":8,"nodeType":"163","messageId":"164","endLine":19,"endColumn":22},{"ruleId":"161","severity":1,"message":"165","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"191","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":15},{"ruleId":"161","severity":1,"message":"192","line":12,"column":10,"nodeType":"163","messageId":"164","endLine":12,"endColumn":29},{"ruleId":"161","severity":1,"message":"193","line":15,"column":7,"nodeType":"163","messageId":"164","endLine":15,"endColumn":17},{"ruleId":"174","severity":1,"message":"175","line":26,"column":3,"nodeType":"176","messageId":"177","endLine":28,"endColumn":4},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"165","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"181","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":18},{"ruleId":"161","severity":1,"message":"183","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"194","line":3,"column":20,"nodeType":"163","messageId":"164","endLine":3,"endColumn":33},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"@typescript-eslint/no-unused-vars","'Sitebar' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'SelectRole' is defined but never used.","'StudentPin' is defined but never used.","'TeacherPin' is defined but never used.","'BrowserRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Picture' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FontAwesomeIcon' is defined but never used.","'faBookOpen' is defined but never used.","'TextField' is defined but never used.","'Typography' is defined but never used.","'Chip' is defined but never used.","'MenuIcon' is defined but never used.","'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'makeStyles' is defined but never used.","'FormHelperText' is defined but never used.","'Paper' is defined but never used.","'CircularProgressbar' is defined but never used.","'percentage' is assigned a value but never used.","'ListItemProps' is defined but never used.","no-global-assign","no-unsafe-negation"]