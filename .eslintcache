[{"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\index.tsx":"1","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\reportWebVitals.ts":"2","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\App.tsx":"3","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Home.tsx":"4","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Signup.tsx":"5","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\HomeSitebar.tsx":"6","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Login.tsx":"7","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\SelectRole.tsx":"8","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\StudentPin.tsx":"9","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\TeacherPin.tsx":"10","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\StudentViewDashboard\\Chart.tsx":"11","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\AdminSignup.tsx":"12","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\MyDashboard.tsx":"13","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\Sitebar.tsx":"14","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\AddServiceHours.tsx":"15","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\UpdateServiceHours.tsx":"16","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\ViewEvents.tsx":"17","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\AdminDash.tsx":"18","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\EventSchedule.tsx":"19","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\AdminSitebar.tsx":"20","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageAccounts.tsx":"21","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\UpdateEvents.tsx":"22","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\AddEvents.tsx":"23","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\EditStudentAccounts.tsx":"24","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageHours.tsx":"25","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\environment.tsx":"26","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\StudentLeaderboard.tsx":"27","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\StudentProfile.tsx":"28"},{"size":500,"mtime":499162500000,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":16849,"mtime":1612032386641,"results":"32","hashOfConfig":"30"},{"size":1958,"mtime":1607186443137,"results":"33","hashOfConfig":"30"},{"size":7343,"mtime":1611534772643,"results":"34","hashOfConfig":"30"},{"size":922,"mtime":1607044109359,"results":"35","hashOfConfig":"30"},{"size":8410,"mtime":1611625287348,"results":"36","hashOfConfig":"30"},{"size":3373,"mtime":1610821730223,"results":"37","hashOfConfig":"30"},{"size":2920,"mtime":1608168315936,"results":"38","hashOfConfig":"30"},{"size":2515,"mtime":1608250166997,"results":"39","hashOfConfig":"30"},{"size":10987,"mtime":1612036917865,"results":"40","hashOfConfig":"30"},{"size":6901,"mtime":1611534476054,"results":"41","hashOfConfig":"30"},{"size":8237,"mtime":1612036864800,"results":"42","hashOfConfig":"30"},{"size":4351,"mtime":1611618009747,"results":"43","hashOfConfig":"30"},{"size":8814,"mtime":1611535141910,"results":"44","hashOfConfig":"30"},{"size":11732,"mtime":1612038137974,"results":"45","hashOfConfig":"30"},{"size":6001,"mtime":1611623653804,"results":"46","hashOfConfig":"30"},{"size":14051,"mtime":1612032164965,"results":"47","hashOfConfig":"30"},{"size":13302,"mtime":1612031958643,"results":"48","hashOfConfig":"30"},{"size":5139,"mtime":1611716530910,"results":"49","hashOfConfig":"30"},{"size":8850,"mtime":1612032323478,"results":"50","hashOfConfig":"30"},{"size":7905,"mtime":1611534072415,"results":"51","hashOfConfig":"30"},{"size":7738,"mtime":1612031603785,"results":"52","hashOfConfig":"30"},{"size":5240,"mtime":1612032416125,"results":"53","hashOfConfig":"30"},{"size":13472,"mtime":1612032973336,"results":"54","hashOfConfig":"30"},{"size":269,"mtime":1611536628872,"results":"55","hashOfConfig":"30"},{"size":8127,"mtime":1612043053070,"results":"56","hashOfConfig":"30"},{"size":8020,"mtime":1612042103532,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1wlda11",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\index.tsx",[],["126","127"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\reportWebVitals.ts",[],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\App.tsx",[],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Home.tsx",["128","129","130","131","132","133"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Signup.tsx",["134","135"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API_URL from \"../../environment\";\r\n\r\n//This component is where a STUDENT would create an account\r\n\r\ntype AcceptedProps = {\r\n  sessionToken: any;\r\n  updateToken: any;\r\n  email: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: any;\r\n  setEmail: any;\r\n  setPassword: any;\r\n  classCode?: any;\r\n  setClassCode?: any;\r\n  setFirstName?: any;\r\n  setLastName?: any;\r\n  setIsAdminFalse: (e: any) => void;\r\n};\r\n\r\n//This is the copyright function. It is not currently being shown on screen.\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass Signup extends React.Component<AcceptedProps, {}> {\r\n  //This fetch CREATES a student user. They are then linked to the correct group through the class code.\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/user/signup`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        studentUser: {\r\n          firstName: this.props.firstName,\r\n          lastName: this.props.lastName,\r\n          email: this.props.email,\r\n          password: this.props.password,\r\n          classId: this.props.classCode,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        this.props.setIsAdminFalse(false);\r\n        this.props.updateToken(json.sessionToken);\r\n      });\r\n  };\r\n\r\n  //This function checks to see if an account has been successfully created (ie student has session token)\r\n  //It then pushes the user to the proper viewpoint\r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken || this.props.firstName === undefined) {\r\n      return <Redirect to=\"/signup\" />;\r\n    }\r\n    return <Redirect to=\"/myDashboard\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={6} md={5} lg={5} className=\"newLanding\" />\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          <div className=\"formPadding\">\r\n            <Typography\r\n              className=\"signupTitle\"\r\n              component=\"h1\"\r\n              style={{ marginTop: \"35px\" }}\r\n              variant=\"h4\"\r\n            >\r\n              Student Sign-Up\r\n            </Typography>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n              \r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    onChange={(e) => {\r\n                      this.props.setFirstName(e.target.value);\r\n                      console.log(this.props.firstName);\r\n                    }}\r\n                    defaultValue={this.props.firstName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setLastName(e.target.value);\r\n                      console.log(this.props.lastName);\r\n                    }}\r\n                    defaultValue={this.props.lastName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setEmail(e.target.value);\r\n                      console.log(this.props.email);\r\n                    }}\r\n                    defaultValue={this.props.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setPassword(e.target.value);\r\n                      console.log(this.props.password);\r\n                    }}\r\n                    defaultValue={this.props.password}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"Code\"\r\n                    label=\"Enter Class Code \"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setClassCode(e.target.value);\r\n                      console.log(this.props.setClassCode);\r\n                    }}\r\n                    defaultValue={this.props.classCode}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n              {/* <Link to=\"/mydashboard\"> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              {/* </Link> */}\r\n\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item className=\"smallMarginTop\">\r\n                  <Link to=\"/\">{\"Already have an account? Sign in\"}</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n        \r\n          </div>\r\n        </Container>\r\n\r\n        {/* <div\r\n          style={{\r\n            backgroundColor: \"#222222\",\r\n            color: \"#222222\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <Copyright />\r\n        </div> */}\r\n        {this.checkForToken()}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\HomeSitebar.tsx",["136","137"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\Login.tsx",["138","139","140","141"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API_URL from \"../../environment\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport World from \"../../Assets/undraw_the_world_is_mine_nb0e (1).svg\";\r\n\r\n//This component appears on the page as soon as a user arrives to the site\r\n\r\n//This function is not currently being called.\r\n//It contains the copyright.\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <div>\r\n      <Typography variant=\"body2\" align=\"center\"></Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        {\"Copyright © ServiceTracker \"}\r\n        {new Date().getFullYear()}\r\n        {\".\"}\r\n      </Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\ntype AcceptedProps = {\r\n  sessionToken: any;\r\n  updateToken: any;\r\n  email: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: any;\r\n  setEmail: any;\r\n  setPassword: any;\r\n  classCode?: any;\r\n  setClassCode?: any;\r\n  setFirstName?: any;\r\n  setLastName?: any;\r\n  collectToken: any;\r\n  isAdmin: any;\r\n  setIsAdminTrue: any;\r\n  setIsAdminFalse: any;\r\n  setTeacherProfile: (e: any) => void;\r\n};\r\n\r\nclass Login extends React.Component<AcceptedProps, {}> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n  }\r\n\r\n  //Nested Fetches- This setup allows a student & a teacher to log in using the same form.\r\n  //It takes the inputted information, determines if student or teacher, and then shows proper page\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/user/login`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        studentUser: {\r\n          firstName: this.props.firstName,\r\n          lastName: this.props.lastName,\r\n          email: this.props.email,\r\n          password: this.props.password,\r\n          classId: this.props.classCode,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          console.log(\"Login was successful\");\r\n        } else {\r\n          console.log(\"Login in failed\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        this.props.setIsAdminFalse(false);\r\n        this.props.updateToken(json.sessionToken);\r\n        if (this.props.sessionToken) {\r\n          console.log(\"yes\");\r\n        } else {\r\n          return fetch(`${API_URL}/teacheruser/login`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              teacherUser: {\r\n                email: this.props.email,\r\n                password: this.props.password,\r\n              },\r\n            }),\r\n            headers: new Headers({\r\n              \"Content-Type\": \"application/json\",\r\n            }),\r\n          })\r\n            .then((response) => {\r\n              if (response.status === 200) {\r\n                console.log(\"Login was successful\");\r\n              } else {\r\n                console.log(\"Login in failed\");\r\n              }\r\n              return response.json();\r\n            })\r\n            .then((json) => {\r\n              this.props.setIsAdminTrue(true);\r\n\r\n              if (json !== undefined) {\r\n                this.props.setTeacherProfile(json);\r\n              } else {\r\n                this.props.setTeacherProfile([]);\r\n              }\r\n              this.props.updateToken(json.sessionToken);\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  //This function searches to see if the user has a session token.\r\n  //It then checks the status of isAdmin and pushes user to the appropriate page\r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken || this.props.isAdmin === \"\") {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={6}\r\n          md={5}\r\n          lg={5}\r\n          className=\"newLanding\"\r\n        ></Grid>\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          <div className=\"formPadding\">\r\n            <Hidden smUp>\r\n              <div\r\n                style={{\r\n                  width: \"75vw\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <img className=\"miniImage\" src={World}></img>\r\n              </div>\r\n            </Hidden>\r\n            <Typography\r\n              className=\"marginHome signupTitle\"\r\n              style={{ marginBottom: \"5px\" }}\r\n              component=\"h1\"\r\n              variant=\"h4\"\r\n            >\r\n              ServiceTracker\r\n            </Typography>\r\n            <Hidden smUp>\r\n              {\" \"}\r\n              <Typography style={{ fontSize: \"10px\", textAlign: \"center\" }}>\r\n                <p>\r\n                  Easily tracks your hours, so you can focus on{\" \"}\r\n                  <i>doing good.</i>\r\n                </p>\r\n              </Typography>\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n              {\" \"}\r\n              <Typography style={{ fontSize: \"13px\", textAlign: \"center\" }}>\r\n                {\" \"}\r\n                Easily tracks your hours, so you can focus on <i>\r\n                  doing good.\r\n                </i>{\" \"}\r\n              </Typography>\r\n            </Hidden>\r\n\r\n            <br></br>\r\n\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                {/* <Grid item xs={6} sm={6}></Grid>\r\n                <Grid item xs={6} sm={6}></Grid> */}\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setEmail(e.target.value);\r\n                    \r\n                    }}\r\n                    defaultValue={this.props.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => {\r\n                      this.props.setPassword(e.target.value);\r\n                  \r\n                    }}\r\n                    defaultValue={this.props.password}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n              {/* <Link to=\"./admindash\"> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\r\n              >\r\n                Member Login\r\n              </Button>\r\n              <br></br>\r\n\r\n              {/* </Link> */}\r\n\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item className=\"smallMarginTop\">\r\n                  <Link to=\"/selectrole\"> {\"Need an account? Sign up\"}</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        {/* \r\n        <div\r\n          style={{\r\n            // backgroundColor: \"#222222\",\r\n            color: \"#222222\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <Copyright />\r\n        </div> */}\r\n        {this.checkForToken()}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\SelectRole.tsx",["142","143"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//This component directs a user to the proper signup screen -- admin versus user\r\n\r\n\r\n//This function is not currently being called.\r\n//It contains the copyright.\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nclass SelectRole extends React.Component {\r\n  render() {\r\n    return (\r\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={6} md={5} lg={5} className=\"newLanding\" />\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          <div className=\"formPadding\" style={{ marginTop: \"150px\" }}>\r\n            <Typography\r\n              className=\"signupTitle\"\r\n              style={{ marginTop: \"0px\" }}\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n            >\r\n              Choose Your Account Type:\r\n            </Typography>\r\n            <br></br>\r\n\r\n            <form noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <Link to=\"/signup\">\r\n                    <Button\r\n                      style={{ height: \"150px\" }}\r\n                      fullWidth\r\n                      variant=\"contained\"\r\n                    >\r\n                      STUDENT\r\n                    </Button>{\" \"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <div>\r\n                    {\" \"}\r\n                    <Link to=\"/adminsignup\">\r\n                      <Button\r\n                        style={{ height: \"150px\" }}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                      >\r\n                        <Grid item xs={12}>\r\n                          {\" \"}\r\n                          TEACHER\r\n                        </Grid>\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid\r\n                  item\r\n                  style={{ marginBottom: \"50px\" }}\r\n                  className=\"smallMarginTop\"\r\n                >\r\n                  <Link to=\"/\">{\"Already have an account? Sign in\"}</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n\r\n        {/* <div\r\n          style={{\r\n            backgroundColor: \"#222222\",\r\n            color: \"#222222\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <Copyright />\r\n        </div> */}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectRole;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\StudentPin.tsx",["144","145"],"import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {\r\n  Link\r\n } from \"react-router-dom\";\r\n\r\n function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype AcceptedProps={\r\n  setClassCode?:any,\r\n  classCode:any,\r\n  sessionToken?:any\r\n}\r\n\r\n\r\nclass StudentPin extends React.Component<AcceptedProps,{}> {\r\n  render() {\r\n    return (\r\n      <div> \r\n\r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n      <div className=\"formPadding\">\r\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          Find Your Group\r\n        </Typography>\r\n        <br></br>\r\n        \r\n        <form noValidate>\r\n          <Grid container spacing={2}>\r\n         \r\n        \r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"Code\"\r\n                label=\"ENTER CODE \"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => {\r\n                  this.props.setClassCode(e.target.value)\r\n                  console.log(this.props.setClassCode)\r\n              \r\n                }}\r\n                defaultValue={this.props.classCode}\r\n              />\r\n        \r\n         \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n        \r\n        \r\n      \r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Link to= \"/signup\">\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n          <ArrowForwardIcon />\r\n          </Button></Link>\r\n        \r\n      \r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item className=\"smallMarginTop\">\r\n            <Link  to=\"/\">\r\n                {\"Already have an account? Sign in\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n      </div>\r\n      \r\n</Container>\r\n\r\n</div>\r\n  </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StudentPin;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\TeacherPin.tsx",["146","147","148","149"],"import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Falcon from \"../../Assets/White Falcon.png\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Link\r\n \r\n } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\ntype myProps={\r\n  sessionToken:any,\r\n  teacherAccount: any\r\n}\r\n\r\n\r\n\r\nclass TeacherPin extends React.Component<myProps,{}> {\r\n\r\n  componentDidMount(){\r\n    console.log(this.props.teacherAccount.teacherUser?.classId)\r\n  }\r\n  render() {\r\n    \r\n    \r\n    return (\r\n      <div> \r\n\r\n  \r\n      <div className= \"mainDiv\" >\r\n      \r\n       \r\n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      \r\n         \r\n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\r\n      \r\n      \r\n      </div>\r\n      <div className=\"formPadding\">\r\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\r\n          CLASS CODE:\r\n          {this.props.teacherAccount.teacherUser?.classId}\r\n        </Typography>\r\n        <h5 className=\"signupTitle\"> Students will use this code to join your group. </h5>\r\n        <br></br>\r\n        \r\n        <form noValidate>\r\n          <Grid container spacing={2}>\r\n         \r\n        \r\n            <Grid item xs={12}>\r\n            <h1 className=\"signupTitle\"></h1>\r\n         \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n        \r\n        \r\n      \r\n            </Grid>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n          <Link to=\"/chart\">\r\n          <Button fullWidth variant=\"contained\" color=\"primary\">\r\n          <ArrowForwardIcon />\r\n          </Button></Link>\r\n        \r\n      \r\n\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n      \r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <Box mt={5}>\r\n  <Copyright />\r\n</Box>\r\n      </div>\r\n      \r\n</Container>\r\n\r\n</div>\r\n  </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default TeacherPin;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\StudentViewDashboard\\Chart.tsx",["150","151","152","153","154"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Home\\AdminSignup.tsx",["155","156"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API_URL from \"../../environment\";\r\n\r\n//This component is where an ADMIN would create an account\r\n\r\n//This function displays copyright information.\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © ServiceTracker \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ntype AcceptedProps = {\r\n  sessionToken: any;\r\n  updateToken: any;\r\n  email: any;\r\n  firstName: string;\r\n  lastName: string;\r\n  password: any;\r\n  setEmail: any;\r\n  setPassword: any;\r\n  classCode?: any;\r\n  setClassCode?: any;\r\n  setFirstName?: any;\r\n  setLastName?: any;\r\n  setTeacherProfile: (e: any) => void;\r\n  teacherAccount: any;\r\n};\r\n\r\nclass AdminSignup extends React.Component<AcceptedProps, {}> {\r\n  //This fetch CREATES an Admin account.\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/teacheruser/signup`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        teacherUser: {\r\n          firstName: this.props.firstName,\r\n          lastName: this.props.lastName,\r\n          email: this.props.email,\r\n          password: this.props.password,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        if (json !== undefined) {\r\n          this.props.setTeacherProfile(json); //taking information from the server and setting it to our state\r\n        } else {\r\n          this.props.setTeacherProfile([]);\r\n        }\r\n        this.props.updateToken(json.sessionToken);\r\n        console.log(this.props.teacherAccount.teacherUser?.classId);\r\n      });\r\n  };\r\n\r\n  //If an Admin account is properly created with a session token the user is redirected to the proper page\r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken || this.props.firstName === undefined) {\r\n      return <Redirect to=\"/adminsignup\" />;\r\n    }\r\n    return <Redirect to=\"/admindash\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n        <Grid item xs={false} sm={6} md={5} lg={5} className=\"newLanding\" />\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n\r\n          <div className=\"formPadding\">\r\n            <Typography\r\n              className=\"signupTitle\"\r\n              style={{ marginTop: \"100px\" }}\r\n              component=\"h1\"\r\n              variant=\"h4\"\r\n            >\r\n              Admin Signup\r\n            </Typography>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"fname\"\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                    autoFocus\r\n                    onChange={(e) => {\r\n                      this.props.setFirstName(e.target.value);\r\n                      console.log(this.props.firstName);\r\n                    }}\r\n                    defaultValue={this.props.firstName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    autoComplete=\"lname\"\r\n                    onChange={(e) => {\r\n                      this.props.setLastName(e.target.value);\r\n                      console.log(this.props.lastName);\r\n                    }}\r\n                    defaultValue={this.props.lastName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    onChange={(e) => {\r\n                      this.props.setEmail(e.target.value);\r\n                      console.log(this.props.email);\r\n                    }}\r\n                    defaultValue={this.props.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    onChange={(e) => {\r\n                      this.props.setPassword(e.target.value);\r\n                      console.log(this.props.password);\r\n                    }}\r\n                    defaultValue={this.props.password}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}></Grid>\r\n              </Grid>\r\n              {/* <Link to=\"/teacherpin\"> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\r\n              >\r\n                Admin Sign Up\r\n              </Button>\r\n              {/* </Link> */}\r\n\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid\r\n                  item\r\n                  style={{ marginBottom: \"12px\" }}\r\n                  className=\"smallMarginTop\"\r\n                >\r\n                  <Link to=\"/\">{\"Already have an account? Sign in\"}</Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n     \r\n          </div>\r\n        </Container>\r\n\r\n        {/* <div\r\n          style={{\r\n            backgroundColor: \"#222222\",\r\n            color: \"#222222\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            width: \"100%\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <Copyright />\r\n        </div> */}\r\n        {this.checkForToken()}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminSignup;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\MyDashboard.tsx",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\Sitebar.tsx",["174","175","176"],"import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport API_URL from \"../../environment\";\r\n\r\n// type myState = {\r\n//   anchorE1: any;\r\n//   setAnchorE1: (e: any) => void;\r\n// };\r\ntype AcceptedProps = {\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  sessionToken: any;\r\n};\r\n\r\ntype myState = {\r\n  anchorE1: any;\r\n  anchorOriginVertical: any;\r\n  anchorOriginHorizontal: any;\r\n  transformOriginVertical: any;\r\n  transformOriginHorizontal: any;\r\n  anchorReference: any;\r\n};\r\n\r\nclass Sitebar extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      anchorE1: null,\r\n      anchorOriginVertical: \"bottom\",\r\n      anchorOriginHorizontal: \"right\",\r\n      transformOriginVertical: \"top\",\r\n      transformOriginHorizontal: \"right\",\r\n      anchorReference: \"anchorEl\",\r\n    };\r\n  }\r\n\r\n  deleteUser = async()=>{\r\n    try{\r\n      const response= await \r\n          fetch(`${API_URL}/user/delete`,{\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.sessionToken\r\n                })\r\n            })\r\n            const json= await response.json()\r\n            console.log(json)\r\n            console.log('Profile is deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n    try{\r\n        \r\n      const response= await \r\n      fetch(`${API_URL}/teacherUser/deleteclassentries`,{\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const json= await response.json()\r\n        console.log(json)\r\n        console.log('Class entries are deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  \r\n  \r\n  \r\n  }\r\n\r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return console.log(\"hello\");\r\n    }\r\n  };\r\n\r\n  handleMenu = (e: any) => {\r\n    this.setState({ anchorE1: e.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorE1: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorE1 } = this.state;\r\n    const open = Boolean(this.state.anchorE1);\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar style={{backgroundColor:\"white\"}}  >\r\n          <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          \r\n            {this.props.backArrowToggle === true ? (\r\n              <Link to=\"/myDashboard\">\r\n                <IconButton>\r\n                  <ArrowBackIcon style={{ color: \"black\" }} />\r\n                </IconButton>\r\n              </Link>\r\n            ) : (\r\n              <IconButton className=\"signupTitle\" style={{fontSize: \"20px\"}}\r\n           \r\n             \r\n           >ServiceTracker</IconButton>\r\n            )}\r\n\r\n          \r\n            <div>\r\n              <IconButton onClick={this.handleMenu}>\r\n                <MenuIcon style={{color:\"black\"}} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorE1}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    this.props.clearToken();\r\n                  }}\r\n                >\r\n                  Logout \r\n                </MenuItem>\r\n                <MenuItem   onClick={() => {\r\n                    this.deleteUser();\r\n                    this.props.clearToken();\r\n                  }}>Delete Account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {this.checkForToken()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sitebar;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\AddServiceHours.tsx",["177"],"import React, { Component } from \"react\";\r\n\r\nimport Sitebar from \"../../Sitebar/Sitebar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport API_URL from \"../../../environment\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n//This component enables students to ADD service entries for approval\r\n\r\ntype AcceptedProps = {\r\n  setBackArrowToggle: (e: any) => void;\r\n  setIsAdminFalse: any;\r\n  isAdmin: any;\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  clearToken: any;\r\n  date: any;\r\n  typeOfService: any;\r\n  description: any;\r\n  hours: any;\r\n  status: any;\r\n  studentUserId: any;\r\n  setDate: (e: any) => void;\r\n  setTypeOfService: (e: any) => void;\r\n  setDescription: (e: any) => void;\r\n  setHours: (e: any) => void;\r\n  setStatus: (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  serviceUpdate: boolean;\r\n  setServiceUpdate: (e: any) => void;\r\n};\r\n\r\nclass AddServiceHours extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      serviceUpdate: false,\r\n      setServiceUpdate: (e) => {\r\n        this.setState({ serviceUpdate: e });\r\n      },\r\n    };\r\n  }\r\n\r\n  // ComponentDidMount: \r\n  //1) Keeps back arrow off of landing page sitebar \r\n  //2. If page refreshes, the user will be brought back to this page\r\n  componentDidMount() {\r\n    this.props.setBackArrowToggle(true);\r\n    this.props.setIsAdminFalse(false);\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  }\r\n\r\n  //This submit enables a user to post a new service entry\r\n  //In the fetch a few things are happening\r\n  //1. Entry posts to database\r\n  //2. serviceUpdate value is set to true- thus redirecting to /mydashboard\r\n  //3. setting prop values back to zero\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/service`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        service: {\r\n          date: this.props.date,\r\n          typeOfService: this.props.typeOfService,\r\n          description: this.props.description,\r\n          hours: this.props.hours,\r\n          status: this.props.status,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(\"Service submission was successful\");\r\n        this.state.setServiceUpdate(true);\r\n        //set each prop to empty\r\n        this.props.setDate(\"\");\r\n        this.props.setHours(0);\r\n        this.props.setTypeOfService(\"\");\r\n        this.props.setDescription(\"\");\r\n      } else {\r\n        console.log(\"Service submission failed\");\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n\r\n  //When an entry is successful posted, the user\r\n  //is brought back to student dashboard\r\n  checkForServiceEntry = () => {\r\n    if (this.state.serviceUpdate) {\r\n      return <Redirect to=\"/mydashboard\" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sitebar\r\n          backArrowToggle={this.props.backArrowToggle}\r\n          clearToken={this.props.clearToken}\r\n          sessionToken={this.props.sessionToken}\r\n        />\r\n        <Container\r\n          style={{\r\n            paddingLeft: \"40px\",\r\n            paddingRight: \"40px\",\r\n            marginTop: \"100px\",\r\n          }}\r\n          component=\"main\"\r\n          maxWidth=\"xs\"\r\n        >\r\n          <CssBaseline />\r\n          <div style={{ marginTop: \"25px\" }}>\r\n            <Typography component=\"h1\" variant=\"h4\" className=\"signupTitle\">\r\n              Add Service Entry\r\n            </Typography>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <form onSubmit={this.handleSubmit} noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <form noValidate>\r\n                    <TextField\r\n                      id=\"date\"\r\n                      label=\"Date of Service\"\r\n                      type=\"date\"\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.props.setDate(e.target.value);\r\n                        console.log(this.props.date);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={0}\r\n                    />\r\n                  </form>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}></Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Type of Service\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.props.setTypeOfService(e.target.value);\r\n                        console.log(this.props.typeOfService);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={\" \"}\r\n                    >\r\n                      <MenuItem value={\"Tutoring\"}>Tutoring</MenuItem>\r\n                      <MenuItem value={\"Recycling\"}>Recycling</MenuItem>\r\n                      <MenuItem value={\"NJHS Sponsored Event\"}>\r\n                        NJHS Sponsored Event\r\n                      </MenuItem>\r\n                      <MenuItem value={\"Volunteering\"}>Volunteering</MenuItem>\r\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"description\"\r\n                    label=\"Description of Service\"\r\n                    id=\"text\"\r\n                    onChange={(e) => {\r\n                      this.props.setDescription(e.target.value);\r\n                      console.log(this.props.description);\r\n                    }}\r\n                    defaultValue={\" \"}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <FormControl style={{ minWidth: 160, marginBottom: \"25px\" }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Number of Hours\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => {\r\n                        console.log(e.target.value);\r\n                        this.props.setHours(e.target.value);\r\n                        console.log(this.props.hours);\r\n                        console.log(e.target.value);\r\n                      }}\r\n                      defaultValue={0}\r\n                    >\r\n                      <MenuItem value={1}>1 hour </MenuItem>\r\n                      <MenuItem value={2}>2 hours </MenuItem>\r\n                      <MenuItem value={3}>3 hours</MenuItem>\r\n                    </Select>\r\n                  </FormControl>{\" \"}\r\n                </Grid>\r\n              </Grid>\r\n              {/* <Link to=\"/mydashboard\"> */}\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\r\n              >\r\n                <h3>Submit</h3>\r\n              </Button>\r\n              {/* </Link> */}\r\n              <Grid container justify=\"flex-end\"></Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        {console.log(this.props.typeOfService)}\r\n        {console.log(this.props.hours)}\r\n        {console.log(this.props.description)}\r\n        {this.checkForServiceEntry()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddServiceHours;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\StudentDashboard\\UpdateServiceHours.tsx",["178","179"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\StudentView\\ViewEvents.tsx",["180","181","182","183","184","185","186","187","188"],"import React, {Component} from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Sitebar from '../Sitebar/Sitebar';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport API_URL from \"../../environment\";\r\n\r\ntype AcceptedProps = {   \r\n \r\n  setIsAdminFalse: any;\r\n  isAdmin:any;\r\n  sessionToken?: any;\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  setBackArrowToggle: (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  eventInfo: any;\r\n  setEventInfo: (e: any) => void;\r\n};\r\n\r\nclass ViewEvents extends React.Component  <AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      eventInfo: [],\r\n      setEventInfo: (entry) => {\r\n        this.setState({ eventInfo: entry });\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.setBackArrowToggle(true);\r\n    this.fetchService();\r\n    this.props.setIsAdminFalse(false);\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (this.props.isAdmin === false) {\r\n      return <Redirect to=\"/myDashboard\" />;\r\n    } else {\r\n      return <Redirect to=\"/admindash\" />;\r\n    }\r\n  }\r\n\r\n  fetchService = () => {\r\n    fetch(`${API_URL}/events/studentview`, {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        console.log(json);\r\n        this.state.setEventInfo(json);\r\n        console.log(this.state.eventInfo);\r\n      });\r\n  };\r\n\r\n  \r\n    render() { \r\n        return (   <div>\r\n          {\" \"}\r\n          {/* <Sitebar\r\n            backArrowToggle={this.props.backArrowToggle}\r\n            // arrowHandler={this.props.arrowHandler}\r\n            clearToken={this.props.clearToken}\r\n            sessionToken={this.props.sessionToken}\r\n          />{\" \"} */}\r\n          {/* <h2\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginTop: \"50px\",\r\n              marginBottom: \"50px\",\r\n            }}\r\n          >\r\n            Upcoming Service Opportunities\r\n          </h2> */}\r\n         \r\n          <div className=\"viewEvents\">\r\n            \r\n            <Box style={{ background: \"#5390d9\", color:\"white\", padding: \"0px\", width: \"100%\" }}>\r\n              <Box >\r\n                {\" \"}\r\n              <h2 style={{marginLeft:\"25px\"}}>Upcoming Events</h2>\r\n                {/* <ButtonGroup\r\n                  style={{ color: \"black\" }}\r\n                  className=\"toRight\"\r\n                  disableElevation\r\n                  variant=\"contained\"\r\n                  aria-label=\"text primary button group\"\r\n                >\r\n                  <Link to=\"/addevents\">\r\n                    <Button style={{ color: \"black\", marginLeft: \"60px\" }}>\r\n                     \r\n                    </Button>\r\n                  </Link>\r\n                </ButtonGroup> */}\r\n              </Box>\r\n            </Box>\r\n            {this.state.eventInfo.length > 0 ? (\r\n              this.state.eventInfo.map((event: any, index: any) => (\r\n                <Accordion style={{ margin: \".5px\" }} key={this.state.eventInfo.id} square>\r\n                  <AccordionSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                  >\r\n                  \r\n                    <Typography style={{ marginLeft: \"15px\" }}>\r\n                      {this.state.eventInfo[index].date} \r\n          \r\n                    </Typography>\r\n                    <Typography style={{ marginLeft: \"45px\" }}>\r\n                     \r\n                      {this.state.eventInfo[index].title}\r\n                    </Typography>\r\n                    <div style={{ marginLeft: \"auto\" }}>\r\n                     \r\n                    </div>\r\n                  </AccordionSummary>\r\n              <AccordionDetails style={{ padding: \"0px 30px\"}}>\r\n                  \r\n                \r\n                  <Typography>\r\n                      <p style={{ fontSize: \"12px\", marginRight:\"100px\"   }}>Location: {this.state.eventInfo[index].location} </p>\r\n                      <p style={{ fontSize: \"12px\" }}>Hours: {this.state.eventInfo[index].hours} </p>\r\n                    </Typography>\r\n                    <Typography>\r\n                      \r\n                    </Typography>\r\n                </AccordionDetails>\r\n                <AccordionDetails>\r\n     \r\n    \r\n                  \r\n                  \r\n                </AccordionDetails>\r\n  \r\n                \r\n               \r\n     \r\n                  <AccordionDetails style={{ padding: \"0px 30px\"}}>\r\n                    <Typography>\r\n                      <p style={{ fontSize: \"12px\" }}>Event Description:</p>\r\n                    </Typography>\r\n                  </AccordionDetails>\r\n                  <AccordionDetails>\r\n                    <Typography>\r\n                      <p style={{  fontSize: \"12px\", padding:\"0px 15px\" }}> {this.state.eventInfo[index].description}</p>\r\n                    </Typography>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              ))\r\n            ) : (\r\n              <div style={{marginTop: \"30px\"}}> There are no upcoming events. </div>\r\n            )}\r\n          </div>\r\n          {console.log(this.state.eventInfo.title)}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n \r\nexport default ViewEvents;","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\AdminDash.tsx",["189","190","191","192","193"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\EventSchedule.tsx",["194","195","196"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\Sitebar\\AdminSitebar.tsx",["197","198","199","200"],"import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport API_URL from \"../../environment\";\r\n\r\ntype AcceptedProps = {\r\n  backArrowToggle: any;\r\n  // arrowHandler: any;\r\n  clearToken: any;\r\n  sessionToken: any;\r\n  setViewManageHours:  (e: any) => void;\r\n  setViewStudentAccount:  (e: any) => void;\r\n  setViewEventSchedule:  (e: any) => void;\r\n  setViewSearch:  (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  anchorE1: any;\r\n  anchorOriginVertical: any;\r\n  anchorOriginHorizontal: any;\r\n  transformOriginVertical: any;\r\n  transformOriginHorizontal: any;\r\n  anchorReference: any;\r\n};\r\n\r\nclass AdminSitebar extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      anchorE1: null,\r\n      anchorOriginVertical: \"bottom\",\r\n      anchorOriginHorizontal: \"right\",\r\n      transformOriginVertical: \"top\",\r\n      transformOriginHorizontal: \"right\",\r\n      anchorReference: \"anchorEl\",\r\n    };\r\n  }\r\n\r\n  deleteUser = async()=>{\r\n    try{\r\n      const response= await \r\n          fetch(`${API_URL}/teacherUser/deleteadmin`,{\r\n                method: 'DELETE',\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': this.props.sessionToken\r\n                })\r\n            })\r\n            const json= await response.json()\r\n            console.log(json)\r\n            console.log('Teacher is deleted')\r\n         \r\n        \r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n    try{\r\n        \r\n      const response= await \r\n      fetch(`${API_URL}/teacherUser/deleteclass`,{\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const json= await response.json()\r\n        console.log(json)\r\n        console.log('Class is deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n    try{\r\n        \r\n      const response= await \r\n      fetch(`${API_URL}/teacherUser/deleteclassentries`,{\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n        const json= await response.json()\r\n        console.log(json)\r\n        console.log('Class entries are deleted')\r\n    }\r\n    catch(err){\r\n      console.log(err)\r\n    }\r\n  \r\n  }\r\n  \r\n  checkForToken = () => {\r\n    if (!this.props.sessionToken) {\r\n      return <Redirect to=\"/\" />;\r\n    } else {\r\n      return console.log(\"hello\");\r\n    }\r\n  };\r\n\r\n\r\n  handleMenu = (e: any) => {\r\n    this.setState({ anchorE1: e.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorE1: null });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { anchorE1 } = this.state;\r\n    const open = Boolean(this.state.anchorE1);\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar style={{backgroundColor:\"white\"}} position=\"absolute\">\r\n          <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <IconButton className=\"signupTitle\" style={{fontSize: \"20px\"}}\r\n             onClick={() => {\r\n              this.props.setViewSearch(false );\r\n              this.props.setViewManageHours(false );\r\n              this.props.setViewEventSchedule(false );\r\n              this.props.setViewStudentAccount(false );\r\n           \r\n            }}\r\n          \r\n            \r\n          >ServiceTracker</IconButton>\r\n            \r\n\r\n{/*       \r\n            {this.props.backArrowToggle === true ? (\r\n              <Link to=\"/adminDash\">\r\n                <IconButton>\r\n                  <ArrowBackIcon style={{ color: \"black\" }} />\r\n                </IconButton>\r\n                \r\n              </Link>\r\n            ) : (\r\n              <div></div>\r\n            )} */}\r\n          \r\n            <div>\r\n        \r\n              <IconButton onClick={this.handleMenu}>\r\n                <MenuIcon style={{color:\"black\"}} />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorE1}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n              >\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    this.props.clearToken();\r\n                  }}\r\n                >\r\n                  Logout\r\n                </MenuItem>\r\n                <MenuItem onClick={()=>{this.deleteUser();  this.props.clearToken();}}>Delete Account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n   \r\n        {this.checkForToken()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminSitebar;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageAccounts.tsx",["201","202","203","204","205","206"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\UpdateEvents.tsx",["207"],"import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport API_URL from \"../../../environment\";\r\n\r\n//This component is the EDIT EVENTS modal where event info is updated\r\n\r\ntype AcceptedProps = {\r\n  date: any;\r\n  setDate: (e: any) => void;\r\n  oneEvent: any;\r\n  sessionToken?: any;\r\n  eventInfo: any;\r\n  setOpen2: (e: any) => void;\r\n  fetchEvents: any;\r\n  open2: any;\r\n  eventInfoIndex: any;\r\n  title: any;\r\n  hours: any;\r\n  setHours: (e: any) => void;\r\n  location: any;\r\n  setLocation: (e: any) => void;\r\n  description: any;\r\n  setTitle: (e: any) => void;\r\n  setDescription: (e: any) => void;\r\n};\r\n\r\ntype myState = {\r\n  eventUpdate: boolean;\r\n  setEventUpdate: (e: any) => void;\r\n};\r\n\r\nclass UpdateEvent extends React.Component<AcceptedProps, myState> {\r\n  constructor(props: AcceptedProps) {\r\n    super(props);\r\n    this.state = {\r\n      eventUpdate: false,\r\n      setEventUpdate: (e) => {\r\n        this.setState({ eventUpdate: e });\r\n      },\r\n    };\r\n  }\r\n\r\n  //This is fetch is called when a user clicks \"SUBMIT\"\r\n  //This fetch updates the values of a specific event\r\n  //this.props.oneEvent.id ( given value in EventSchedule.tsx)\r\n  // is how I am able to select a specific entry\r\n  //Notice that the values of each variable come from the variables defined\r\n  //in EventSchedule.tsx\r\n  //After the fetch- redirected to /adminEvent, open2 is set to false\r\n  //this closing the modal, and fetchEvents() updates contents of table\r\n  handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n    fetch(`${API_URL}/events/${this.props.oneEvent.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        events: {\r\n          date: this.props.date,\r\n          title: this.props.title,\r\n          description: this.props.description,\r\n          hours: this.props.hours,\r\n          location: this.props.location,\r\n        },\r\n      }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: this.props.sessionToken,\r\n      }),\r\n    }).then((response) => {\r\n      if (response.status === 200) {\r\n        console.log(\"Event update submission was successful\");\r\n        this.state.setEventUpdate(true);\r\n\r\n        this.props.fetchEvents();\r\n        this.props.setOpen2(false);\r\n      } else {\r\n        console.log(\"Event update submission failed\");\r\n      }\r\n      return response.json();\r\n    });\r\n  };\r\n\r\n  checkForEventEntry = () => {\r\n    if (this.state.eventUpdate) {\r\n      return <Redirect to=\"/adminDash\" />;\r\n    }\r\n  };\r\n\r\n  //This function closes the EDIT EVENTS modal\r\n  handleClickClose = () => {\r\n    this.props.setOpen2(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={this.props.open2}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <Typography\r\n            className=\"adminTitle\"\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            Update Event\r\n          </Typography>\r\n        </DialogTitle>\r\n        <form onSubmit={this.handleSubmit} noValidate>\r\n          <DialogContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <form noValidate>\r\n                  <TextField\r\n                    id=\"date\"\r\n                    label=\"Date of Service\"\r\n                    type=\"date\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onChange={(e) => {\r\n                      this.props.setDate(e.target.value);\r\n                    }}\r\n                    // this.props.eventInfoIndex holds this events specific information\r\n                    //this was stored in EventSchedule.tsx when the user clicked the edit icon\r\n                    //Notice, how I can not dig into the contents using dot notation\r\n                    defaultValue={this.props.eventInfoIndex.date}\r\n                  />\r\n                </form>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}></Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl style={{ minWidth: 160 }}>\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Title of Event\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    onChange={(e) => {\r\n                      this.props.setTitle(e.target.value);\r\n                    }}\r\n                    defaultValue={this.props.eventInfoIndex.title}\r\n                  />\r\n                  <TextField\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Location\"\r\n                    type=\"text\"\r\n                    fullWidth\r\n                    onChange={(e) => {\r\n                      this.props.setLocation(e.target.value);\r\n                    }}\r\n                    defaultValue={this.props.eventInfoIndex.location}\r\n                  />\r\n                </FormControl>{\" \"}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"off\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Event Description\"\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    this.props.setDescription(e.target.value);\r\n                  }}\r\n                  defaultValue={this.props.eventInfoIndex.description}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  style={{\r\n                    minWidth: 160,\r\n                    marginBottom: \"25px\",\r\n                  }}\r\n                >\r\n                  <InputLabel id=\"demo-simple-select-label\">\r\n                    Number of Hours\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    onChange={(e) => {\r\n                      this.props.setHours(e.target.value);\r\n                    }}\r\n                    defaultValue={this.props.eventInfoIndex.hours}\r\n                    //   value={age}\r\n                    //   onChange={handleChange}\r\n                  >\r\n                    <MenuItem value={1}>1</MenuItem>\r\n                    <MenuItem value={2}>2</MenuItem>\r\n                    <MenuItem value={3}>3</MenuItem>\r\n                  </Select>\r\n                </FormControl>{\" \"}\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <DialogActions>\r\n              <Button\r\n                onClick={() => {\r\n                  this.handleClickClose();\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n\r\n              <Button type=\"submit\">Submit</Button>\r\n            </DialogActions>\r\n            <Grid container justify=\"flex-end\"></Grid>\r\n          </DialogContent>{\" \"}\r\n        </form>\r\n        {this.checkForEventEntry()}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateEvent;\r\n","C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\Events\\AddEvents.tsx",["208"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\EditStudentAccounts.tsx",["209","210"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\ManageHours.tsx",["211","212","213","214","215","216"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\environment.tsx",[],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\StudentLeaderboard.tsx",["217","218","219","220","221","222"],"C:\\Users\\Jam.000\\Desktop\\1150 Code Folder\\HourTracker\\hourtracker\\src\\Components\\AdminView\\StudentProfile.tsx",["223","224","225"],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"234","line":18,"column":8,"nodeType":"232","messageId":"233","endLine":18,"endColumn":18},{"ruleId":"230","severity":1,"message":"235","line":19,"column":8,"nodeType":"232","messageId":"233","endLine":19,"endColumn":18},{"ruleId":"230","severity":1,"message":"236","line":20,"column":8,"nodeType":"232","messageId":"233","endLine":20,"endColumn":18},{"ruleId":"230","severity":1,"message":"237","line":22,"column":3,"nodeType":"232","messageId":"233","endLine":22,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":53,"column":41,"nodeType":"240","endLine":53,"endColumn":105},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"241","line":33,"column":10,"nodeType":"232","messageId":"233","endLine":33,"endColumn":19},{"ruleId":"230","severity":1,"message":"242","line":8,"column":9,"nodeType":"232","messageId":"233","endLine":8,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":29,"column":40,"nodeType":"240","endLine":29,"endColumn":129},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"241","line":20,"column":10,"nodeType":"232","messageId":"233","endLine":20,"endColumn":19},{"ruleId":"243","severity":1,"message":"244","line":54,"column":3,"nodeType":"245","messageId":"246","endLine":56,"endColumn":4},{"ruleId":"238","severity":1,"message":"239","line":163,"column":17,"nodeType":"240","endLine":163,"endColumn":56},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"241","line":16,"column":10,"nodeType":"232","messageId":"233","endLine":16,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":45,"column":35,"nodeType":"240","endLine":45,"endColumn":99},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"247","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":17},{"ruleId":"238","severity":1,"message":"239","line":53,"column":35,"nodeType":"240","endLine":53,"endColumn":99},{"ruleId":"248","severity":1,"message":"249","line":70,"column":13,"nodeType":"240","endLine":70,"endColumn":41},{"ruleId":"230","severity":1,"message":"250","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":20},{"ruleId":"230","severity":1,"message":"251","line":12,"column":8,"nodeType":"232","messageId":"233","endLine":12,"endColumn":18},{"ruleId":"230","severity":1,"message":"252","line":16,"column":8,"nodeType":"232","messageId":"233","endLine":16,"endColumn":12},{"ruleId":"230","severity":1,"message":"253","line":20,"column":10,"nodeType":"232","messageId":"233","endLine":20,"endColumn":30},{"ruleId":"230","severity":1,"message":"254","line":30,"column":10,"nodeType":"232","messageId":"233","endLine":30,"endColumn":16},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"241","line":16,"column":10,"nodeType":"232","messageId":"233","endLine":16,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"255","line":15,"column":10,"nodeType":"232","messageId":"233","endLine":15,"endColumn":25},{"ruleId":"230","severity":1,"message":"256","line":16,"column":10,"nodeType":"232","messageId":"233","endLine":16,"endColumn":23},{"ruleId":"230","severity":1,"message":"257","line":17,"column":10,"nodeType":"232","messageId":"233","endLine":17,"endColumn":23},{"ruleId":"230","severity":1,"message":"258","line":18,"column":10,"nodeType":"232","messageId":"233","endLine":18,"endColumn":26},{"ruleId":"230","severity":1,"message":"254","line":19,"column":10,"nodeType":"232","messageId":"233","endLine":19,"endColumn":16},{"ruleId":"230","severity":1,"message":"259","line":21,"column":5,"nodeType":"232","messageId":"233","endLine":21,"endColumn":15},{"ruleId":"243","severity":1,"message":"244","line":51,"column":3,"nodeType":"245","messageId":"246","endLine":53,"endColumn":4},{"ruleId":"260","severity":1,"message":"261","line":68,"column":5,"nodeType":"262","messageId":"263","endLine":70,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":71,"column":5,"nodeType":"262","messageId":"263","endLine":81,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":82,"column":5,"nodeType":"262","messageId":"263","endLine":86,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":90,"column":5,"nodeType":"262","messageId":"263","endLine":92,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":93,"column":5,"nodeType":"262","messageId":"263","endLine":103,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":104,"column":5,"nodeType":"262","messageId":"263","endLine":108,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":112,"column":5,"nodeType":"262","messageId":"263","endLine":114,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":115,"column":5,"nodeType":"262","messageId":"263","endLine":125,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":126,"column":5,"nodeType":"262","messageId":"263","endLine":130,"endColumn":6},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"251","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":18},{"ruleId":"230","severity":1,"message":"264","line":12,"column":8,"nodeType":"232","messageId":"233","endLine":12,"endColumn":14},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"265","line":120,"column":9,"nodeType":"232","messageId":"233","endLine":120,"endColumn":34},{"ruleId":"230","severity":1,"message":"231","line":1,"column":16,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"266","line":6,"column":8,"nodeType":"232","messageId":"233","endLine":6,"endColumn":15},{"ruleId":"230","severity":1,"message":"264","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":14},{"ruleId":"230","severity":1,"message":"267","line":9,"column":8,"nodeType":"232","messageId":"233","endLine":9,"endColumn":19},{"ruleId":"230","severity":1,"message":"268","line":10,"column":8,"nodeType":"232","messageId":"233","endLine":10,"endColumn":18},{"ruleId":"230","severity":1,"message":"269","line":11,"column":8,"nodeType":"232","messageId":"233","endLine":11,"endColumn":21},{"ruleId":"230","severity":1,"message":"270","line":12,"column":10,"nodeType":"232","messageId":"233","endLine":12,"endColumn":14},{"ruleId":"230","severity":1,"message":"271","line":13,"column":8,"nodeType":"232","messageId":"233","endLine":13,"endColumn":16},{"ruleId":"230","severity":1,"message":"272","line":14,"column":8,"nodeType":"232","messageId":"233","endLine":14,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"273","line":3,"column":10,"nodeType":"232","messageId":"233","endLine":3,"endColumn":16},{"ruleId":"230","severity":1,"message":"274","line":4,"column":10,"nodeType":"232","messageId":"233","endLine":4,"endColumn":18},{"ruleId":"230","severity":1,"message":"259","line":26,"column":7,"nodeType":"232","messageId":"233","endLine":26,"endColumn":17},{"ruleId":"238","severity":1,"message":"239","line":378,"column":39,"nodeType":"240","endLine":378,"endColumn":82},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"275","line":13,"column":8,"nodeType":"232","messageId":"233","endLine":13,"endColumn":20},{"ruleId":"230","severity":1,"message":"276","line":15,"column":8,"nodeType":"232","messageId":"233","endLine":15,"endColumn":13},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"251","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":18},{"ruleId":"230","severity":1,"message":"277","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":21},{"ruleId":"230","severity":1,"message":"270","line":11,"column":10,"nodeType":"232","messageId":"233","endLine":11,"endColumn":14},{"ruleId":"230","severity":1,"message":"278","line":3,"column":20,"nodeType":"232","messageId":"233","endLine":3,"endColumn":33},{"ruleId":"230","severity":1,"message":"279","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":20},{"ruleId":"230","severity":1,"message":"275","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":20},{"ruleId":"230","severity":1,"message":"280","line":9,"column":8,"nodeType":"232","messageId":"233","endLine":9,"endColumn":25},{"ruleId":"230","severity":1,"message":"281","line":12,"column":10,"nodeType":"232","messageId":"233","endLine":12,"endColumn":18},{"ruleId":"230","severity":1,"message":"276","line":14,"column":8,"nodeType":"232","messageId":"233","endLine":14,"endColumn":13},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"282","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":25},{"ruleId":"230","severity":1,"message":"276","line":10,"column":8,"nodeType":"232","messageId":"233","endLine":10,"endColumn":13},{"ruleId":"230","severity":1,"message":"267","line":11,"column":8,"nodeType":"232","messageId":"233","endLine":11,"endColumn":19},{"ruleId":"230","severity":1,"message":"275","line":12,"column":8,"nodeType":"232","messageId":"233","endLine":12,"endColumn":20},{"ruleId":"230","severity":1,"message":"283","line":14,"column":8,"nodeType":"232","messageId":"233","endLine":14,"endColumn":18},{"ruleId":"230","severity":1,"message":"284","line":16,"column":8,"nodeType":"232","messageId":"233","endLine":16,"endColumn":22},{"ruleId":"230","severity":1,"message":"258","line":24,"column":10,"nodeType":"232","messageId":"233","endLine":24,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"260","severity":1,"message":"261","line":77,"column":5,"nodeType":"262","messageId":"263","endLine":79,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":80,"column":5,"nodeType":"262","messageId":"263","endLine":91,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":92,"column":5,"nodeType":"262","messageId":"263","endLine":94,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":95,"column":5,"nodeType":"262","messageId":"263","endLine":97,"endColumn":6},{"ruleId":"260","severity":1,"message":"261","line":98,"column":5,"nodeType":"262","messageId":"263","endLine":100,"endColumn":6},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"285","line":39,"column":6,"nodeType":"232","messageId":"233","endLine":39,"endColumn":17},{"ruleId":"230","severity":1,"message":"286","line":82,"column":13,"nodeType":"232","messageId":"233","endLine":82,"endColumn":17},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SelectRole' is defined but never used.","'StudentPin' is defined but never used.","'TeacherPin' is defined but never used.","'BrowserRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Copyright' is defined but never used.","'Picture' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'TextField' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'makeStyles' is defined but never used.","'Typography' is defined but never used.","'Chip' is defined but never used.","'SettingsPowerRounded' is defined but never used.","'faUndo' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCheckSquare' is defined but never used.","'faTimesCircle' is defined but never used.","'faQuestionCircle' is defined but never used.","'percentage' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Button' is defined but never used.","'service' is assigned a value but never used.","'Sitebar' is defined but never used.","'ButtonGroup' is defined but never used.","'AddBoxIcon' is defined but never used.","'EventNoteIcon' is defined but never used.","'Link' is defined but never used.","'EditIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'faHome' is defined but never used.","'faSearch' is defined but never used.","'AdminSitebar' is defined but never used.","'Paper' is defined but never used.","'ArrowBackIcon' is defined but never used.","'ListItemProps' is defined but never used.","'ListItemIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Redirect' is defined but never used.","'DialogContentText' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'studentUser' is defined but never used.","'json' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]