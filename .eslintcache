[{"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/index.tsx":"1","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/reportWebVitals.ts":"2","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/App.tsx":"3","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/Signup.tsx":"4","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/SelectRole.tsx":"5","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/AdminSignup.tsx":"6","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/Login.tsx":"7","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/StudentPin.tsx":"8","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/TeacherPin.tsx":"9","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/ViewEvents.tsx":"10","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/AdminDash.tsx":"11","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/UpdateServiceHours.tsx":"12","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/AddServiceHours.tsx":"13","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/MyDashboard.tsx":"14","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/ManageAccounts.tsx":"15","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/StudentViewDashboard/Chart.tsx":"16","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/ManageHours.tsx":"17","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/Events/EventSchedule.tsx":"18","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/environment.tsx":"19","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/Events/UpdateEvents.tsx":"20","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/Events/AddEvents.tsx":"21","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/EditStudentAccounts.tsx":"22","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Sitebar/Sitebar.tsx":"23","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Sitebar/AdminSitebar.tsx":"24","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/StudentLeaderboard/ServiceEntry.tsx":"25","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/StudentLeaderboard/StudentEntry.tsx":"26","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/StudentLeaderboard/StudentLeaderboard.tsx":"27","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/StudentLeaderboard/StudentProfile.tsx":"28","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/Event.tsx":"29","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/StudentViewDashboard/ChartEntry.tsx":"30","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/Events/EventScheduleItem.tsx":"31","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/ManageAccount.tsx":"32","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/ManageHoursEntry.tsx":"33"},{"size":500,"mtime":1612116749330,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":1612116749330,"results":"36","hashOfConfig":"35"},{"size":18096,"mtime":1612182828698,"results":"37","hashOfConfig":"35"},{"size":7335,"mtime":1612153786536,"results":"38","hashOfConfig":"35"},{"size":3260,"mtime":1612116749327,"results":"39","hashOfConfig":"35"},{"size":6990,"mtime":1612153789736,"results":"40","hashOfConfig":"35"},{"size":8394,"mtime":1612182663661,"results":"41","hashOfConfig":"35"},{"size":2898,"mtime":1612182820228,"results":"42","hashOfConfig":"35"},{"size":2409,"mtime":1612116749327,"results":"43","hashOfConfig":"35"},{"size":4065,"mtime":1612148483846,"results":"44","hashOfConfig":"35"},{"size":13690,"mtime":1612181488321,"results":"45","hashOfConfig":"35"},{"size":10669,"mtime":1612155388169,"results":"46","hashOfConfig":"35"},{"size":8181,"mtime":1612154547212,"results":"47","hashOfConfig":"35"},{"size":5661,"mtime":1612150057859,"results":"48","hashOfConfig":"35"},{"size":5580,"mtime":1612178639198,"results":"49","hashOfConfig":"35"},{"size":4679,"mtime":1612150002619,"results":"50","hashOfConfig":"35"},{"size":7154,"mtime":1612180841065,"results":"51","hashOfConfig":"35"},{"size":7891,"mtime":1612181565551,"results":"52","hashOfConfig":"35"},{"size":259,"mtime":1612116749330,"results":"53","hashOfConfig":"35"},{"size":7908,"mtime":1612157880822,"results":"54","hashOfConfig":"35"},{"size":7407,"mtime":1612156923262,"results":"55","hashOfConfig":"35"},{"size":4929,"mtime":1612178548835,"results":"56","hashOfConfig":"35"},{"size":4195,"mtime":1612116749330,"results":"57","hashOfConfig":"35"},{"size":4980,"mtime":1612181143208,"results":"58","hashOfConfig":"35"},{"size":3120,"mtime":1612146460536,"results":"59","hashOfConfig":"35"},{"size":2436,"mtime":1612141387903,"results":"60","hashOfConfig":"35"},{"size":3398,"mtime":1612141388746,"results":"61","hashOfConfig":"35"},{"size":2788,"mtime":1612141386940,"results":"62","hashOfConfig":"35"},{"size":1765,"mtime":1612148333303,"results":"63","hashOfConfig":"35"},{"size":5156,"mtime":1612181890888,"results":"64","hashOfConfig":"35"},{"size":4954,"mtime":1612181729085,"results":"65","hashOfConfig":"35"},{"size":3008,"mtime":1612178774928,"results":"66","hashOfConfig":"35"},{"size":5802,"mtime":1612180771781,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"rh48sn",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"70"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"70"},"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/index.tsx",[],["157","158"],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/reportWebVitals.ts",[],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/App.tsx",["159","160"],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/Signup.tsx",["161","162","163"],"import React, { Component, FormEvent } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport API_URL from \"../../environment\";\n\nimport { StudentUser, StudentAuthResponse } from '../types'\n\n//This component is where a STUDENT would create an account\n\ntype AcceptedProps = {\n  sessionToken: string | null;\n  updateToken: (newToken: string | null) => void;\n  setUser: (user: StudentUser | null) => void;\n  // setEmail: any;\n  // setPassword: any;\n  // classCode?: any;\n  // setClassCode?: any;\n  // setFirstName?: any;\n  // setLastName?: any;\n  // setIsAdminFalse: (e: any) => void;\n};\n\ninterface SignupState {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n  classCode: string;\n}\n\n\n\n//This is the copyright function. It is not currently being shown on screen.\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © ServiceTracker \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nclass Signup extends React.Component<AcceptedProps, SignupState> {\n\n  constructor (props: AcceptedProps) {\n    super(props)\n    this.state = {\n      email: '',\n      firstName: '',\n      lastName: '',\n      password: '',\n      classCode: ''\n    }\n  }\n\n\n\n  //This fetch CREATES a student user. They are then linked to the correct group through the class code.\n  handleSubmit (event: FormEvent) {\n    event.preventDefault();\n    fetch(`${API_URL}/user/signup`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        studentUser: {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password,\n          classId: this.state.classCode\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((json: StudentAuthResponse) => {\n        this.props.updateToken(json.sessionToken);\n        this.props.setUser(json.user)\n      });\n  };\n\n  //This function checks to see if an account has been successfully created (ie student has session token)\n  //It then pushes the user to the proper viewpoint\n  // checkForToken = () => {\n  //   if (!this.props.sessionToken || this.props.firstName === undefined) {\n  //     return <Redirect to=\"/signup\" />;\n  //   }\n  //   return <Redirect to=\"/myDashboard\" />;\n  // };\n\n  render() {\n    return (\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\n        <CssBaseline />\n        <Grid item xs={false} sm={6} md={5} lg={5} className=\"newLanding\" />\n\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n\n          <div className=\"formPadding\">\n            <Typography\n              className=\"signupTitle\"\n              component=\"h1\"\n              style={{ marginTop: \"35px\" }}\n              variant=\"h4\"\n            >\n              Student Sign-Up\n            </Typography>\n            <br></br>\n            <form onSubmit={this.handleSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n              \n                    name=\"firstName\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    onChange={(e) => {\n                      this.setState({ firstName: e.target.value });\n                    }}\n                    defaultValue={this.state.firstName}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"off\"\n                    onChange={(e) => {\n                      this.setState({ lastName: e.target.value });\n                    }}\n                    defaultValue={this.state.lastName}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    onChange={(e) => {\n                      this.setState({ email: e.target.value });\n                    }}\n                    defaultValue={this.state.email}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"off\"\n                    onChange={(e) => {\n                      this.setState({ password: e.target.value });\n                    }}\n                    defaultValue={this.state.password}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"Code\"\n                    label=\"Enter Class Code \"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"off\"\n                    onChange={(e) => {\n                      this.setState({ classCode: e.target.value });\n                    }}\n                    defaultValue={this.state.classCode}\n                  />\n                </Grid>\n\n                <Grid item xs={12}></Grid>\n              </Grid>\n              {/* <Link to=\"/mydashboard\"> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\n              >\n                Sign Up\n              </Button>\n              {/* </Link> */}\n\n              <Grid container justify=\"flex-end\">\n                <Grid item className=\"smallMarginTop\">\n                  <Link to=\"/\">{\"Already have an account? Sign in\"}</Link>\n                </Grid>\n              </Grid>\n            </form>\n        \n          </div>\n        </Container>\n\n        {/* <div\n          style={{\n            backgroundColor: \"#222222\",\n            color: \"#222222\",\n            position: \"fixed\",\n            bottom: \"0\",\n            width: \"100%\",\n            height: \"30px\",\n          }}\n        >\n          <Copyright />\n        </div> */}\n        {/* {this.checkForToken()} */}\n      </Grid>\n    );\n  }\n}\n\nexport default Signup;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/SelectRole.tsx",["164","165"],"import React, { Component } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Link } from \"react-router-dom\";\n\n//This component directs a user to the proper signup screen -- admin versus user\n\n\n//This function is not currently being called.\n//It contains the copyright.\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © ServiceTracker \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nclass SelectRole extends React.Component {\n  render() {\n    return (\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\n        <CssBaseline />\n        <Grid item xs={false} sm={6} md={5} lg={5} className=\"newLanding\" />\n\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n\n          <div className=\"formPadding\" style={{ marginTop: \"150px\" }}>\n            <Typography\n              className=\"signupTitle\"\n              style={{ marginTop: \"0px\" }}\n              component=\"h1\"\n              variant=\"h5\"\n            >\n              Choose Your Account Type:\n            </Typography>\n            <br></br>\n\n            <form noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}></Grid>\n                <Grid item xs={12} sm={6}></Grid>\n\n                <Grid item xs={6}>\n                  <Link to=\"/signup\">\n                    <Button\n                      style={{ height: \"150px\" }}\n                      fullWidth\n                      variant=\"contained\"\n                    >\n                      STUDENT\n                    </Button>{\" \"}\n                  </Link>\n                </Grid>\n                <Grid item xs={6}>\n                  <div>\n                    {\" \"}\n                    <Link to=\"/adminsignup\">\n                      <Button\n                        style={{ height: \"150px\" }}\n                        fullWidth\n                        variant=\"contained\"\n                      >\n                        <Grid item xs={12}>\n                          {\" \"}\n                          TEACHER\n                        </Grid>\n                      </Button>\n                    </Link>\n                  </div>\n                </Grid>\n                <Grid item xs={12}></Grid>\n              </Grid>\n\n              <Grid container justify=\"flex-end\">\n                <Grid\n                  item\n                  style={{ marginBottom: \"50px\" }}\n                  className=\"smallMarginTop\"\n                >\n                  <Link to=\"/\">{\"Already have an account? Sign in\"}</Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Container>\n\n        {/* <div\n          style={{\n            backgroundColor: \"#222222\",\n            color: \"#222222\",\n            position: \"fixed\",\n            bottom: \"0\",\n            width: \"100%\",\n            height: \"30px\",\n          }}\n        >\n          <Copyright />\n        </div> */}\n      </Grid>\n    );\n  }\n}\n\nexport default SelectRole;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/AdminSignup.tsx",["166","167","168"],"import React, { Component } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport API_URL from \"../../environment\";\n\nimport { TeacherUser, TeacherAuthResponse } from '../types'\n\n//This component is where an ADMIN would create an account\n\n//This function displays copyright information.\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © ServiceTracker \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\ntype AcceptedProps = {\n  sessionToken: string | null;\n  updateToken: (newToken: string | null) => void;\n  setUser: (user: TeacherUser | null) => void;\n  // email: any;\n  // firstName: string;\n  // lastName: string;\n  // password: any;\n  // setEmail: any;\n  // setPassword: any;\n  // classCode?: any;\n  // setClassCode?: any;\n  // setFirstName?: any;\n  // setLastName?: any;\n  // setTeacherProfile: (e: any) => void;\n  // teacherAccount: any;\n};\n\ninterface AdminSignupState {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nclass AdminSignup extends React.Component<AcceptedProps, AdminSignupState> {\n  \n  constructor (props: AcceptedProps) {\n    super(props)\n    this.state = {\n      email: '',\n      firstName: '',\n      lastName: '',\n      password: ''\n    }\n  }\n  \n  \n  //This fetch CREATES an Admin account.\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`${API_URL}/teacheruser/signup`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        teacherUser: {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n      }),\n    })\n      .then((response) => response.json())\n      .then((json: TeacherAuthResponse) => {\n        // if (json !== undefined) {\n        //   this.props.setTeacherProfile(json); //taking information from the server and setting it to our state\n        // } else {\n        //   this.props.setTeacherProfile([]);\n        // }\n        this.props.updateToken(json.sessionToken);\n        this.props.setUser(json.user)\n      });\n  };\n\n  //If an Admin account is properly created with a session token the user is redirected to the proper page\n  // checkForToken = () => {\n  //   if (!this.props.sessionToken || this.state.firstName === undefined) {\n  //     return <Redirect to=\"/adminsignup\" />;\n  //   }\n  //   return <Redirect to=\"/admindash\" />;\n  // };\n\n  render() {\n    return (\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\n        <CssBaseline />\n        <Grid item xs={false} sm={6} md={5} lg={5} className=\"newLanding\" />\n\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n\n          <div className=\"formPadding\">\n            <Typography\n              className=\"signupTitle\"\n              style={{ marginTop: \"100px\" }}\n              component=\"h1\"\n              variant=\"h4\"\n            >\n              Admin Signup\n            </Typography>\n            <br></br>\n            <form onSubmit={this.handleSubmit} noValidate>\n              <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                  <TextField\n              \n                    name=\"firstName\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    onChange={(e) => {\n                      this.setState({ firstName: e.target.value });\n                    }}\n                    defaultValue={this.state.firstName}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"off\"\n                    onChange={(e) => {\n                      this.setState({ lastName: e.target.value });\n                    }}\n                    defaultValue={this.state.lastName}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    onChange={(e) => {\n                      this.setState({ email: e.target.value });\n                    }}\n                    defaultValue={this.state.email}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"off\"\n                    onChange={(e) => {\n                      this.setState({ password: e.target.value });\n                    }}\n                    defaultValue={this.state.password}\n                  />\n                </Grid>\n                <Grid item xs={12}></Grid>\n              </Grid>\n              {/* <Link to=\"/teacherpin\"> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\n              >\n                Admin Sign Up\n              </Button>\n              {/* </Link> */}\n\n              <Grid container justify=\"flex-end\">\n                <Grid\n                  item\n                  style={{ marginBottom: \"12px\" }}\n                  className=\"smallMarginTop\"\n                >\n                  <Link to=\"/\">{\"Already have an account? Sign in\"}</Link>\n                </Grid>\n              </Grid>\n            </form>\n     \n          </div>\n        </Container>\n\n        {/* <div\n          style={{\n            backgroundColor: \"#222222\",\n            color: \"#222222\",\n            position: \"fixed\",\n            bottom: \"0\",\n            width: \"100%\",\n            height: \"30px\",\n          }}\n        >\n          <Copyright />\n        </div> */}\n        {/* {this.checkForToken()} */}\n      </Grid>\n    );\n  }\n}\n\nexport default AdminSignup;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/Login.tsx",["169","170","171","172"],"import React, { Component } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport API_URL from \"../../environment\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport World from \"../../Assets/undraw_the_world_is_mine_nb0e (1).svg\";\n\n//This component appears on the page as soon as a user arrives to the site\n\n//This function is not currently being called.\n//It contains the copyright.\n\nfunction Copyright() {\n  return (\n    <div>\n      <Typography variant=\"body2\" align=\"center\"></Typography>\n      <Typography variant=\"body2\" align=\"center\">\n        {\"Copyright © ServiceTracker \"}\n        {new Date().getFullYear()}\n        {\".\"}\n      </Typography>\n    </div>\n  );\n}\n\ntype AcceptedProps = {\n  sessionToken: string | null;\n  updateToken: (newToken: string | null) => void;\n  \n  // setEmail: any;\n  // setPassword: any;\n  // classCode?: any;\n  // setClassCode?: any;\n  // setFirstName?: any;\n  // setLastName?: any;\n  // collectToken: any;\n  // isAdmin: any;\n  // setIsAdminTrue: any;\n  // setIsAdminFalse: any;\n  // setTeacherProfile: (e: any) => void;\n};\n\ninterface LoginState {\n  email: string;\n  // firstName: string;\n  // lastName: string;\n  password: string;\n}\n\nclass Login extends React.Component<AcceptedProps, LoginState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      email: '',\n      // firstName: '',\n      // lastName: '',\n      password: ''\n    }\n  }\n\n  //Nested Fetches- This setup allows a student & a teacher to log in using the same form.\n  //It takes the inputted information, determines if student or teacher, and then shows proper page\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`${API_URL}/user/login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        studentUser: {\n          // firstName: this.props.firstName,\n          // lastName: this.props.lastName,\n          email: this.state.email,\n          password: this.state.password,\n          // classId: this.props.classCode,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n      }),\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Login was successful\");\n        } else {\n          console.log(\"Login in failed\");\n        }\n        return response.json();\n      })\n      .then((json) => {\n        // this.props.setIsAdminFalse(false);\n        this.props.updateToken(json.sessionToken);\n        if (this.props.sessionToken) {\n          console.log(\"yes\");\n        } else {\n          fetch(`${API_URL}/teacheruser/login`, {\n            method: \"POST\",\n            body: JSON.stringify({\n              teacherUser: {\n                email: this.state.email,\n                password: this.state.password,\n              },\n            }),\n            headers: new Headers({\n              \"Content-Type\": \"application/json\",\n            }),\n          })\n            .then((response) => {\n              if (response.status === 200) {\n                console.log(\"Login was successful\");\n              } else {\n                console.log(\"Login in failed\");\n              }\n              return response.json();\n            })\n            .then((json) => {\n              // this.props.setIsAdminTrue(true);\n\n              // if (json !== undefined) {\n              //   this.props.setTeacherProfile(json);\n              // } else {\n              //   this.props.setTeacherProfile([]);\n              // }\n              this.props.updateToken(json.sessionToken);\n            });\n        }\n      });\n  };\n\n  //This function searches to see if the user has a session token.\n  //It then checks the status of isAdmin and pushes user to the appropriate page\n  // checkForToken = () => {\n  //   if (!this.props.sessionToken || this.props.isAdmin === \"\") {\n  //     return <Redirect to=\"/\" />;\n  //   } else if (this.props.isAdmin === false) {\n  //     return <Redirect to=\"/myDashboard\" />;\n  //   } else {\n  //     return <Redirect to=\"/admindash\" />;\n  //   }\n  // };\n\n  render() {\n    return (\n      <Grid container component=\"main\" style={{ height: \"100vh\" }}>\n        <CssBaseline />\n\n        <Grid\n          item\n          xs={false}\n          sm={6}\n          md={5}\n          lg={5}\n          className=\"newLanding\"\n        ></Grid>\n\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n\n          <div className=\"formPadding\">\n            <Hidden smUp>\n              <div\n                style={{\n                  width: \"75vw\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <img className=\"miniImage\" src={World}></img>\n              </div>\n            </Hidden>\n            <Typography\n              className=\"marginHome signupTitle\"\n              style={{ marginBottom: \"5px\" }}\n              component=\"h1\"\n              variant=\"h4\"\n            >\n              ServiceTracker\n            </Typography>\n            <Hidden smUp>\n              {\" \"}\n              <Typography style={{ fontSize: \"10px\", textAlign: \"center\" }}>\n                <p>\n                  Easily tracks your hours, so you can focus on{\" \"}\n                  <i>doing good.</i>\n                </p>\n              </Typography>\n            </Hidden>\n            <Hidden xsDown>\n              {\" \"}\n              <Typography style={{ fontSize: \"13px\", textAlign: \"center\" }}>\n                {\" \"}\n                Easily tracks your hours, so you can focus on <i>\n                  doing good.\n                </i>{\" \"}\n              </Typography>\n            </Hidden>\n\n            <br></br>\n\n            <form onSubmit={this.handleSubmit} noValidate>\n              <Grid container spacing={2}>\n                {/* <Grid item xs={6} sm={6}></Grid>\n                <Grid item xs={6} sm={6}></Grid> */}\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    onChange={(e) => {\n                      this.setState({ email: e.target.value });\n                    }}\n                    defaultValue={this.state.email}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"off\"\n                    onChange={(e) => {\n                      this.setState({ password: e.target.value });\n                    }}\n                    defaultValue={this.state.password}\n                  />\n                </Grid>\n                <Grid item xs={12}></Grid>\n              </Grid>\n              {/* <Link to=\"./admindash\"> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\n              >\n                Member Login\n              </Button>\n              <br></br>\n\n              {/* </Link> */}\n\n              <Grid container justify=\"flex-end\">\n                <Grid item className=\"smallMarginTop\">\n                  <Link to=\"/selectrole\"> {\"Need an account? Sign up\"}</Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Container>\n        {/* \n        <div\n          style={{\n            // backgroundColor: \"#222222\",\n            color: \"#222222\",\n            position: \"fixed\",\n            bottom: \"0\",\n            width: \"100%\",\n            height: \"30px\",\n          }}\n        >\n          <Copyright />\n        </div> */}\n        {/* {this.checkForToken()} */}\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/StudentPin.tsx",["173","174"],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Home/TeacherPin.tsx",["175","176","177","178"],"import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Falcon from \"../../Assets/White Falcon.png\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  Link\n \n } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © ServiceTracker \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\n\ntype myProps={\n  sessionToken:any,\n  teacherAccount: any\n}\n\n\n\nclass TeacherPin extends React.Component<myProps,{}> {\n\n  componentDidMount(){\n    console.log(this.props.teacherAccount.teacherUser?.classId)\n  }\n  render() {\n    \n    \n    return (\n      <div> \n\n  \n      <div className= \"mainDiv\" >\n      \n       \n      <Container className=\"auth\" component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      \n         \n      <div className=\"falconpic\"> <img src={Falcon} style={{width: '10em',  borderRadius: \"30%\"}}></img>\n      \n      \n      </div>\n      <div className=\"formPadding\">\n        <Typography className=\"signupTitle\" component=\"h1\" variant=\"h6\">\n          CLASS CODE:\n          {this.props.teacherAccount.teacherUser?.classId}\n        </Typography>\n        <h5 className=\"signupTitle\"> Students will use this code to join your group. </h5>\n        <br></br>\n        \n        <form noValidate>\n          <Grid container spacing={2}>\n         \n        \n            <Grid item xs={12}>\n            <h1 className=\"signupTitle\"></h1>\n         \n            </Grid>\n            <Grid item xs={12}>\n        \n        \n      \n            </Grid>\n            <Grid item xs={12}></Grid>\n          </Grid>\n          <Link to=\"/chart\">\n          <Button fullWidth variant=\"contained\" color=\"primary\">\n          <ArrowForwardIcon />\n          </Button></Link>\n        \n      \n\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n      \n            </Grid>\n          </Grid>\n        </form>\n        <Box mt={5}>\n  <Copyright />\n</Box>\n      </div>\n      \n</Container>\n\n</div>\n  </div> \n    );\n  }\n}\n\nexport default TeacherPin;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/ViewEvents.tsx",["179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React, {Component} from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport Sitebar from '../Sitebar/Sitebar';\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Box from \"@material-ui/core/Box\";\nimport API_URL from \"../../environment\";\n\nimport Event from './StudentDashboard/Event'\nimport { Event as EventType, Events } from '../types'\n\n\ntype AcceptedProps = {   \n \n  // setIsAdminFalse: any;\n  // isAdmin:any;\n  sessionToken: string;\n  backArrowToggle: any;\n  // arrowHandler: any;\n  clearToken: any;\n  setBackArrowToggle: (e: any) => void;\n};\n\ntype myState = {\n  eventsInfo: Events;\n  // setEventInfo: (e: any) => void;\n};\n\nclass ViewEvents extends React.Component  <AcceptedProps, myState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      eventsInfo: [],\n      // setEventInfo: (entry) => {\n      //   this.setState({ eventsInfo: entry });\n      // },\n    };\n  }\n\n  componentDidMount(){\n    this.props.setBackArrowToggle(true);\n    this.fetchService();\n    // this.props.setIsAdminFalse(false);\n    // if (!this.props.sessionToken) {\n    //   return <Redirect to=\"/\" />;\n    // } else if (this.props.isAdmin === false) {\n    //   return <Redirect to=\"/myDashboard\" />;\n    // } else {\n    //   return <Redirect to=\"/admindash\" />;\n    // }\n  }\n\n  fetchService = () => {\n    fetch(`${API_URL}/events/studentview`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n        this.setState({ eventsInfo: json });\n      });\n  };\n\n  \n    render() { \n        return (   <div>\n          {\" \"}\n          {/* <Sitebar\n            backArrowToggle={this.props.backArrowToggle}\n            // arrowHandler={this.props.arrowHandler}\n            clearToken={this.props.clearToken}\n            sessionToken={this.props.sessionToken}\n          />{\" \"} */}\n          {/* <h2\n            style={{\n              textAlign: \"center\",\n              marginTop: \"50px\",\n              marginBottom: \"50px\",\n            }}\n          >\n            Upcoming Service Opportunities\n          </h2> */}\n         \n          <div className=\"viewEvents\">\n            \n            <Box style={{ background: \"#5390d9\", color:\"white\", padding: \"0px\", width: \"100%\" }}>\n              <Box >\n                {\" \"}\n              <h2 style={{marginLeft:\"25px\"}}>Upcoming Events</h2>\n                {/* <ButtonGroup\n                  style={{ color: \"black\" }}\n                  className=\"toRight\"\n                  disableElevation\n                  variant=\"contained\"\n                  aria-label=\"text primary button group\"\n                >\n                  <Link to=\"/addevents\">\n                    <Button style={{ color: \"black\", marginLeft: \"60px\" }}>\n                     \n                    </Button>\n                  </Link>\n                </ButtonGroup> */}\n              </Box>\n            </Box>\n            {this.state.eventsInfo.length > 0 ? (\n              this.state.eventsInfo.map((event: EventType, index: number) => (\n                // https://kevinyckim33.medium.com/jsx-spread-operator-component-props-meaning-3c9bcadd2493\n                <Event {...event} />\n              ))\n            ) : (\n              <div style={{marginTop: \"30px\"}}> There are no upcoming events. </div>\n            )}\n          </div>\n        </div>\n      );\n    }\n  }\n \nexport default ViewEvents;","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/AdminDash.tsx",["193","194","195","196","197"],"import React, { Component } from \"react\";\n\nimport { faHome, faTrophy } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faAddressBook } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Box from \"@material-ui/core/Box\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport AdminSitebar from \"../Sitebar/AdminSitebar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport ManageAccounts from \"./ManageAccounts\";\nimport EventSchedule from \"./Events/EventSchedule\";\nimport ManageHoursTable from \"./ManageHours\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport clipboard from \"../../Assets/undraw_No_data_re_kwbl.svg\"\nimport API_URL from \"../../environment\";\nimport StudentLeaderboard from \"./StudentLeaderboard/StudentLeaderboard\"\n\nimport { TeacherUser } from '../types'\n\n\ntype AcceptedProps = {\n  sessionToken: string;\n  backArrowToggle: any;\n  // arrowHandler: any;\n  clearToken: () => void;\n  teacherAccount: TeacherUser;\n\n  setBackArrowToggle: any;\n\n};\n\ntype myState = {\n  // classId: any;\n  // setClassId: (e: any) => void;\n  // viewStudentAccount: boolean;\n  // viewEventSchedule: boolean;\n  // viewManageHours: boolean;\n  // viewSearch: boolean;\n  // setViewManageHours: (e: any) => void;\n  // setViewSearch: (e: any) => void;\n  // setViewEventSchedule: (e: any) => void;\n  // setViewStudentAccount: (e: any) => void;\n};\n\nclass AdminDash extends React.Component<AcceptedProps, myState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      // viewManageHours: false,\n      // viewSearch: false,\n      // viewEventSchedule: false,\n      // viewStudentAccount: false,\n      // setViewSearch: (entry) => {\n      //   this.setState({ viewSearch: entry });\n      // },\n      // setViewManageHours: (entry) => {\n      //   this.setState({ viewManageHours: entry });\n      // },\n      // setViewEventSchedule: (entry) => {\n      //   this.setState({ viewEventSchedule: entry });\n      // },\n      // setViewStudentAccount: (entry) => {\n      //   this.setState({ viewStudentAccount: entry });\n      // },\n      // classId: [],\n      // setClassId: (entry) => {\n      //   this.setState({ classId: entry });\n      // },\n    };\n  }\n\n  fetchTeacherData = () => {\n    fetch(`${API_URL}/teacherUser`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n\n        // this.state.setClassId(json.classId);\n      });\n  };\n\n  // checkForToken = () => {\n\n  //   if (!this.props.sessionToken) {\n  //     return <Redirect to=\"/\" />;\n  //   } else if (this.props.isAdmin === false) {\n  //     return <Redirect to=\"/myDashboard\" />;\n  //   } else {\n  //     return <Redirect to=\"/admindash\" />;\n  //   }\n  // };\n\n  componentDidMount() {\n    // this.fetchTeacherData();\n    this.props.setBackArrowToggle(false);\n    // this.props.setIsAdminTrue(true);\n    // this.checkForToken();\n    // this.props.arrowHandler();\n\n  }\n\n  render() {\n    return (\n      <div>\n        <AdminSitebar\n          // setViewSearch={this.state.setViewSearch}\n          // setViewManageHours={this.state.setViewManageHours}\n          // setViewStudentAccount={this.state.setViewStudentAccount}\n          // setViewEventSchedule={this.state.setViewEventSchedule}\n          backArrowToggle={this.props.backArrowToggle}\n          clearToken={this.props.clearToken}\n          sessionToken={this.props.sessionToken}\n\n        />\n        <Hidden smUp>\n          <Paper\n            square\n            style={{ marginTop: \"50px\", backgroundColor: \"#2f2e41\" }}\n          >\n            <Tabs\n              variant=\"fullWidth\"\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              aria-label=\"icon tabs example\"\n            >\n\n              <Tab\n                onClick={() => {\n                  this.setState({ viewStudentAccount: false });\n                  this.setState({ viewEventSchedule: false });\n                  this.setState({ viewManageHours: false });\n                  this.setState({ viewSearch: true });\n                }}\n                icon={<FontAwesomeIcon\n                  style={{ color: \"white\", fontSize: \"20px\" }}\n                  icon={faTrophy}\n                />} aria-label=\"phone\" />\n              <Tab\n                onClick={() => {\n                  this.setState({ viewSearch: false });\n                  this.setState({ viewStudentAccount: false });\n                  this.setState({ viewEventSchedule: false });\n                  this.setState({ viewManageHours: true });\n                }}\n                icon={\n                  <FontAwesomeIcon\n                    style={{ color: \"white\", fontSize: \"20px\" }}\n                    icon={faClock}\n\n                  />\n                }\n                aria-label=\"favorite\"\n              />\n              <Tab\n                onClick={() => {\n                  this.setState({ viewSearch: false });\n                  this.setState({ viewManageHours: false });\n                  this.setState({ viewStudentAccount: false });\n                  this.setState({ viewEventSchedule: true });\n                }}\n                icon={\n                  <FontAwesomeIcon\n                    style={{ color: \"white\", fontSize: \"20px\" }}\n                    className=\"admindash_icons\"\n                    icon={faCalendarAlt}\n\n                  />\n                }\n                aria-label=\"person\"\n              />\n              <Tab\n                onClick={() => {\n                  this.setState({ viewSearch: false });\n                  this.setState({ viewManageHours: false });\n                  this.setState({ viewEventSchedule: false });\n                  this.setState({ viewStudentAccount: true });\n                }}\n                icon={\n                  <FontAwesomeIcon\n                    style={{ color: \"white\", fontSize: \"20px\" }}\n                    icon={faAddressBook}\n\n                  />\n\n                }\n                aria-label=\"person\"\n              />\n            </Tabs>\n          </Paper>\n        </Hidden>\n        <Grid container component=\"main\">\n          <Hidden xsDown>\n            <Grid\n              style={{ backgroundColor: \"#2f2e41\" }}\n              item\n              xs={2}\n              sm={1}\n              md={2}\n              lg={2}\n            >\n              <Box className=\"admindash\">\n                <Hidden smDown>\n                  <Typography\n                    onClick={() => {\n                      this.setState({ viewSearch: false });\n                      this.setState({ viewStudentAccount: false });\n                      this.setState({ viewEventSchedule: false });\n                      this.setState({ viewManageHours: false });\n                    }}\n                    className=\"adminTitle\"\n                    component=\"h2\"\n                    variant=\"h5\"\n                    style={{\n                      marginLeft: \"25px\",\n                      marginBottom: \"25px\",\n                      font: \"Sofia, cursive !important\",\n                      color: \"white\",\n                    }}\n                  >\n\n                  </Typography>\n                  {/* <hr /> */}\n                </Hidden>\n\n\n                <Box className=\"admindash_card\">\n                  <h3\n                    onClick={() => {\n                      this.setState({ viewSearch: true });\n                      this.setState({ viewStudentAccount: false });\n                      this.setState({ viewEventSchedule: false });\n                      this.setState({ viewManageHours: true });\n                    }}\n                    className=\"marginBottom\"\n                    style={{ cursor: \"pointer\", color: \"white\" }}\n                  >\n                    {\" \"}\n                    <FontAwesomeIcon\n                      className=\"admindash_icons\"\n                      icon={faTrophy}\n                    />\n                    <Hidden smDown>Totals</Hidden>\n                  </h3>\n                </Box>\n\n                <h3\n                  className=\"marginBottom\"\n                  style={{ cursor: \"pointer\", color: \"white\" }}\n                  onClick={() => {\n                    this.setState({ viewSearch: false });\n                    this.setState({ viewStudentAccount: false });\n                    this.setState({ viewEventSchedule: false });\n                    this.setState({ viewManageHours: true });\n                  }}\n                >\n                  {\" \"}\n                  <FontAwesomeIcon className=\"admindash_icons\" icon={faClock} />\n                  <Hidden smDown>Hours</Hidden>\n                </h3>\n\n                <h3\n                  className=\"marginBottom\"\n                  style={{ cursor: \"pointer\", color: \"white\" }}\n                  onClick={() => {\n                    this.setState({ viewSearch: false });\n                    this.setState({ viewStudentAccount: false });\n                    this.setState({ viewManageHours: false });\n                    this.setState({ viewEventSchedule: true });\n                  }}\n                >\n                  {\" \"}\n                  <FontAwesomeIcon\n                    className=\"admindash_icons\"\n                    icon={faCalendarAlt}\n                  />\n                  <Hidden smDown>Events</Hidden>\n                </h3>\n\n                <h3\n                  className=\"marginBottom\"\n                  style={{ cursor: \"pointer\", color: \"white\" }}\n                  onClick={() => {\n                    this.setState({ viewSearch: false });\n                    this.setState({ viewManageHours: false });\n                    this.setState({ viewEventSchedule: false });\n                    this.setState({ viewStudentAccount: true });\n                  }}\n                >\n                  <FontAwesomeIcon\n                    className=\"admindash_icons\"\n                    icon={faAddressBook}\n\n                  />\n                  <Hidden smDown>Accounts</Hidden>\n                </h3>\n\n              </Box>\n            </Grid>\n          </Hidden>\n\n          \n          <Route path=\"/teacher/manage-accounts\">\n            <>\n              <Hidden xsDown>\n                <Grid item xs={1} sm={1} md={1} lg={1}>\n                  {\" \"}\n                </Grid>\n              </Hidden>\n              <Grid item xs={12} sm={8} md={8} lg={8}>\n                <ManageAccounts\n                  // setIsAdminTrue={this.props.setIsAdminTrue}\n                  teacherAccount={this.props.teacherAccount}\n                  backArrowToggle={this.props.backArrowToggle}\n                  clearToken={this.props.clearToken}\n                  sessionToken={this.props.sessionToken}\n                  setBackArrowToggle={this.props.setBackArrowToggle}\n                />{\" \"}\n              </Grid>{\" \"}\n            </>\n          </Route>\n          <Route path=\"/teacher/search\">\n            <>\n              <Hidden xsDown>\n                <Grid item xs={1} sm={1} md={1} lg={1}>\n                  {\" \"}\n                </Grid>\n              </Hidden>\n              <Grid item xs={12} sm={9} md={8} lg={8}>\n                <StudentLeaderboard\n                  sessionToken={this.props.sessionToken}\n                ></StudentLeaderboard>\n              </Grid>\n            </>\n          </Route>\n          <Route path=\"/teacher/event-schedule\">\n            <>\n              <Hidden xsDown>\n                <Grid item xs={1} sm={1} md={1} lg={1}>\n                  {\" \"}\n                </Grid>\n              </Hidden>\n              <Grid item xs={12} sm={9} md={8} lg={8}>\n                <EventSchedule\n                  // setIsAdminTrue={this.props.setIsAdminTrue}\n                  backArrowToggle={this.props.backArrowToggle}\n                  // arrowHandler={this.arrowHandler}\n                  clearToken={this.props.clearToken}\n                  sessionToken={this.props.sessionToken}\n                  setBackArrowToggle={this.props.setBackArrowToggle}\n                ></EventSchedule>{\" \"}\n              </Grid>\n            </>\n          </Route>\n          <Route path=\"/teacher/manage-hours\">\n            <>\n          \n              <Grid item xs={12} sm={10} md={10} lg={9}>\n                <ManageHoursTable\n                  teacherAccount={this.props.teacherAccount}\n                  // setIsAdminTrue={this.props.setIsAdminTrue}\n                  backArrowToggle={this.props.backArrowToggle}\n                  clearToken={this.props.clearToken}\n                  sessionToken={this.props.sessionToken}\n                  setBackArrowToggle={this.props.setBackArrowToggle}\n                ></ManageHoursTable>{\" \"}\n              </Grid>{\" \"}\n            </>\n          </Route>\n          <Route exact path=\"/teacher\">\n            <Grid item xs={12} sm={8} md={9} lg={10} >\n              <div className=\"clip\" > <img className=\"clipPhoto\" src={clipboard}></img>\n                <div className=\"classCodeImage\"> <h2 className=\"signupTitle\" >Class Code </h2>    <h2 className=\"classCodeId classCodeNumber\" >{this.props.teacherAccount.classId}</h2> </div>\n              </div>\n            </Grid>\n            </Route>\n          \n        </Grid>\n\n\n      </div>\n    );\n  }\n}\n\nexport default AdminDash;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/UpdateServiceHours.tsx",["198","199"],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/AddServiceHours.tsx",["200","201","202"],"import React, { Component, FormEvent } from \"react\";\n\nimport Sitebar from \"../../Sitebar/Sitebar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport API_URL from \"../../../environment\";\n\nimport { Redirect } from \"react-router-dom\";\n\nimport { Service, ServiceType } from '../../types'\n\n//This component enables students to ADD service entries for approval\n\ntype AcceptedProps = {\n  setBackArrowToggle: (e: any) => void;\n  // setIsAdminFalse: any;\n  // isAdmin: any;\n  sessionToken: string;\n  backArrowToggle: any;\n  clearToken: () => void;\n};\n\ntype myState = {\n  // serviceUpdate: boolean;\n  // setServiceUpdate: (e: any) => void;\n  date: string;\n  typeOfService: ServiceType | '';\n  description: string;\n  hours: number;\n  // status: \n};\n\nclass AddServiceHours extends React.Component<AcceptedProps, myState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      // serviceUpdate: false,\n      // setServiceUpdate: (e) => {\n      //   this.setState({ serviceUpdate: e });\n      // },\n      date: '',\n      typeOfService: '',\n      description: '',\n      hours: 1\n    };\n  }\n\n  // ComponentDidMount: \n  //1) Keeps back arrow off of landing page sitebar \n  //2. If page refreshes, the user will be brought back to this page\n  componentDidMount() {\n    this.props.setBackArrowToggle(true);\n    // this.props.setIsAdminFalse(false);\n    // if (!this.props.sessionToken) {\n    //   return <Redirect to=\"/\" />;\n    // } else if (this.props.isAdmin === false) {\n    //   return <Redirect to=\"/myDashboard\" />;\n    // } else {\n    //   return <Redirect to=\"/admindash\" />;\n    // }\n  }\n\n  //This submit enables a user to post a new service entry\n  //In the fetch a few things are happening\n  //1. Entry posts to database\n  //2. serviceUpdate value is set to true- thus redirecting to /mydashboard\n  //3. setting prop values back to zero\n  handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    fetch(`${API_URL}/service`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        service: {\n          date: this.state.date,\n          typeOfService: this.state.typeOfService,\n          description: this.state.description,\n          hours: this.state.hours,\n          // status: this.props.status,\n          status: 'Pending'\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    }).then((response) => {\n      if (response.status === 200) {\n        // console.log(\"Service submission was successful\");\n        // this.state.setServiceUpdate(true);\n        //set each prop to empty\n        // this.props.setDate(\"\");\n        // this.props.setHours(0);\n        // this.props.setTypeOfService(\"\");\n        // this.props.setDescription(\"\");\n      } else {\n        console.log(\"Service submission failed\");\n      }\n      return response.json();\n    });\n  };\n\n  //When an entry is successful posted, the user\n  //is brought back to student dashboard\n  // checkForServiceEntry = () => {\n  //   if (this.state.serviceUpdate) {\n  //     return <Redirect to=\"/mydashboard\" />;\n  //   }\n  // };\n\n  render() {\n    return (\n      <div>\n        <Sitebar\n          backArrowToggle={this.props.backArrowToggle}\n          clearToken={this.props.clearToken}\n          sessionToken={this.props.sessionToken}\n        />\n        <Container\n          style={{\n            paddingLeft: \"40px\",\n            paddingRight: \"40px\",\n            marginTop: \"100px\",\n          }}\n          component=\"main\"\n          maxWidth=\"xs\"\n        >\n          <CssBaseline />\n          <div style={{ marginTop: \"25px\" }}>\n            <Typography component=\"h1\" variant=\"h4\" className=\"signupTitle\">\n              Add Service Entry\n            </Typography>\n\n            <br></br>\n            <br></br>\n            <form onSubmit={this.handleSubmit} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <form noValidate>\n                    <TextField\n                      id=\"date\"\n                      label=\"Date of Service\"\n                      type=\"date\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      onChange={(e) => {\n                        this.setState({ date: e.target.value });\n                      }}\n                      defaultValue={0}\n                    />\n                  </form>\n                </Grid>\n                <Grid item xs={12} sm={6}></Grid>\n                <Grid item xs={12}>\n                  <FormControl style={{ minWidth: 160 }}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      Type of Service\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      onChange={(e) => {\n                        this.setState({ typeOfService: e.target.value as ServiceType | '' });\n                      }}\n                      defaultValue={\"\"}\n                    >\n                      <MenuItem value={\"Tutoring\"}>Tutoring</MenuItem>\n                      <MenuItem value={\"Recycling\"}>Recycling</MenuItem>\n                      <MenuItem value={\"NJHS Sponsored Event\"}>\n                        NJHS Sponsored Event\n                      </MenuItem>\n                      <MenuItem value={\"Volunteering\"}>Volunteering</MenuItem>\n                      <MenuItem value={\"Other\"}>Other</MenuItem>\n                    </Select>\n                  </FormControl>{\" \"}\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"description\"\n                    label=\"Description of Service\"\n                    id=\"text\"\n                    onChange={(e) => {\n                      this.setState({ description: e.target.value });\n                    }}\n                    defaultValue={\" \"}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControl style={{ minWidth: 160, marginBottom: \"25px\" }}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      Number of Hours\n                    </InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      onChange={(e) => {\n                        this.setState({ hours: e.target.value as number });\n                      }}\n                      defaultValue={0}\n                    >\n                      <MenuItem value={1}>1 hour</MenuItem>\n                      <MenuItem value={2}>2 hours</MenuItem>\n                      <MenuItem value={3}>3 hours</MenuItem>\n                    </Select>\n                  </FormControl>{\" \"}\n                </Grid>\n              </Grid>\n              {/* <Link to=\"/mydashboard\"> */}\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                style={{ backgroundColor: \"#ef476f\", color: \"white\" }}\n              >\n                <h3>Submit</h3>\n              </Button>\n              {/* </Link> */}\n              <Grid container justify=\"flex-end\"></Grid>\n            </form>\n          </div>\n        </Container>\n        {/* {console.log(this.props.typeOfService)}\n        {console.log(this.props.hours)}\n        {console.log(this.props.description)} */}\n        {/* {this.checkForServiceEntry()} */}\n      </div>\n    );\n  }\n}\n\nexport default AddServiceHours;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/MyDashboard.tsx",["203","204"],"import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport Box from \"@material-ui/core/Box\";\nimport Sitebar from \"../../Sitebar/Sitebar\";\nimport Chart from \"../../StudentView/StudentDashboard/StudentViewDashboard/Chart\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ViewEvents from \"../ViewEvents\";\nimport API_URL from \"../../../environment\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport * as T from '../../types'\n\ntype AcceptedProps = {\n  user: T.StudentUser;\n  sessionToken: string;\n\n  // indexNumber: any;\n  // firstName: string;\n  // lastName: string;\n  \n  key: any;\n  backArrowToggle: any;\n  arrowHandler?: any;\n  setBackArrowToggle: (e: any) => void;\n  clearToken: any;\n  \n  // setIsAdminFalse: any;\n  // serviceRequests: any;\n  // setServiceRequests: (e: any) => void;\n  // setIndexNumber: (e: any) => void;\n  // setSpecificEntry: (e: any) => void;\n  // specificEntry: any;\n};\n\ninterface MyDashState {\n  serviceRequests: T.Services;\n}\n\nclass MyDashboard extends React.Component<AcceptedProps, MyDashState> {\n\n  constructor (props: AcceptedProps) {\n    super(props)\n    this.state = {\n      serviceRequests: []\n    }\n\n    this.fetchServiceRequests = this.fetchServiceRequests.bind(this)\n  }\n\n\n  componentDidMount() {\n    this.props.setBackArrowToggle(false);\n    this.fetchServiceRequests();\n  }\n\n\n  fetchServiceRequests () {\n    fetch(`${API_URL}/service`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n\n        console.log(json)\n        this.setState({ serviceRequests: json }); //taking information from the server and setting it to our state\n\n      });\n  };\n\n\n  calcTotal (status?: T.ServiceStatus) {\n    if (!status)\n      return this.state.serviceRequests\n        .map(s => s.hours)\n        .reduce((a, h) => a + h, 0)\n    return this.state.serviceRequests\n      .map(s => s.status === status ? s.hours : 0)\n      .reduce((a, h) => a + h, 0)\n  }\n\n\n\n  render() {\n    return (\n      <>\n        <Sitebar\n          backArrowToggle={this.props.backArrowToggle}\n          // arrowHandler={this.props.arrowHandler}\n          clearToken={this.props.clearToken}\n          sessionToken={this.props.sessionToken}\n        />\n        <Grid container className=\"studentContainer\" component=\"main\">\n          <Grid item xs={12} sm={12} md={12} lg={12}>\n            <Typography\n              className=\"signupTitle marginStudentDash\"\n              component=\"h2\"\n              variant=\"h5\"\n            >\n              Student Dashboard\n            </Typography>\n          </Grid>\n\n          {/* <Grid item xs={false} sm={false} md={1} lg={1}>   </Grid> */}\n\n          <Grid item xs={12} sm={3} md={3} lg={3}>\n            <div className=\"blueDiv\">\n              <Box className=\"progressCircle\">\n                <CircularProgressbar\n                  styles={{\n                    path: { stroke: \"#06d6a0\" },\n                    text: { fill: \"black\" },\n                  }}\n                  value={(this.calcTotal('Approved') / 30) * 100}\n                  text={`${this.calcTotal('Approved')}/30` }\n                \n                />\n                <Grid container component=\"main\">\n                \n                  \n                  </Grid>\n                  <Hidden xsDown>  <Card style={{marginTop:\"20px\", backgroundColor: \"#fafafa\"}}>\n      <CardContent>\n    \n    \n        <Typography color=\"textSecondary\" variant=\"body2\" component=\"p\">\n         Current Totals\n          <br/><br/>\n            {this.calcTotal('Approved')}  Approved \n          <br/>\n            {this.calcTotal('Denied')}  Denied \n          <br/>\n            {this.calcTotal('Pending')}  Pending \n          <br/>\n         \n        </Typography>\n      </CardContent>\n  \n    </Card></Hidden>\n                \n             \n              </Box>\n            </div>\n          </Grid>\n\n          <Grid\n            style={{ backgroundColor: \"#fafafa\" }}\n            item\n            xs={12}\n            sm={6}\n            md={6}\n            lg={7}\n          >\n            <Box className=\"studentDash\">\n          \n              <Box className=\"studentChart\">\n                <ViewEvents\n                  setBackArrowToggle={this.props.setBackArrowToggle}\n                  // setIsAdminFalse={this.props.setIsAdminFalse}\n                  // isAdmin={this.props.isAdmin}\n                  backArrowToggle={this.props.backArrowToggle}\n                  // arrowHandler={this.arrowHandler}\n                  clearToken={this.props.clearToken}\n                  sessionToken={this.props.sessionToken}\n                />\n                <Chart\n                  serviceRequests={this.state.serviceRequests}\n                  fetchServiceRequests={this.fetchServiceRequests}\n                  // setServiceRequests={this.props.setServiceRequests}\n                  sessionToken={this.props.sessionToken}\n                  // setIndexNumber={this.props.setIndexNumber}\n                  // indexNumber={this.props.indexNumber}\n                  // specificEntry={this.props.specificEntry}\n                  // setSpecificEntry={this.props.setSpecificEntry}\n                />\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n\n      </>\n    );\n  }\n}\n\nexport default MyDashboard;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/ManageAccounts.tsx",["205","206","207","208","209","210","211","212","213","214","215"],"import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem, { ListItemProps } from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport AdminSitebar from \"../Sitebar/AdminSitebar\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Redirect } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\n\n\nimport API_URL from \"../../environment\";\n\nimport { TeacherUser, StudentUsers, StudentUser } from '../types'\nimport ManageAccount from \"./ManageAccount\";\n\ntype AcceptedProps = {\n  sessionToken: string;\n  backArrowToggle: any;\n  // classCode?: any;\n  teacherAccount: TeacherUser;\n  // arrowHandler: any;\n  clearToken: () => void;\n  setBackArrowToggle: (e: any) => void;\n  // setIsAdminTrue: (e: any) => void;\n};\n\ntype MyState = {\n  // firstName: string;\n  // lastName: string;\n  // email: string;\n  // password: string;\n  // setFirstName: (e: any) => void;\n  // setLastName: (e: any) => void;\n  // setEmail: (e: any) => void;\n  // setPassword: (e: any) => void;\n  studentAccounts: StudentUsers;\n  // setStudentAccounts: (e: any) => void;\n  // userId: any;\n  // setUserId: (e: any) => void;\n  // setOpen: (e: any) => void;\n  open: boolean;\n  // oneStudent: any;\n  // setOneStudent: (e: any) => void;\n};\n\nclass ManageAccounts extends React.Component<AcceptedProps, MyState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      // oneStudent: [],\n      // setOneStudent: (entry) => {\n      //   this.setState({ oneStudent: entry });\n      // },\n      // firstName: \"\",\n      // lastName: \"\",\n      // email: \"\",\n      // password: \"\",\n      // setFirstName: (entry) => {\n      //   this.setState({ firstName: entry });\n      // },\n      // setLastName: (entry) => {\n      //   this.setState({ lastName: entry });\n      // },\n      // setEmail: (entry) => {\n      //   this.setState({ email: entry });\n      // },\n      // setPassword: (entry) => {\n      //   this.setState({ password: entry });\n      // },\n\n      // userId: 800,\n      // setUserId: (entry) => {\n      //   this.setState({ userId: entry });\n      // },\n      open: false,\n      // setOpen: (entry) => {\n      //   this.setState({ open: entry });\n      // },\n\n      studentAccounts: [],\n      // setStudentAccounts: (entry) => {\n      //   this.setState({ studentAccounts: entry });\n      // },\n    };\n\n    this.fetchTeacherData = this.fetchTeacherData.bind(this)\n  }\n\n  // handleClickOpen () {\n  //   this.setState({ open: true });\n  // };\n\n  // handleClickClose = () => {\n  //   this.state.setOpen(false);\n  // };\n\n  componentDidMount() {\n    // this.props.arrowHandler();\n    // this.props.setBackArrowToggle(true);\n    // this.props.setIsAdminTrue(true);\n\n    this.fetchTeacherData();\n  }\n\n\n  //This fetch gets all information linked to the classId that is logged in. I then took the list of students and set it to the variable studentData. This is the variable I will use to map over the page.\n  fetchTeacherData () {\n    fetch(`${API_URL}/user/all`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    })\n      .then((res) => res.json())\n      .then((json: StudentUsers) => {\n        // console.log(json);\n        // console.log(json.classId);\n        this.setState({ studentAccounts: json });\n        // console.log(this.state.studentAccounts);\n      });\n  };\n\n  // fetchSpecificStudent = (id: any) => {\n  //   fetch(`${API_URL}/user/${id}`, {\n  //     method: \"GET\",\n  //     headers: new Headers({\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: this.props.sessionToken,\n  //     }),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((json) => {\n  //       console.log(json);\n  //       console.log(json.date);\n  //       this.state.setOneStudent(json);\n  //       this.state.setFirstName(this.state.userId.firstName);\n  //       this.state.setLastName(this.state.userId.lastName);\n  //       this.state.setEmail(this.state.userId.email);\n  //       this.state.setPassword(this.state.userId.password);\n  //     });\n  // };\n\n\n\n  render() {\n    return (\n      <Box>\n \n\n        <Container\n          maxWidth=\"lg\"\n          style={{ height: \"100vh\", paddingLeft:\"0\"}}\n          className=\"studentAccounts manageAccountMarginTop\"\n        >\n          {\" \"}\n          <Typography\n            className=\"adminTitle \"\n            component=\"h2\"\n            variant=\"h5\"\n            style={{\n              textAlign: \"center\",\n              paddingTop: \"30px\",\n              color: \"black\",\n            }}\n          >\n            Student Accounts\n          </Typography>\n          {this.state.studentAccounts.length > 0 ? (\n            this.state.studentAccounts.map((user: StudentUser, index: number) => (\n              <ManageAccount \n                {...user}\n                sessionToken={this.props.sessionToken}\n                fetchTeacherData={this.fetchTeacherData}\n                setBackArrowToggle={this.props.setBackArrowToggle} />\n            ))\n          ) : (\n            <div>You don't currently have any students. </div>\n          )}\n        </Container>\n      </Box>\n    );\n  }\n}\n\nexport default ManageAccounts;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/StudentViewDashboard/Chart.tsx",[],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/ManageHours.tsx",["216","217","218","219","220","221","222"],"import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport AdminSitebar from \"../Sitebar/AdminSitebar\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_URL from \"../../environment\";\n\nimport ManageHoursEntry from './ManageHoursEntry'\nimport { TeacherUser, Services, Service, ServiceStatus } from \"../types\";\n\n\ntype AcceptedProps = {\n  sessionToken: string;\n  backArrowToggle: any;\n  // classCode?: any;\n  teacherAccount: TeacherUser;\n  // arrowHandler: any;\n  clearToken: () => void;\n  setBackArrowToggle: (e: any) => void;\n  // setIsAdminTrue: (e: any) => void;\n};\n\ntype myState = {\n  statusView: ServiceStatus;\n  // status?: any;\n  // open: boolean;\n  // itemId: any;\n  serviceRequests: Services;\n  // setServiceRequests: (e: any) => void;\n  // setOpen: (e: any) => void;\n  // update: boolean;\n  // setUpdate: (e: any) => void;\n};\n\nexport default class ManageHoursTable extends React.Component<AcceptedProps, myState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      statusView: \"Pending\",\n      // status: \"Pending\",\n      serviceRequests: [],\n      // open: false\n      // setServiceRequests: (e) => {\n      //   this.setState({ serviceRequests: e });\n      // },\n      // update: false,\n      // setUpdate: (e) => {\n      //   this.setState({ update: e });\n      // },\n      // setStatusView: (e) => {\n      //   this.setState({ statusView: e });\n      // },\n\n      // itemId: 100,\n      // open: false,\n      // setOpen: (e) => {\n      //   this.setState({ open: e });\n      // },\n    };\n  }\n\n  componentDidMount() {\n    this.fetchServiceRequests();\n    // this.props.setBackArrowToggle(true);\n    // this.props.setIsAdminTrue(true);\n  }\n\n\n\n\n\n  \n  // handleSubmit2 = (id: any) => {\n  //   // id.preventDefault();\n\n  //   fetch(`${API_URL}/service/status/${id}`, {\n  //     method: \"PUT\",\n  //     body: JSON.stringify({\n  //       service: {\n  //         status: \"Denied\",\n  //       },\n  //     }),\n  //     headers: new Headers({\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: this.props.sessionToken,\n  //     }),\n  //   }).then((response) => {\n  //     if (response.status === 200) {\n  //       console.log(\"Service status update submission was successful\");\n  //       this.fetchServiceRequests(\"Pending\");\n  //     } else {\n  //       console.log(\"Service status update submission failed\");\n  //     }\n  //     return response.json();\n  //   });\n  // };\n\n  // handleSubmit3 = (id: any) => {\n  //   // id.preventDefault();\n\n  //   fetch(`${API_URL}/service/status/${id}`, {\n  //     method: \"PUT\",\n  //     body: JSON.stringify({\n  //       service: {\n  //         status: \"Pending\",\n  //       },\n  //     }),\n  //     headers: new Headers({\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: this.props.sessionToken,\n  //     }),\n  //   }).then((response) => {\n  //     if (response.status === 200) {\n  //       console.log(\"Service status update submission was successful\");\n\n  //       // currentStatus === \"Approved\"\n  //       //   ? this.fetchServiceRequests(\"Approved\")\n  //       //   : this.fetchServiceRequests(\"Denied\");\n  //     } else {\n  //       console.log(\"Service status update submission failed\");\n  //     }\n  //     return response.json();\n  //   });\n  // };\n\n  fetchServiceRequests (type?: string) {\n\n    const url = `${API_URL}/service/${this.state.statusView || 'Pending'}`\n\n    fetch(url, {\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: this.props.sessionToken,\n      }),\n    })\n      .then((res) => res.json())\n      .then((json: Services) => {\n        // console.log(json);\n        this.setState({ serviceRequests: json });\n        // console.log(this.state.serviceRequests);\n      });\n  };\n\n\n\n  render() {\n    return (\n      <TableContainer\n        // style={{ paddingLeft: \"15px\", paddingRight: \"15px\" }}\n        className=\"manageHoursMarginTop\"\n        style={{  height: \"100vh\"}}\n        // component={Paper}\n      >\n\n\n        <Box\n          style={{\n            color: \"black\",\n            padding: \"0px\",\n            margin: \"10px\",\n          }}\n        >\n          <Box style={{ marginTop: \"0px\" }}>\n      \n        <Typography\n          className=\"adminTitle\"\n          component=\"h2\"\n          variant=\"h5\"\n          style={{ textAlign: \"center\", marginBottom:\"5px\",  color: \"black\" }}\n        >Manage Hours\n        </Typography>\n            <Box\n              className=\"studentChart\"\n              style={{ paddingTop: \"10px\", textAlign: \"center\" }}\n            >\n              <FormControl style={{ width: \"200px\" }}>\n                {/* <InputLabel id=\"demo-simple-select-label\">Status</InputLabel> */}\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  defaultValue={\"Pending\"}\n                  onChange={(e) => {\n                    console.log(e.target.value);\n                    this.fetchServiceRequests(e.target.value as ServiceStatus);\n                    this.setState({ statusView: e.target.value as ServiceStatus });\n                  }}\n                >\n                  <MenuItem value={\"Pending\"}>Pending</MenuItem>\n                  <MenuItem value={\"Approved\"}>Approved</MenuItem>\n                  <MenuItem value={\"Denied\"}>Denied</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Box>\n        </Box>\n\n        <Table style={{ marginLeft: \"10px\" }}>\n          <TableHead>\n            <TableRow>\n              <TableCell />\n\n              {/* <TableCell>Name</TableCell> */}\n              <TableCell></TableCell>\n              <TableCell align=\"left\"> </TableCell>\n              <TableCell align=\"left\">Description</TableCell>\n\n              <TableCell align=\"center\">Update Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.serviceRequests.length > 0 ? (\n              this.state.serviceRequests.map((service: any, index: any) => (\n                <ManageHoursEntry {...service} sessionToken={this.props.sessionToken} statusView={this.state.statusView} />\n              ))\n            ) : (\n              <div></div>\n            )}\n          </TableBody>\n        </Table>\n        {/* {console.log(this.state.status)}\n\n        {console.log(this.state.statusView)} */}\n      </TableContainer>\n    );\n  }\n}\n\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/Events/EventSchedule.tsx",["223","224","225","226","227","228","229","230","231"],"import React, { Component } from \"react\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AddEvents from \"./AddEvents\";\nimport UpdateEvent from \"./UpdateEvents\";\nimport Box from \"@material-ui/core/Box\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport AdminSitebar from \"../../Sitebar/AdminSitebar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from '@material-ui/core/Paper';\nimport API_URL from \"../../../environment\";\n\nimport EventScheduleItem from './EventScheduleItem'\nimport { Event, Events } from '../../types'\n\n//This component shows the Events that are currently scheduled\n//This component also has links to EDIT EVENTS & ADD EVENTS\n// Delete functionality is also built in here\n\ntype AcceptedProps = {\n  sessionToken: string;\n  backArrowToggle: any;\n  clearToken: () => void;\n  setBackArrowToggle: (e: any) => void;\n  // setIsAdminTrue: (e: any) => void;\n};\n\ntype myState = {\n  // eventInfo: any;\n  // setEventInfo: (e: any) => void;\n  // eventId: any;\n  // setEventId: (e: any) => void;\n  // date: any;\n  // setDate: (e: any) => void;\n  // title: any;\n  // setTitle: (e: any) => void;\n  // description: any;\n  // setDescription: (e: any) => void;\n  // location: any;\n  // setLocation: (e: any) => void;\n  // hours: any;\n  // setHours: (e: any) => void;\n\n  // setOpen: (e: any) => void;\n  // open: any;\n  // setOpen2: (e: any) => void;\n  // open2: any;\n  // oneEvent: any;\n  // setOneEvent: (e: any) => void;\n  // eventInfoIndex: any;\n  // setEventInfoIndex: (e: any) => void;\n  events: Events;\n\n  addEventOpen: boolean;\n};\n\nclass EventSchedule extends React.Component<AcceptedProps, myState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      // hours: \"\",\n      // setHours: (entry) => {\n      //   this.setState({ hours: entry });\n      // },\n      // location: \"\",\n      // setLocation: (entry) => {\n      //   this.setState({ location: entry });\n      // },\n      // description: \"\",\n      // setDescription: (entry) => {\n      //   this.setState({ description: entry });\n      // },\n      // eventInfoIndex: [],\n      // setEventInfoIndex: (entry) => {\n      //   this.setState({ eventInfoIndex: entry });\n      // },\n      // date: \"\",\n      // setDate: (entry) => {\n      //   this.setState({ date: entry });\n      // },\n      // title: \"\",\n      // setTitle: (entry) => {\n      //   this.setState({ title: entry });\n      // },\n      // oneEvent: [],\n      // eventInfo: [],\n      // setOneEvent: (entry) => {\n      //   this.setState({ oneEvent: entry });\n      // },\n      // setEventInfo: (entry) => {\n      //   this.setState({ eventInfo: entry });\n      // },\n      // eventId: 900,\n      // setEventId: (entry) => {\n      //   this.setState({ eventId: entry });\n      // },\n      // open: false,\n      // setOpen: (entry) => {\n      //   this.setState({ open: entry });\n      // },\n      // open2: false,\n      // setOpen2: (entry) => {\n      //   this.setState({ open2: entry });\n      // },\n      events: [],\n\n      addEventOpen: false\n    };\n  }\n\n  //This function opens up ADD EVENTS modal\n  toggleAddEventOpen () {\n    this.setState({ addEventOpen: !this.state.addEventOpen });\n  };\n\n  // //This function opens up the UPDATE EVENTS modal\n  // handleClickOpen2 = () => {\n  //   this.state.setOpen2(true);\n  // };\n\n  // //This function closes the ADD EVENTS modal\n  // handleClickClose = () => {\n  //   this.state.setOpen(false);\n  // };\n\n  //When the component loads:\n  //1. Admin is set as true. AKA If a user refreshes the page, they will be\n  //redirected to admin landing\n  //2. Events are fetched, so the table can be populated\n  componentDidMount() {\n    // this.props.setIsAdminTrue(true);\n    this.fetchEvents();\n  }\n\n  //This function deletes a specific event when the user clicks trashcan\n  //After deleting the event, fetchEvents() is called, to get updated info\n\n\n  //This fetch is specifically used to populate the chart\n  fetchEvents () {\n    fetch(`${API_URL}/events`, {\n      method: \"GET\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    })\n      .then((res) => res.json())\n      .then((json: Events) => {\n        // console.log(json);\n        this.setState({ events: json });\n      });\n  };\n\n  //This fetch is called when the button is clicked and pulls info for individual event\n  //Notice that it takes an argument that is specified down in the return\n  //------This allow us to actually select a specific event\n  //After the fetch is run, we update the state of all our variables\n  //------This ensures that we have the most up-to-date info\n  //------ when autopopulating our PUT form\n  //-------It also makes sure that if a user only updates one detail\n  //-------the rest of the items will have a value and not be blank\n\n  // fetchEventRequests = (id: any) => {\n  //   fetch(`${API_URL}/events/${id}`, {\n  //     method: \"GET\",\n  //     headers: new Headers({\n  //       \"Content-Type\": \"application/json\",\n  //       Authorization: this.props.sessionToken,\n  //     }),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((json) => {\n  //       // console.log(json);\n  //       // console.log(json.date);\n  //       // this.state.setOneEvent(json);\n  //       // this.state.setDate(this.state.eventInfoIndex.date);\n  //       // this.state.setTitle(this.state.eventInfoIndex.title);\n  //       // this.state.setDescription(this.state.eventInfoIndex.description);\n  //       // this.state.setLocation(this.state.eventInfoIndex.location);\n  //       // this.state.setHours(this.state.eventInfoIndex.hours);\n  //     });\n  // };\n\n  render() {\n    return (\n      <div>\n        {\" \"}\n\n        <div></div>\n        <div className=\"viewEvents responsiveMarginTopAdmin\"  >\n\n          <Box style={{ background: \"#fafafa\", padding: \"0px\", marginLeft: \"auto\" }}>\n            <Typography\n              className=\"adminTitle \"\n              component=\"h2\"\n              variant=\"h5\"\n              style={{ textAlign: \"center\", height: \"50px\", paddingLeft: \"30px\", color: \"black\" }}\n            >\n              Upcoming Events\n        </Typography>\n\n            <Box >\n\n              <div\n                style={{ width: \"100%\", display: \"flex\" }}\n                className=\"toRight\"\n              >\n\n                <Button variant=\"contained\" style={{ backgroundColor: \"#5390d9\", color: \"white\", width: \"150px\" }}>\n                  <AddBoxIcon onClick={this.toggleAddEventOpen} />\n                  <h5 style={{ color: \"white\", marginLeft: \"5px\" }}>Add Event</h5>\n                </Button>\n              </div>\n            </Box>\n          </Box>\n          {this.state.events.length > 0\n            ? this.state.events.map((event: Event, index: number) => (\n                <EventScheduleItem {...event} key={index} sessionToken={this.props.sessionToken} fetchEvents={this.fetchEvents} />\n              ))\n            : (\n              <div style={{ marginTop: \"30px\" }}>\n                You currently have no events scheduled.\n                {/* I needed to put AddEvents here as well. Otherwise, the modal won't open unless a user has already created events */}\n                <AddEvents\n                  fetchEvents={this.fetchEvents}\n                  open={this.state.addEventOpen}\n                  // eventInfo={this.state.eventInfo}\n                  toggleOpen={this.toggleAddEventOpen}\n                  sessionToken={this.props.sessionToken}\n                />\n              </div>\n            )\n          }\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EventSchedule;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/environment.tsx",[],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/Events/UpdateEvents.tsx",["232"],"import React, { Component } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { Redirect } from \"react-router-dom\";\nimport API_URL from \"../../../environment\";\n\nimport { Event } from '../../types'\n\n//This component is the EDIT EVENTS modal where event info is updated\n\ninterface AcceptedProps extends Event {\n  // date: any;\n  // setDate: (e: any) => void;\n  // oneEvent: any;\n  sessionToken: string;\n  // eventInfo: any;\n  // setOpen2: (e: any) => void;\n  fetchEvents: () => void;\n  open: boolean;\n  toggle: () => void;\n  // eventInfoIndex: any;\n  // title: any;\n  // hours: any;\n  // setHours: (e: any) => void;\n  // location: any;\n  // setLocation: (e: any) => void;\n  // description: any;\n  // setTitle: (e: any) => void;\n  // setDescription: (e: any) => void;\n};\n\ninterface UpdateEventState {\n  // eventUpdate: boolean;\n  // setEventUpdate: (e: any) => void;\n  date: string;\n  title: string;\n  description: string;\n  hours: number;\n  location: string;\n};\n\nclass UpdateEvent extends React.Component<AcceptedProps, UpdateEventState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      date: this.props.date,\n      title: this.props.title,\n      description: this.props.description,\n      hours: this.props.hours,\n      location: this.props.location\n    };\n  }\n\n  //This is fetch is called when a user clicks \"SUBMIT\"\n  //This fetch updates the values of a specific event\n  //this.props.oneEvent.id ( given value in EventSchedule.tsx)\n  // is how I am able to select a specific entry\n  //Notice that the values of each variable come from the variables defined\n  //in EventSchedule.tsx\n  //After the fetch- redirected to /adminEvent, open2 is set to false\n  //this closing the modal, and fetchEvents() updates contents of table\n  handleSubmit = (event: any) => {\n    event.preventDefault();\n    fetch(`${API_URL}/events/${this.props.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        events: {\n          date: this.props.date,\n          title: this.props.title,\n          description: this.props.description,\n          hours: this.props.hours,\n          location: this.props.location,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    }).then((response) => {\n      if (response.status === 200) {\n        console.log(\"Event update submission was successful\");\n        // this.state.setEventUpdate(true);\n\n        this.props.fetchEvents();\n        this.props.toggle();\n      } else {\n        console.log(\"Event update submission failed\");\n      }\n      return response.json();\n    });\n  };\n\n  // checkForEventEntry = () => {\n  //   if (this.state.eventUpdate) {\n  //     return <Redirect to=\"/adminDash\" />;\n  //   }\n  // };\n\n  //This function closes the EDIT EVENTS modal\n  // handleClickClose = () => {\n  //   this.props.setOpen2(false);\n  // };\n\n  render() {\n    return (\n      <Dialog open={this.props.open}>\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography\n            className=\"adminTitle\"\n            component=\"h2\"\n            variant=\"h5\"\n            style={{ textAlign: \"center\" }}\n          >\n            Update Event\n          </Typography>\n        </DialogTitle>\n        <form onSubmit={this.handleSubmit} noValidate>\n          <DialogContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <form noValidate>\n                  <TextField\n                    id=\"date\"\n                    label=\"Date of Service\"\n                    type=\"date\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    onChange={(e) => {\n                      this.setState({ date: e.target.value });\n                    }}\n                    // this.props.eventInfoIndex holds this events specific information\n                    //this was stored in EventSchedule.tsx when the user clicked the edit icon\n                    //Notice, how I can not dig into the contents using dot notation\n                    defaultValue={this.state.date}\n                  />\n                </form>\n              </Grid>\n              <Grid item xs={12} sm={6}></Grid>\n              <Grid item xs={12}>\n                <FormControl style={{ minWidth: 160 }}>\n                  <TextField\n                    autoComplete=\"off\"\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Title of Event\"\n                    type=\"text\"\n                    fullWidth\n                    onChange={(e) => {\n                      this.setState({ title: e.target.value });\n                    }}\n                    defaultValue={this.state.title}\n                  />\n                  <TextField\n                    autoComplete=\"off\"\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Location\"\n                    type=\"text\"\n                    fullWidth\n                    onChange={(e) => {\n                      this.setState({ location: e.target.value });\n                    }}\n                    defaultValue={this.state.location}\n                  />\n                </FormControl>{\" \"}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"off\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Event Description\"\n                  type=\"text\"\n                  onChange={(e) => {\n                    this.setState({ description: e.target.value });\n                  }}\n                  defaultValue={this.state.description}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl\n                  style={{\n                    minWidth: 160,\n                    marginBottom: \"25px\",\n                  }}\n                >\n                  <InputLabel id=\"demo-simple-select-label\">\n                    Number of Hours\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    onChange={(e) => {\n                      this.setState({ hours: e.target.value as number });\n                    }}\n                    defaultValue={this.state.hours}\n                    //   value={age}\n                    //   onChange={handleChange}\n                  >\n                    <MenuItem value={1}>1</MenuItem>\n                    <MenuItem value={2}>2</MenuItem>\n                    <MenuItem value={3}>3</MenuItem>\n                  </Select>\n                </FormControl>{\" \"}\n              </Grid>\n            </Grid>\n\n            <DialogActions>\n              <Button\n                onClick={this.props.toggle}\n              >\n                Cancel\n              </Button>\n\n              <Button type=\"submit\">Submit</Button>\n            </DialogActions>\n            <Grid container justify=\"flex-end\"></Grid>\n          </DialogContent>{\" \"}\n        </form>\n        {/* {this.checkForEventEntry()} */}\n      </Dialog>\n    );\n  }\n}\n\nexport default UpdateEvent;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/Events/AddEvents.tsx",["233","234"],"import { Component, FormEvent } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { Redirect } from \"react-router-dom\";\nimport API_URL from \"../../../environment\";\n\n\ntype AcceptedProps = {\n  sessionToken: string;\n  // eventInfo: any;\n  // setOpen: (e: any) => void;\n  fetchEvents: any;\n  open: boolean;\n  toggleOpen: () => void;\n};\n\n\n\ntype myState = {\n  date: string;\n  title: string;\n  description: string;\n  hours: number;\n  location: string;\n  // eventUpdate:boolean;\n  // setEventUpdate:(e:any)=> void;\n  // setDate: (e: any) => void;\n  // setTitle: (e: any) => void;\n  // setDescription: (e: any) => void;\n  // setHours: (e: any) => void;\n  // setLocation: (e: any) => void;\n};\n\nclass AddEvent extends Component<AcceptedProps, myState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      date: \"\",\n      location: \"\",\n      description: \"\",\n      hours: 1,\n      title: \" \",\n      // eventUpdate:false,\n      // setEventUpdate: (e) => {this.setState({eventUpdate: e})},\n      // setDate: (e) => {this.setState({date: e})},\n      // setLocation: (e) => {this.setState({location: e})},\n      // setHours: (e) => {this.setState({hours: e})},\n      // setDescription: (e) => {this.setState({description: e})},\n      // setTitle: (e) => {this.setState({title: e})},\n    };\n  }\n\n  handleSubmit (event: any) {\n   \n    event.preventDefault();\n    fetch(`${API_URL}/events/`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        events: {\n          date: this.state.date,\n          title: this.state.title,\n          description: this.state.description,\n          hours: this.state.hours,\n          location: this.state.location,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken\n      }),\n    }).then((response) => {\n      if (response.status === 200) {\n        // console.log(\"Event submission was successful\");\n        // this.state.setEventUpdate(true);\n        // set each prop to empty\n        // this.state.setDate(\"\");\n        // this.state.setHours(0);\n        // this.state.setTitle(\"\");\n        // this.state.setDescription(\"\");\n        // this.state.setLocation(\"\");\n        // this.props.setOpen(false);\n        this.props.fetchEvents();\n      } else {\n        console.log(\"Event submission failed\");\n      }\n      return response.json();\n    });\n  };\n\n  // checkForEventEntry () {\n  //   if (this.state.eventUpdate){\n  //     return <Redirect to=\"/adminDash\"/>\n  //   }\n  // }\n\n  // handleClickClose () {\n  //   this.props.toggleOpen();\n  // };\n\n  render() {\n    return (\n      <Dialog open={this.props.open}>\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography\n            className=\"adminTitle\"\n            component=\"h2\"\n            variant=\"h5\"\n            style={{ textAlign: \"center\" }}\n          >\n            Add Event\n          </Typography>\n        </DialogTitle>\n        <form onSubmit={this.handleSubmit} noValidate>\n        <DialogContent>\n         \n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <form noValidate>\n                  <TextField\n                     \n                    id=\"date\"\n                    label=\"Date of Service\"\n                    type=\"date\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    onChange={(e) => {\n                      this.setState({ date: e.target.value });\n                    }}\n                    defaultValue={this.state.date}\n                  />\n                </form>\n              </Grid>\n              <Grid item xs={12} sm={6}></Grid>\n              <Grid item xs={12}>\n                <FormControl style={{ minWidth: 160 }}>\n                  <TextField\n                      autoComplete=\"off\"\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Title of Event\"\n                    type=\"text\"\n                    fullWidth\n                    onChange={(e) => {\n                      this.setState({ title: e.target.value });\n                    }}\n                    defaultValue={this.state.title}\n                  />\n                  <TextField\n                      autoComplete=\"off\"\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Location\"\n                    type=\"text\"\n                    fullWidth\n                    onChange={(e) => {\n                      this.setState({ location: e.target.value });\n                    }}\n                    defaultValue={this.state.location}\n                  />\n                </FormControl>{\" \"}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                    autoComplete=\"off\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Event Description\"\n                  type=\"text\"\n                  onChange={(e) => {\n                    this.setState({ description: e.target.value });\n                  }}\n                  defaultValue={this.state.description}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl\n                  style={{\n                    minWidth: 160,\n                    marginBottom: \"25px\",\n                  }}\n                >\n                  <InputLabel id=\"demo-simple-select-label\">\n                    Number of Hours\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    onChange={(e) => {\n                      this.setState({ hours: e.target.value as number });\n                    }}\n                    defaultValue={1}\n                  >\n                    <MenuItem value={1}>1</MenuItem>\n                    <MenuItem value={2}>2</MenuItem>\n                    <MenuItem value={3}>3</MenuItem>\n                  </Select>\n                </FormControl>{\" \"}\n              </Grid>\n            </Grid>\n\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  this.props.toggleOpen()\n                }}\n              >\n                Cancel\n              </Button>\n             \n                <Button\n              \n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n       \n            </DialogActions>\n            <Grid container justify=\"flex-end\"></Grid>\n     \n        </DialogContent> </form>\n        {/* {this.checkForEventEntry()} */}\n      </Dialog>\n    );\n  }\n}\n\nexport default AddEvent;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/EditStudentAccounts.tsx",["235","236"],"import React, { FormEvent } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Redirect } from \"react-router-dom\";\n\nimport API_URL from \"../../environment\";\n\nimport { StudentUser } from \"../types\";\n\ninterface AcceptedProps extends StudentUser {\n  fetchTeacherData: any;\n\n  sessionToken: string;\n  \n  toggle: () => void;\n  open: boolean;\n};\n\n// type myState = {\n//   // previousPassword: string;\n \n\n//   // update: boolean;\n//   // setUpdate: (e: any) => void;\n//   firstName: string;\n//   lastName: string;\n//   email: string;\n//   password: string;\n// };\n\n// might not be the most correct approach but it is illustrative of Partial types\ntype ESAState = Partial<StudentUser>\n\n// type studentUser = {\n//   firstName: string;\n//   lastName: string;\n//   email: string;\n//   password?: string;\n// };\n\nclass EditStudentAccounts extends React.Component<AcceptedProps, ESAState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      firstName: this.props.firstName,\n      lastName: this.props.lastName,\n      email: this.props.email,\n      password: ''\n    };\n  }\n\n\n\n  handleSubmit = (e: FormEvent) => {\n    e.preventDefault()\n    \n    // const studentUser: Partial<StudentUser> = {\n    //   firstName: this.state.firstName,\n    //   lastName: this.state.lastName,\n    //   email: this.state.email,\n    //   password: this.state.password\n    // };\n\n    // if (this.props.password !== this.props.userId.password && this.props.password !== \"\") {\n    //   studentUser.password = this.props.password;\n    // } \n    \n    // console.log(studentUser)\n    fetch(`${API_URL}/user/${this.props.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        studentUser: this.state\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        // this.state.setUpdate(true);\n\n        this.props.fetchTeacherData();\n        // this.props.setOpen(false);\n      });\n  };\n\n  //WHY ISN'T THIS REDIRECT WORKING?\n  // checkForUpdate = () => {\n  //   if (this.state.update) {\n  //     return <Redirect to=\"/adminDash\" />;\n  //   }\n  //   console.log(this.state.update);\n  // };\n\n  render() {\n    return (\n      <Dialog open={this.props.open}>\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography\n            className=\"adminTitle\"\n            component=\"h2\"\n            variant=\"h5\"\n            style={{ textAlign: \"center\" }}\n          >\n            Edit Student User Information\n          </Typography>\n        </DialogTitle>\n        <form onSubmit={this.handleSubmit} noValidate>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"First Name\"\n              type=\"text\"\n              fullWidth\n              onChange={(e) => {\n                this.setState({ firstName: e.target.value });\n              }}\n              defaultValue={this.state.firstName}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Last Name\"\n              type=\"text\"\n              fullWidth\n              onChange={(e) => {\n                this.setState({ lastName: e.target.value });\n              }}\n              defaultValue={this.state.lastName}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n              onChange={(e) => {\n                this.setState({ email: e.target.value });\n              }}\n              defaultValue={this.state.email}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Password\"\n              type=\"password\"\n              fullWidth\n              onChange={(e) => {\n                this.setState({ password: e.target.value });\n              }}\n              defaultValue={this.state.password} // empty by default\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={this.props.toggle}\n            >\n              Cancel\n            </Button>\n            <Button type=\"submit\">Submit</Button>\n          </DialogActions>\n        </form>\n        {/* {this.checkForUpdate()} */}\n\n      </Dialog>\n    );\n  }\n}\n\nexport default EditStudentAccounts;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Sitebar/Sitebar.tsx",["237","238","239"],"import React, { Component } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport API_URL from \"../../environment\";\n\n// type myState = {\n//   anchorE1: any;\n//   setAnchorE1: (e: any) => void;\n// };\ntype AcceptedProps = {\n  backArrowToggle: any;\n  // arrowHandler: any;\n  clearToken: any;\n  sessionToken: any;\n};\n\ntype myState = {\n  anchorE1: any;\n  anchorOriginVertical: any;\n  anchorOriginHorizontal: any;\n  transformOriginVertical: any;\n  transformOriginHorizontal: any;\n  anchorReference: any;\n};\n\nclass Sitebar extends React.Component<AcceptedProps, myState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      anchorE1: null,\n      anchorOriginVertical: \"bottom\",\n      anchorOriginHorizontal: \"right\",\n      transformOriginVertical: \"top\",\n      transformOriginHorizontal: \"right\",\n      anchorReference: \"anchorEl\",\n    };\n  }\n\n  deleteUser = async()=>{\n    try{\n      const response= await \n          fetch(`${API_URL}/user/delete`,{\n                method: 'DELETE',\n                headers: new Headers({\n                    'Content-Type': 'application/json',\n                    'Authorization': this.props.sessionToken\n                })\n            })\n            const json= await response.json()\n            console.log(json)\n            console.log('Profile is deleted')\n    }\n    catch(err){\n      console.log(err)\n    }\n    try{\n        \n      const response= await \n      fetch(`${API_URL}/teacherUser/deleteclassentries`,{\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        const json= await response.json()\n        console.log(json)\n        console.log('Class entries are deleted')\n    }\n    catch(err){\n      console.log(err)\n    }\n  \n  \n  \n  }\n\n  checkForToken = () => {\n    if (!this.props.sessionToken) {\n      return <Redirect to=\"/\" />;\n    } else {\n      return console.log(\"hello\");\n    }\n  };\n\n  handleMenu = (e: any) => {\n    this.setState({ anchorE1: e.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorE1: null });\n  };\n\n  render() {\n    const { anchorE1 } = this.state;\n    const open = Boolean(this.state.anchorE1);\n    return (\n      <React.Fragment>\n        <AppBar style={{backgroundColor:\"white\"}}  >\n          <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          \n            {this.props.backArrowToggle === true ? (\n              <Link to=\"/myDashboard\">\n                <IconButton>\n                  <ArrowBackIcon style={{ color: \"black\" }} />\n                </IconButton>\n              </Link>\n            ) : (\n              <IconButton className=\"signupTitle\" style={{fontSize: \"20px\"}}\n           \n             \n           >ServiceTracker</IconButton>\n            )}\n\n          \n            <div>\n              <IconButton onClick={this.handleMenu}>\n                <MenuIcon style={{color:\"black\"}} />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorE1}\n                open={open}\n                onClose={this.handleClose}\n              >\n                <MenuItem\n                  onClick={() => {\n                    this.props.clearToken();\n                  }}\n                >\n                  Logout \n                </MenuItem>\n                <MenuItem   onClick={() => {\n                    this.deleteUser();\n                    this.props.clearToken();\n                  }}>Delete Account</MenuItem>\n              </Menu>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {this.checkForToken()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Sitebar;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/Sitebar/AdminSitebar.tsx",["240","241","242","243"],"import React, { Component } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { Redirect } from \"react-router-dom\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Link } from \"react-router-dom\";\nimport Menu from \"@material-ui/core/Menu\";\nimport API_URL from \"../../environment\";\n\ntype AcceptedProps = {\n  backArrowToggle: any;\n  // arrowHandler: any;\n  clearToken: () => void;\n  sessionToken: string | null;\n  // setViewManageHours:  (e: any) => void;\n  // setViewStudentAccount:  (e: any) => void;\n  // setViewEventSchedule:  (e: any) => void;\n  // setViewSearch:  (e: any) => void;\n};\n\ntype myState = {\n  anchorE1: any;\n  anchorOriginVertical: any;\n  anchorOriginHorizontal: any;\n  transformOriginVertical: any;\n  transformOriginHorizontal: any;\n  anchorReference: any;\n};\n\nclass AdminSitebar extends React.Component<AcceptedProps, myState> {\n  constructor(props: AcceptedProps) {\n    super(props);\n    this.state = {\n      anchorE1: null,\n      anchorOriginVertical: \"bottom\",\n      anchorOriginHorizontal: \"right\",\n      transformOriginVertical: \"top\",\n      transformOriginHorizontal: \"right\",\n      anchorReference: \"anchorEl\",\n    };\n  }\n\n  deleteUser = async()=>{\n    try{\n      const response= await \n          fetch(`${API_URL}/teacherUser/deleteadmin`,{\n                method: 'DELETE',\n                headers: new Headers({\n                    'Content-Type': 'application/json',\n                    'Authorization': this.props.sessionToken as string\n                })\n            })\n            const json= await response.json()\n            console.log(json)\n            console.log('Teacher is deleted')\n         \n        \n    }\n    catch(err){\n      console.log(err)\n    }\n    try{\n        \n      const response= await \n      fetch(`${API_URL}/teacherUser/deleteclass`,{\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        const json= await response.json()\n        console.log(json)\n        console.log('Class is deleted')\n    }\n    catch(err){\n      console.log(err)\n    }\n    try{\n        \n      const response= await \n      fetch(`${API_URL}/teacherUser/deleteclassentries`,{\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        })\n        const json= await response.json()\n        console.log(json)\n        console.log('Class entries are deleted')\n    }\n    catch(err){\n      console.log(err)\n    }\n  \n  }\n  \n  checkForToken = () => {\n    if (!this.props.sessionToken) {\n      return <Redirect to=\"/\" />;\n    } else {\n      return console.log(\"hello\");\n    }\n  };\n\n\n  handleMenu = (e: any) => {\n    this.setState({ anchorE1: e.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorE1: null });\n  };\n\n\n  render() {\n    const { anchorE1 } = this.state;\n    const open = Boolean(this.state.anchorE1);\n    return (\n      <>\n        <AppBar style={{backgroundColor:\"white\"}} position=\"absolute\">\n          <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <IconButton className=\"signupTitle\" style={{fontSize: \"20px\"}}\n             onClick={() => {\n              // this.props.setViewSearch(false );\n              // this.props.setViewManageHours(false );\n              // this.props.setViewEventSchedule(false );\n              // this.props.setViewStudentAccount(false );\n           \n            }}\n          \n            \n          >ServiceTracker</IconButton>\n            \n\n{/*       \n            {this.props.backArrowToggle === true ? (\n              <Link to=\"/adminDash\">\n                <IconButton>\n                  <ArrowBackIcon style={{ color: \"black\" }} />\n                </IconButton>\n                \n              </Link>\n            ) : (\n              <div></div>\n            )} */}\n          \n            <div>\n        \n              <IconButton onClick={this.handleMenu}>\n                <MenuIcon style={{color:\"black\"}} />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorE1}\n                open={open}\n                onClose={this.handleClose}\n              >\n                <MenuItem\n                  onClick={() => {\n                    this.props.clearToken();\n                  }}\n                >\n                  Logout\n                </MenuItem>\n                <MenuItem onClick={()=>{this.deleteUser();  this.props.clearToken();}}>Delete Account</MenuItem>\n              </Menu>\n            </div>\n          </Toolbar>\n        </AppBar>\n   \n        {this.checkForToken()}\n      </>\n    );\n  }\n}\n\nexport default AdminSitebar;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/StudentLeaderboard/ServiceEntry.tsx",["244","245"],"import React from 'react'\n\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"@material-ui/core/Button\";\n\nimport API_URL from '../../../environment'\nimport { Service } from '../../types'\nimport { triggerAsyncId } from 'async_hooks';\n\n\ntype Statuses = 'Approved' | 'Denied' | 'Pending'\n\ninterface ServiceEntryProps {\n  service: Service;\n  sessionToken: string;\n}\n\n\n\nexport default class ServiceEntry extends React.Component<ServiceEntryProps, Service> {\n  constructor (props: ServiceEntryProps) {\n    super(props)\n    this.state = this.props.service\n  }\n\n  toggleServiceStatus () {\n    if (['Denied', 'Pending'].includes(this.state.status)) {\n      this.setState({ status: 'Approved'})\n      this.handleSubmit('Approved')\n    } else {\n      this.setState({ status: 'Denied'})\n      this.handleSubmit('Denied')\n    }\n  }\n\n  handleSubmit (newStatus: string) {\n    try {\n      fetch(`${API_URL}/service/status/${this.state.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          service: {\n            status: newStatus,\n          },\n        }),\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          Authorization: this.props.sessionToken,\n        }),\n      });\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  getStyle () {\n    // return {\n    //   Approved: {\n    //     icon: faCheckSquare,\n    //     color: '#06d6a0'\n    //   },\n    //   Denied: {\n    //     icon: faTimesCircle,\n    //     color: '#ef476f'\n    //   },\n    //   Pending: {\n    //     icon: faQuestionCircle,\n    //     color: '#ffd166'\n    //   }\n    // }[this.state.status as Statuses]\n\n    switch (this.state.status) {\n      case 'Approved':\n        return {\n          icon: faCheckSquare,\n          color: '#06d6a0'\n        }\n      case 'Denied':\n        return {\n          icon: faTimesCircle,\n          color: '#ef476f'\n        }\n      case 'Pending':\n      default:\n        return {\n          icon: faQuestionCircle,\n          color: '#ffd166'\n        }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <TableRow>\n          <TableCell\n            style={{ width: \"200px\", fontSize: \"11px\" }}\n          >\n            {this.state.hours} hour(s) on {this.state.date} <br></br>\n          </TableCell>\n          <TableCell style={{ width: \"200px\" }}>\n            {this.state.description}\n          </TableCell>\n          <TableCell>\n            <Button>\n\n              <FontAwesomeIcon\n                onClick={() => {\n                  this.toggleServiceStatus()\n                }}\n                style={{\n                  color: this.getStyle().color,\n                  fontSize: '20px'\n                }}\n                icon={this.getStyle().icon} />\n\n            </Button>\n          </TableCell>\n        </TableRow>\n      </>\n    )\n  }\n}","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/StudentLeaderboard/StudentEntry.tsx",[],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/StudentLeaderboard/StudentLeaderboard.tsx",[],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/StudentLeaderboard/StudentProfile.tsx",["246"],"import React from \"react\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport API_URL from \"../../../environment\";\nimport ServiceEntry from \"./ServiceEntry\";\n\nimport { StudentUser, Service } from '../../types'\n\ntype StudentProfileProps = {\n  sessionToken: string;\n  toggleOpen: () => void;\n  open: boolean;\n  user: StudentUser;\n  fetchUsers: () => void;\n};\n\n\n\nclass StudentProfile extends React.Component<StudentProfileProps, {}> {\n\n  render() {\n    return (\n      <Dialog open={this.props.open}>\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography\n            className=\"adminTitle\"\n            component=\"h2\"\n            variant=\"h5\"\n            style={{ textAlign: \"center\" }}\n          >\n            {this.props.user.firstName}{\" \"}\n            {this.props.user.lastName}\n          </Typography>\n        </DialogTitle>\n        <form noValidate>\n          <DialogContent style={{ padding: \" 0px 15px\" }}>\n            <TableContainer style={{ marginTop: \"15px\" }}>\n              <Table style={{ width: \"auto\" }}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Date </TableCell>\n                    <TableCell>Description</TableCell>\n\n                    <TableCell>Status</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    this.props.user.services\n                        .sort((a, b) => (new Date(b.date)).getTime() - (new Date(a.date)).getTime())\n                        .map((service: Service, index: number) =>\n                          <ServiceEntry\n                            key={index}\n                            service={service} \n                            sessionToken={this.props.sessionToken} />)\n                  }\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                this.props.toggleOpen();\n              }}\n            >\n              CLOSE\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    );\n  }\n}\n\nexport default StudentProfile;\n","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/Event.tsx",[],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/StudentView/StudentDashboard/StudentViewDashboard/ChartEntry.tsx",["247"],"import { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\n// import { faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport API_URL from \"../../../../environment\";\n\nimport { Service } from '../../../types'\n\ntype ChartEntryProps = Service & {\n  sessionToken: string;\n  fetchServiceRequests: () => void;\n  open: boolean;\n}\n\nexport default class ChartEntry extends Component<ChartEntryProps, {}> {\n\n\n\n\n  async deleteEntry () {\n    try {\n      const response = await fetch(\n        `${API_URL}/service/${this.props.id}`,\n        {\n          method: \"DELETE\",\n          headers: new Headers({\n            \"Content-Type\": \"application/json\",\n            Authorization: this.props.sessionToken,\n          }),\n        }\n      );\n      console.log(await response.json())\n      \n      this.props.fetchServiceRequests();\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  render () {\n    return (\n      <>\n\n        <TableRow style={{ height: \"45px\", marginRight: \"3px\", marginLeft: \"3px\" }}>\n          <TableCell></TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n\n            // onClick={(e) => {\n\n            //   this.state.itemId !==\n            //     this.props.id\n            //     ? this.setState({\n            //       itemId: this.props.id,\n            //     })\n            //     : this.setState({ itemId: 100 });\n\n            //   this.props.setSpecificEntry(\n            //     this.props.serviceRequests[index]\n            //   );\n\n            //   this.props.setIndexNumber(\n            //     this.props.serviceRequests[index].id\n            //   );\n\n\n\n\n\n\n\n            // }}\n          >\n            {/* {this.props.id ===\n              this.state.itemId ? ( */}\n              <KeyboardArrowUpIcon />\n            {/* ) : (\n              <KeyboardArrowDownIcon />\n            )} */}\n          </IconButton>\n          <TableCell align=\"left\">\n            {\" \"}\n            {this.props.date}\n          </TableCell>\n\n          <TableCell align=\"left\">\n            {this.props.typeOfService}{\" \"}\n          </TableCell>\n          <Hidden xsDown>       <TableCell align=\"center\">\n            {this.props.hours}{\" \"}\n          </TableCell></Hidden>\n\n          <TableCell align=\"center\" > {this.props.status === \"Denied\" ?\n\n            <FontAwesomeIcon\n              style={{\n                backgroundColor: \"white\",\n                fontSize: \"20px\",\n                color: \"#ef476f\"\n              }}\n              icon={faTimesCircle}\n            />\n\n            : this.props.status === \"Approved\" ?\n\n              <FontAwesomeIcon\n                style={{\n                  color: \"#06d6a0\",\n                  fontSize: \"20px\",\n                }}\n                icon={faCheckSquare}\n              />\n\n              : <FontAwesomeIcon\n                style={{\n                  color: \"#ffd166\",\n                  fontSize: \"20px\",\n                }}\n                icon={faQuestionCircle}\n              />\n\n\n\n          }\n\n\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell\n            className=\"noPadding\"\n            style={{ paddingBottom: 0, paddingTop: 0 }}\n            colSpan={6}\n            onClick={() => {\n              this.setState({\n                itemId: this.props.id,\n              })\n            }\n            }\n\n          >\n            <Collapse\n              in={\n                this.props.open\n              }\n              timeout=\"auto\"\n              unmountOnExit\n            >\n              <Box style={{ padding: \"5px\" }} margin={1}>\n                <Box className=\"editIcon\">\n                  <h5 style={{ marginRight: \"auto\" }}>Details</h5>\n\n                  <Link to=\"/editservice\">\n                    <EditIcon style={{ marginRight: \"10px\" }} />\n                  </Link>\n                  <DeleteIcon\n                    onClick={() => {\n                      this.deleteEntry();\n                    }}\n                  />\n                </Box>\n\n                <p style={{ padding: \"15px\" }}>\n                  <Hidden smUp>\n                    Hours: {this.props.hours} <br></br> Description:\n                   </Hidden>\n                  {this.props.description}\n                </p>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      </>\n    )\n  }\n}","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/Events/EventScheduleItem.tsx",["248"],"import { Component } from 'react'\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AddEvents from \"./AddEvents\";\nimport UpdateEvent from \"./UpdateEvents\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport API_URL from \"../../../environment\";\n\nimport { Event } from '../../types'\n\n\ninterface ESIProps extends Event {\n  sessionToken: string;\n  fetchEvents: () => void;\n}\n\ninterface ESIState {\n  updateOpen: boolean;\n}\n\nexport default class EventScheduleItem extends Component<ESIProps, ESIState> {\n  constructor (props: ESIProps) {\n    super(props)\n    this.state = {\n      updateOpen: false\n    }\n    this.toggleUpdateOpen = this.toggleUpdateOpen.bind(this)\n    this.deleteEvent = this.deleteEvent.bind(this)\n  }\n\n  toggleUpdateOpen () {\n    this.setState({ updateOpen: !this.state.updateOpen })\n  }\n\n  async deleteEvent (id: number) {\n    try {\n      const response = await fetch(`${API_URL}/events/${id}`, {\n        method: \"DELETE\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          Authorization: this.props.sessionToken,\n        }),\n      });\n      const json = await response.json();\n      console.log(json);\n\n\n      this.props.fetchEvents();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n\n  render() {\n    return (\n      <Accordion\n        style={{ margin: \"0px\", backgroundColor: \"white\" }}\n        square\n      >\n        <AccordionSummary\n          aria-controls=\"panel1d-content\"\n          id=\"panel1d-header\"\n        >\n          <Typography style={{ marginLeft: \"5px\" }}>\n            {this.props.date}\n\n\n\n          </Typography>\n          <Typography style={{ marginLeft: \"55px\" }}>\n\n            {this.props.title} <br></br>\n\n\n          </Typography>\n\n          <div style={{ marginLeft: \"auto\" }}>\n            {/* On this icon a few things are happening:\n                  1. The modal opens. \n                  2. I'm storing the value of the index to a variable, so I can use this in UpdateEvents.tsx \n                  3. I'm sending the id of this entry to fetchEventRequests, so I can collect & store all info related to this id */}\n            <EditIcon\n              onClick={() => {\n                this.toggleUpdateOpen()\n\n                // this.state.setEventInfoIndex(\n                //   this.state.eventInfo[index]\n                // );\n                // this.fetchEventRequests(\n                //   this.state.eventInfo[index]?.id\n                // );\n\n              }}\n            />\n            {/* To get the delete icon working, I need to be able to access the id of the specific event. I do this by passing the id into the deleteEvent function as an argument.  */}\n            <DeleteIcon\n              onClick={() => {\n                try {\n                  this.deleteEvent(this.props.id);\n\n                } catch (err) {\n                  console.log(err);\n                }\n              }}\n            />\n\n            <div>\n              <UpdateEvent\n                {...this.props}\n                // sessionToken={this.props.sessionToken}\n                // fetchEvents={this.props.fetchEvents}\n                open={this.state.updateOpen}\n                toggle={this.toggleUpdateOpen}\n              />\n              {/* <AddEvents\n                fetchEvents={this.fetchEvents}\n                open={this.state.open}\n                eventInfo={this.state.eventInfo}\n                setOpen={this.state.setOpen}\n                sessionToken={this.props.sessionToken}\n              /> */}\n            </div>\n          </div>\n        </AccordionSummary>\n        <AccordionDetails style={{ padding: \"0px 30px\" }}>\n          <Typography>\n            <p style={{ fontSize: \"12px\", marginRight: \"45px\" }}>\n              Location: {this.props.location}\n\n            </p>\n          </Typography>\n          <Typography>\n            <p style={{ fontSize: \"12px\" }}>\n\n              Hours:     {this.props.hours}\n            </p>\n          </Typography>\n          {/* <Typography>\n                    <p style={{ fontSize: \"12px\", marginLeft: \"100px\" }}>\n                      Location:{\" \"}\n                    </p>\n                  </Typography> */}\n\n        </AccordionDetails>\n        <AccordionDetails>\n\n\n\n        </AccordionDetails>\n\n        <AccordionDetails style={{ padding: \"0px 30px\" }}>\n          <Typography>\n            <p style={{ fontSize: \"12px\" }}>Event Description:</p>\n          </Typography>\n        </AccordionDetails>\n        <AccordionDetails>\n          <Typography>\n            <p style={{ fontSize: \"12px\", padding: \"0px 15px\" }}>\n              {\" \"}\n              {this.props.description}\n            </p>\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n    )\n  }\n}","/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/ManageAccount.tsx",[],"/home/winfield/1150/studentrepos/bushong/serviceTracker/src/Components/AdminView/ManageHoursEntry.tsx",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263"],"import { Component } from 'react'\n\nimport Box from \"@material-ui/core/Box\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport AdminSitebar from \"../Sitebar/AdminSitebar\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API_URL from \"../../environment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUndo } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Service, ServiceStatus } from '../types';\n\n\ninterface MHEProps extends Service {\n  sessionToken: string;\n  statusView: ServiceStatus;\n  fetchServiceRequests: (type?: ServiceStatus) => void;\n}\n\ninterface MHEState {\n  // statusView: ServiceStatus;\n}\n\nexport default class ManageHoursEntry extends Component<MHEProps, MHEState> {\n\n  constructor (props: MHEProps) {\n    super(props)\n    this.state = {\n      // statusView: 'Approved'\n    }\n  }\n\n  async handleSubmit (newStatus: ServiceStatus) {\n    // id.preventDefault();\n\n    const response = await fetch(`${API_URL}/service/status/${this.props.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        service: {\n          status: newStatus,\n        },\n      }),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.sessionToken,\n      }),\n    })\n\n    if (response.status === 200) {\n        console.log(\"Service status update submission was successful\");\n        // this.state.setUpdate(true);\n        this.props.fetchServiceRequests();\n    } else {\n        console.log(\"Service status update submission failed\");\n    }\n    return response.json();\n    \n  };\n\n\n  render() {\n    return (\n      <>\n        <TableRow\n          style={{\n            height: \"45px\",\n            marginRight: \"3px\",\n            marginLeft: \"3px\",\n          }}\n        >\n          <TableCell\n            align=\"left\"\n            style={{ marginLeft: \"50px\" }}\n          ></TableCell>\n\n          <TableCell></TableCell>\n\n          <TableCell align=\"left\" style={{ fontSize: \"11px\", width: \"100px\" }}>\n            {this.props.hours}\n            {\" hour(s) \"} <br></br> {\"on \"}{this.props.date}{\" \"}\n            <br></br>\n            <br></br>\n          </TableCell>\n          <TableCell style={{ fontSize: \"12px\" }}>\n            {\" \"}\n            <h4 style={{ marginRight: \"0px\" }}>\n              {\n                this.props.studentUser?.firstName\n              }{\" \"}\n              {\n                this.props.studentUser?.lastName\n              }\n              {\"\"}{\" \"}\n            </h4>{\" \"}\n            {this.props.description}\n          </TableCell>\n          {this.props.statusView === \"Pending\" ? (\n            <TableCell align=\"center\" className=\"tableWidth\">\n              <Button\n                className=\"buttonMargin\"\n                style={{\n                  backgroundColor: \"#06d6a0\",\n                  marginTop: \"5px\",\n                  color: \"white\",\n                  marginBottom: \"5px\"\n\n\n                }}\n                variant=\"contained\"\n                onClick={() => {\n                  this.setState({ status: \"Approved\" });\n                  this.handleSubmit('Approved');\n                }}\n              >\n                <FontAwesomeIcon\n                  style={{\n\n                    fontSize: \"20px\",\n                  }}\n                  icon={faCheckSquare}\n                />\n              </Button>\n\n              <Button\n                className=\"buttonMargin\"\n                style={{\n                  backgroundColor: \"#ef476f\",\n                  height: \"40px\",\n                  color: \"white\",\n\n                }}\n                variant=\"contained\"\n                onClick={() => {\n                  this.setState({ status: \"Denied\" });\n                  this.handleSubmit('Denied');\n                }}\n              >\n                <FontAwesomeIcon\n                  style={{\n\n                    fontSize: \"20px\",\n                  }}\n                  icon={faTimesCircle}\n                />\n              </Button>\n            </TableCell>\n          ) : (\n            <TableCell align=\"center\">\n              <Button\n                style={{\n                  backgroundColor: \"#ffd166\",\n\n                  marginRight: \"20px\",\n                  marginLeft: \"10px\",\n                  width: \"80px\",\n                  height: \"40px\",\n                }}\n                variant=\"contained\"\n                onClick={() => {\n                  this.setState({ status: \"Pending\" });\n                  this.handleSubmit('Pending');\n                }}\n              //add a second parameter & use that parameter as ternary in handlesubmit3\n              >\n                <FontAwesomeIcon\n                  style={{\n\n                    fontSize: \"15px\",\n                  }}\n                  icon={faUndo}\n                />\n              </Button>\n            </TableCell>\n          )}\n        </TableRow>\n        <TableRow></TableRow>\n      </>\n    )\n  }\n}",{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":13},{"ruleId":"268","severity":1,"message":"272","line":13,"column":8,"nodeType":"270","messageId":"271","endLine":13,"endColumn":26},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"274","line":9,"column":10,"nodeType":"270","messageId":"271","endLine":9,"endColumn":18},{"ruleId":"268","severity":1,"message":"275","line":42,"column":10,"nodeType":"270","messageId":"271","endLine":42,"endColumn":19},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"275","line":16,"column":10,"nodeType":"270","messageId":"271","endLine":16,"endColumn":19},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"274","line":9,"column":10,"nodeType":"270","messageId":"271","endLine":9,"endColumn":18},{"ruleId":"268","severity":1,"message":"275","line":18,"column":10,"nodeType":"270","messageId":"271","endLine":18,"endColumn":19},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"274","line":9,"column":10,"nodeType":"270","messageId":"271","endLine":9,"endColumn":18},{"ruleId":"268","severity":1,"message":"275","line":20,"column":10,"nodeType":"270","messageId":"271","endLine":20,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":173,"column":17,"nodeType":"278","endLine":173,"endColumn":56},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":52,"column":35,"nodeType":"278","endLine":52,"endColumn":99},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"279","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":53,"column":35,"nodeType":"278","endLine":53,"endColumn":99},{"ruleId":"280","severity":1,"message":"281","line":70,"column":13,"nodeType":"278","endLine":70,"endColumn":41},{"ruleId":"268","severity":1,"message":"273","line":1,"column":16,"nodeType":"270","messageId":"271","endLine":1,"endColumn":25},{"ruleId":"268","severity":1,"message":"282","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":17},{"ruleId":"268","severity":1,"message":"283","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":24},{"ruleId":"268","severity":1,"message":"284","line":4,"column":8,"nodeType":"270","messageId":"271","endLine":4,"endColumn":24},{"ruleId":"268","severity":1,"message":"285","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":18},{"ruleId":"268","severity":1,"message":"286","line":6,"column":8,"nodeType":"270","messageId":"271","endLine":6,"endColumn":15},{"ruleId":"268","severity":1,"message":"274","line":7,"column":10,"nodeType":"270","messageId":"271","endLine":7,"endColumn":18},{"ruleId":"268","severity":1,"message":"287","line":8,"column":8,"nodeType":"270","messageId":"271","endLine":8,"endColumn":14},{"ruleId":"268","severity":1,"message":"288","line":9,"column":8,"nodeType":"270","messageId":"271","endLine":9,"endColumn":19},{"ruleId":"268","severity":1,"message":"289","line":10,"column":8,"nodeType":"270","messageId":"271","endLine":10,"endColumn":18},{"ruleId":"268","severity":1,"message":"290","line":11,"column":8,"nodeType":"270","messageId":"271","endLine":11,"endColumn":21},{"ruleId":"268","severity":1,"message":"291","line":12,"column":10,"nodeType":"270","messageId":"271","endLine":12,"endColumn":14},{"ruleId":"268","severity":1,"message":"292","line":13,"column":8,"nodeType":"270","messageId":"271","endLine":13,"endColumn":16},{"ruleId":"268","severity":1,"message":"293","line":14,"column":8,"nodeType":"270","messageId":"271","endLine":14,"endColumn":18},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"294","line":3,"column":10,"nodeType":"270","messageId":"271","endLine":3,"endColumn":16},{"ruleId":"268","severity":1,"message":"295","line":4,"column":10,"nodeType":"270","messageId":"271","endLine":4,"endColumn":18},{"ruleId":"268","severity":1,"message":"274","line":10,"column":10,"nodeType":"270","messageId":"271","endLine":10,"endColumn":18},{"ruleId":"276","severity":1,"message":"277","line":383,"column":39,"nodeType":"278","endLine":383,"endColumn":82},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"296","line":120,"column":9,"nodeType":"270","messageId":"271","endLine":120,"endColumn":34},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"274","line":16,"column":10,"nodeType":"270","messageId":"271","endLine":16,"endColumn":18},{"ruleId":"268","severity":1,"message":"297","line":18,"column":10,"nodeType":"270","messageId":"271","endLine":18,"endColumn":17},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"274","line":2,"column":10,"nodeType":"270","messageId":"271","endLine":2,"endColumn":18},{"ruleId":"268","severity":1,"message":"298","line":2,"column":8,"nodeType":"270","messageId":"271","endLine":2,"endColumn":12},{"ruleId":"268","severity":1,"message":"299","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":16},{"ruleId":"268","severity":1,"message":"300","line":3,"column":20,"nodeType":"270","messageId":"271","endLine":3,"endColumn":33},{"ruleId":"268","severity":1,"message":"301","line":4,"column":8,"nodeType":"270","messageId":"271","endLine":4,"endColumn":20},{"ruleId":"268","severity":1,"message":"302","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":20},{"ruleId":"268","severity":1,"message":"303","line":8,"column":8,"nodeType":"270","messageId":"271","endLine":8,"endColumn":20},{"ruleId":"268","severity":1,"message":"304","line":9,"column":8,"nodeType":"270","messageId":"271","endLine":9,"endColumn":25},{"ruleId":"268","severity":1,"message":"292","line":10,"column":8,"nodeType":"270","messageId":"271","endLine":10,"endColumn":16},{"ruleId":"268","severity":1,"message":"293","line":11,"column":8,"nodeType":"270","messageId":"271","endLine":11,"endColumn":18},{"ruleId":"268","severity":1,"message":"274","line":12,"column":10,"nodeType":"270","messageId":"271","endLine":12,"endColumn":18},{"ruleId":"268","severity":1,"message":"305","line":14,"column":8,"nodeType":"270","messageId":"271","endLine":14,"endColumn":13},{"ruleId":"268","severity":1,"message":"305","line":10,"column":8,"nodeType":"270","messageId":"271","endLine":10,"endColumn":13},{"ruleId":"268","severity":1,"message":"288","line":11,"column":8,"nodeType":"270","messageId":"271","endLine":11,"endColumn":19},{"ruleId":"268","severity":1,"message":"303","line":12,"column":8,"nodeType":"270","messageId":"271","endLine":12,"endColumn":20},{"ruleId":"268","severity":1,"message":"287","line":13,"column":8,"nodeType":"270","messageId":"271","endLine":13,"endColumn":14},{"ruleId":"268","severity":1,"message":"306","line":14,"column":8,"nodeType":"270","messageId":"271","endLine":14,"endColumn":18},{"ruleId":"268","severity":1,"message":"307","line":16,"column":8,"nodeType":"270","messageId":"271","endLine":16,"endColumn":22},{"ruleId":"268","severity":1,"message":"297","line":23,"column":33,"nodeType":"270","messageId":"271","endLine":23,"endColumn":40},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"282","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":17},{"ruleId":"268","severity":1,"message":"283","line":4,"column":8,"nodeType":"270","messageId":"271","endLine":4,"endColumn":24},{"ruleId":"268","severity":1,"message":"284","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":24},{"ruleId":"268","severity":1,"message":"308","line":7,"column":8,"nodeType":"270","messageId":"271","endLine":7,"endColumn":19},{"ruleId":"268","severity":1,"message":"293","line":10,"column":8,"nodeType":"270","messageId":"271","endLine":10,"endColumn":18},{"ruleId":"268","severity":1,"message":"292","line":11,"column":8,"nodeType":"270","messageId":"271","endLine":11,"endColumn":16},{"ruleId":"268","severity":1,"message":"303","line":13,"column":8,"nodeType":"270","messageId":"271","endLine":13,"endColumn":20},{"ruleId":"268","severity":1,"message":"305","line":15,"column":8,"nodeType":"270","messageId":"271","endLine":15,"endColumn":13},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"309","line":1,"column":21,"nodeType":"270","messageId":"271","endLine":1,"endColumn":30},{"ruleId":"268","severity":1,"message":"274","line":17,"column":10,"nodeType":"270","messageId":"271","endLine":17,"endColumn":18},{"ruleId":"268","severity":1,"message":"310","line":7,"column":8,"nodeType":"270","messageId":"271","endLine":7,"endColumn":25},{"ruleId":"268","severity":1,"message":"274","line":10,"column":10,"nodeType":"270","messageId":"271","endLine":10,"endColumn":18},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"285","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":18},{"ruleId":"268","severity":1,"message":"287","line":12,"column":8,"nodeType":"270","messageId":"271","endLine":12,"endColumn":14},{"ruleId":"268","severity":1,"message":"273","line":1,"column":17,"nodeType":"270","messageId":"271","endLine":1,"endColumn":26},{"ruleId":"268","severity":1,"message":"285","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":18},{"ruleId":"268","severity":1,"message":"311","line":8,"column":8,"nodeType":"270","messageId":"271","endLine":8,"endColumn":21},{"ruleId":"268","severity":1,"message":"291","line":11,"column":10,"nodeType":"270","messageId":"271","endLine":11,"endColumn":14},{"ruleId":"268","severity":1,"message":"312","line":13,"column":10,"nodeType":"270","messageId":"271","endLine":13,"endColumn":24},{"ruleId":"268","severity":1,"message":"313","line":16,"column":6,"nodeType":"270","messageId":"271","endLine":16,"endColumn":14},{"ruleId":"268","severity":1,"message":"314","line":17,"column":8,"nodeType":"270","messageId":"271","endLine":17,"endColumn":15},{"ruleId":"268","severity":1,"message":"315","line":9,"column":8,"nodeType":"270","messageId":"271","endLine":9,"endColumn":29},{"ruleId":"268","severity":1,"message":"316","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":17},{"ruleId":"268","severity":1,"message":"317","line":3,"column":8,"nodeType":"270","messageId":"271","endLine":3,"endColumn":11},{"ruleId":"268","severity":1,"message":"318","line":4,"column":8,"nodeType":"270","messageId":"271","endLine":4,"endColumn":13},{"ruleId":"268","severity":1,"message":"319","line":5,"column":8,"nodeType":"270","messageId":"271","endLine":5,"endColumn":17},{"ruleId":"268","severity":1,"message":"320","line":7,"column":8,"nodeType":"270","messageId":"271","endLine":7,"endColumn":22},{"ruleId":"268","severity":1,"message":"321","line":8,"column":8,"nodeType":"270","messageId":"271","endLine":8,"endColumn":17},{"ruleId":"268","severity":1,"message":"305","line":10,"column":8,"nodeType":"270","messageId":"271","endLine":10,"endColumn":13},{"ruleId":"268","severity":1,"message":"288","line":11,"column":8,"nodeType":"270","messageId":"271","endLine":11,"endColumn":19},{"ruleId":"268","severity":1,"message":"303","line":12,"column":8,"nodeType":"270","messageId":"271","endLine":12,"endColumn":20},{"ruleId":"268","severity":1,"message":"306","line":14,"column":8,"nodeType":"270","messageId":"271","endLine":14,"endColumn":18},{"ruleId":"268","severity":1,"message":"322","line":15,"column":8,"nodeType":"270","messageId":"271","endLine":15,"endColumn":16},{"ruleId":"268","severity":1,"message":"307","line":16,"column":8,"nodeType":"270","messageId":"271","endLine":16,"endColumn":22},{"ruleId":"268","severity":1,"message":"323","line":17,"column":8,"nodeType":"270","messageId":"271","endLine":17,"endColumn":19},{"ruleId":"268","severity":1,"message":"324","line":18,"column":8,"nodeType":"270","messageId":"271","endLine":18,"endColumn":14},{"ruleId":"268","severity":1,"message":"285","line":19,"column":8,"nodeType":"270","messageId":"271","endLine":19,"endColumn":18},{"ruleId":"268","severity":1,"message":"325","line":24,"column":10,"nodeType":"270","messageId":"271","endLine":24,"endColumn":26},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"@typescript-eslint/no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'UpdateServiceHours' is defined but never used.","'Component' is defined but never used.","'Redirect' is defined but never used.","'Copyright' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'Typography' is defined but never used.","'Sitebar' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'AddBoxIcon' is defined but never used.","'EventNoteIcon' is defined but never used.","'Link' is defined but never used.","'EditIcon' is defined but never used.","'DeleteIcon' is defined but never used.","'faHome' is defined but never used.","'faSearch' is defined but never used.","'service' is assigned a value but never used.","'Service' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemProps' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'AdminSitebar' is defined but never used.","'AccountCircleIcon' is defined but never used.","'Paper' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'UpdateEvent' is defined but never used.","'FormEvent' is defined but never used.","'DialogContentText' is defined but never used.","'ArrowBackIcon' is defined but never used.","'triggerAsyncId' is defined but never used.","'Statuses' is defined but never used.","'API_URL' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'AddEvents' is defined but never used.","'Box' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'faQuestionCircle' is defined but never used.","no-global-assign","no-unsafe-negation"]